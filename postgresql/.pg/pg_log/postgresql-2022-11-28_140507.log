2022-11-28 14:05:07.462 UTC [16210] LOG:  starting PostgreSQL 14.5 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 11.3.0, 64-bit
2022-11-28 14:05:07.463 UTC [16210] LOG:  listening on IPv6 address "::1", port 5555
2022-11-28 14:05:07.463 UTC [16210] LOG:  listening on IPv4 address "127.0.0.1", port 5555
2022-11-28 14:05:07.465 UTC [16210] LOG:  listening on Unix socket "/home/edgar/code/Polytech_SI3_S5/postgresql/.pg/.s.PGSQL.5555"
2022-11-28 14:05:07.471 UTC [16212] LOG:  database system was shut down at 2022-11-28 09:36:32 UTC
2022-11-28 14:05:07.477 UTC [16210] LOG:  database system is ready to accept connections
2022-11-28 14:06:34.649 UTC [16328] LOG:  connection received: host=::1 port=53164
2022-11-28 14:06:34.650 UTC [16328] LOG:  connection authorized: user=postgres database=postgres application_name=pgAdmin 4 - DB:postgres
2022-11-28 14:06:34.655 UTC [16328] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:06:34.667 UTC [16328] LOG:  duration: 12.672 ms
2022-11-28 14:06:34.668 UTC [16328] LOG:  statement: SELECT version()
2022-11-28 14:06:34.668 UTC [16328] LOG:  duration: 0.387 ms
2022-11-28 14:06:34.669 UTC [16328] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:06:34.674 UTC [16328] LOG:  duration: 5.830 ms
2022-11-28 14:06:34.675 UTC [16328] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:06:34.677 UTC [16328] LOG:  duration: 1.967 ms
2022-11-28 14:06:34.677 UTC [16328] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:06:34.682 UTC [16328] LOG:  duration: 5.087 ms
2022-11-28 14:06:34.688 UTC [16329] LOG:  connection received: host=::1 port=53172
2022-11-28 14:06:34.689 UTC [16329] LOG:  connection authorized: user=postgres database=postgres application_name=pgAdmin 4 - CONN:2503945
2022-11-28 14:06:34.692 UTC [16329] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:06:34.693 UTC [16329] LOG:  duration: 1.850 ms
2022-11-28 14:06:34.694 UTC [16329] LOG:  statement: SELECT version()
2022-11-28 14:06:34.694 UTC [16329] LOG:  duration: 0.262 ms
2022-11-28 14:06:34.694 UTC [16329] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:06:34.695 UTC [16329] LOG:  duration: 0.913 ms
2022-11-28 14:06:34.696 UTC [16329] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:06:34.696 UTC [16329] LOG:  duration: 0.654 ms
2022-11-28 14:06:34.697 UTC [16329] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:06:34.699 UTC [16329] LOG:  duration: 2.006 ms
2022-11-28 14:06:34.705 UTC [16330] LOG:  connection received: host=::1 port=53184
2022-11-28 14:06:34.706 UTC [16330] LOG:  connection authorized: user=postgres database=postgres application_name=pgAdmin 4 - CONN:7690828
2022-11-28 14:06:34.708 UTC [16330] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:06:34.710 UTC [16330] LOG:  duration: 1.563 ms
2022-11-28 14:06:34.710 UTC [16330] LOG:  statement: SELECT version()
2022-11-28 14:06:34.710 UTC [16330] LOG:  duration: 0.069 ms
2022-11-28 14:06:34.710 UTC [16330] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:06:34.711 UTC [16330] LOG:  duration: 0.443 ms
2022-11-28 14:06:34.711 UTC [16330] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:06:34.711 UTC [16330] LOG:  duration: 0.543 ms
2022-11-28 14:06:34.712 UTC [16330] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:06:34.713 UTC [16330] LOG:  duration: 1.762 ms
2022-11-28 14:06:34.975 UTC [16328] LOG:  statement: 
	SELECT
	    has_table_privilege(
	      'pgagent.pga_job', 'INSERT, SELECT, UPDATE'
	    ) has_priviledge
	WHERE EXISTS(
	    SELECT has_schema_privilege('pgagent', 'USAGE')
	    WHERE EXISTS(
	        SELECT cl.oid FROM pg_catalog.pg_class cl
	        LEFT JOIN pg_catalog.pg_namespace ns ON ns.oid=relnamespace
	        WHERE relname='pga_job' AND nspname='pgagent'
	    )
	)
	
2022-11-28 14:06:34.985 UTC [16328] LOG:  duration: 9.638 ms
2022-11-28 14:06:34.986 UTC [16328] LOG:  statement: SELECT CASE WHEN usesuper
	       THEN pg_catalog.pg_is_in_recovery()
	       ELSE FALSE
	       END as inrecovery,
	       CASE WHEN usesuper AND pg_catalog.pg_is_in_recovery()
	       THEN pg_is_wal_replay_paused()
	       ELSE FALSE
	       END as isreplaypaused
	FROM pg_catalog.pg_user WHERE usename=current_user
2022-11-28 14:06:34.987 UTC [16328] LOG:  duration: 0.913 ms
2022-11-28 14:06:35.765 UTC [16328] LOG:  statement: SELECT
	    db.oid as did, db.datname as name, ta.spcname as spcname, db.datallowconn,
	    db.datistemplate AS is_template,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate, datdba as owner
	FROM
	    pg_catalog.pg_database db
	    LEFT OUTER JOIN pg_catalog.pg_tablespace ta ON db.dattablespace = ta.oid
	WHERE         db.oid > 16383::OID OR db.datname IN ('postgres', 'edb')
	
	ORDER BY datname;
2022-11-28 14:06:35.766 UTC [16328] LOG:  duration: 2.006 ms
2022-11-28 14:06:36.140 UTC [16328] LOG:  statement: SELECT
	    nsp.oid,
	    nsp.nspname as name,
	    pg_catalog.has_schema_privilege(nsp.oid, 'CREATE') as can_create,
	    pg_catalog.has_schema_privilege(nsp.oid, 'USAGE') as has_usage
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	            nspname NOT LIKE 'pg!_%' escape '!' AND
	            NOT (
	(nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1))
	    )
	
	    
	ORDER BY nspname;
2022-11-28 14:06:36.142 UTC [16328] LOG:  duration: 1.597 ms
2022-11-28 14:06:36.231 UTC [16328] LOG:  statement: SELECT
	    nsp.nspname as schema_name,
	    (nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1)) AS is_catalog,
	    CASE
	    WHEN nsp.nspname = ANY('{information_schema}')
	        THEN false
	    ELSE true END AS db_support
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	    nsp.oid = 16832::OID;
2022-11-28 14:06:36.232 UTC [16328] LOG:  duration: 0.661 ms
2022-11-28 14:06:36.537 UTC [16328] LOG:  statement: SELECT rel.oid, rel.relname AS name,
	    (SELECT count(*) FROM pg_catalog.pg_trigger WHERE tgrelid=rel.oid AND tgisinternal = FALSE) AS triggercount,
	    (SELECT count(*) FROM pg_catalog.pg_trigger WHERE tgrelid=rel.oid AND tgisinternal = FALSE AND tgenabled = 'O') AS has_enable_triggers,
	    (CASE WHEN rel.relkind = 'p' THEN true ELSE false END) AS is_partitioned,
	    (SELECT count(1) FROM pg_catalog.pg_inherits WHERE inhrelid=rel.oid LIMIT 1) as is_inherits,
	    (SELECT count(1) FROM pg_catalog.pg_inherits WHERE inhparent=rel.oid LIMIT 1) as is_inherited
	FROM pg_catalog.pg_class rel
	    WHERE rel.relkind IN ('r','s','t','p') AND rel.relnamespace = 16832::oid
	    AND NOT rel.relispartition
	        ORDER BY rel.relname;
2022-11-28 14:06:36.542 UTC [16328] LOG:  duration: 4.928 ms
2022-11-28 14:07:14.050 UTC [16475] LOG:  connection received: host=::1 port=37652
2022-11-28 14:07:14.050 UTC [16475] LOG:  connection authorized: user=postgres database=postgres application_name=pgAdmin 4 - CONN:8309437
2022-11-28 14:07:14.051 UTC [16475] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:07:14.053 UTC [16475] LOG:  duration: 1.257 ms
2022-11-28 14:07:14.053 UTC [16475] LOG:  statement: SELECT version()
2022-11-28 14:07:14.053 UTC [16475] LOG:  duration: 0.060 ms
2022-11-28 14:07:14.053 UTC [16475] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:07:14.053 UTC [16475] LOG:  duration: 0.342 ms
2022-11-28 14:07:14.053 UTC [16475] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:07:14.054 UTC [16475] LOG:  duration: 0.306 ms
2022-11-28 14:07:14.054 UTC [16475] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:07:14.055 UTC [16475] LOG:  duration: 1.512 ms
2022-11-28 14:07:21.145 UTC [16475] LOG:  statement: DROP SCHEMA public CASCADE;
	CREATE SCHEMA public;
	GRANT ALL ON SCHEMA public TO postgres;
	GRANT ALL ON SCHEMA public TO public;
2022-11-28 14:07:21.174 UTC [16475] LOG:  duration: 29.052 ms
2022-11-28 14:08:36.731 UTC [16475] ERROR:  syntax error at or near ";" at character 15
2022-11-28 14:08:36.731 UTC [16475] STATEMENT:  create table x;
	select * from x;
2022-11-28 14:08:46.014 UTC [16475] LOG:  statement: create table x(int a);
	select * from x;
2022-11-28 14:08:46.014 UTC [16475] ERROR:  type "a" does not exist at character 20
2022-11-28 14:08:46.014 UTC [16475] STATEMENT:  create table x(int a);
	select * from x;
2022-11-28 14:10:57.730 UTC [16475] LOG:  statement: CREATE TABLE personne (
	    numpers integer PRIMARY KEY,
	    nom character varying(30),
	    prenom character varying(30),
	    pere integer,
	    mere integer
	);
	
	
	INSERT INTO personne VALUES (1, 'Estermont', 'Cassana', NULL, NULL);
	INSERT INTO personne VALUES (3, 'Baratheon', 'Renly', 2, 1);
	INSERT INTO personne VALUES (4, 'Baratheon', 'Stannis', 2, 1);
	INSERT INTO personne VALUES (5, 'Baratheon', 'Robert', 2, 1);
	INSERT INTO personne VALUES (12, 'Lannister', 'Joanna', NULL, NULL);
	INSERT INTO personne VALUES (13, 'Lannister', 'Tywin', NULL, NULL);
	INSERT INTO personne VALUES (9, 'Lannister', 'Cersei', 13, 12);
	INSERT INTO personne VALUES (6, NULL, 'Gendry', 5, NULL);
	INSERT INTO personne VALUES (8, 'Baratheon', 'Tommen', 5, 9);
	INSERT INTO personne VALUES (7, 'Baratheon', 'Joffrey', 5, 9);
	INSERT INTO personne VALUES (10, 'Baratheon', 'Myrcella', 5, 9);
	INSERT INTO personne VALUES (11, 'Lannister', 'Jaime', 13, 12);
	INSERT INTO personne VALUES (14, 'Lannister', 'Tyrion', 13, 12);
	INSERT INTO personne VALUES (15, 'Florent', 'Selyse', NULL, NULL);
	INSERT INTO personne VALUES (16, 'Baratheon', 'Shireen', 4, 15);
	INSERT INTO personne VALUES (18, 'Baratheon', 'Ormund', NULL, NULL);
	INSERT INTO personne VALUES (2, 'Baratheon', 'Steffon', 18, 17);
	INSERT INTO personne VALUES (19, 'Targaryen', 'Aegon', NULL, NULL);
	INSERT INTO personne VALUES (17, 'Targaryen', 'Rhaelle', 19, NULL);
	INSERT INTO personne VALUES (21, 'Targaryen', 'Aerys', 20, NULL);
	INSERT INTO personne VALUES (20, 'Targaryen', 'Jaehaerys', 19, NULL);
	INSERT INTO personne VALUES (23, 'Targaryen', 'Viserys', 21, NULL);
	INSERT INTO personne VALUES (22, 'Targaryen', 'Rhaegar', 21, NULL);
	INSERT INTO personne VALUES (24, 'Targaryen', 'Daenerys', NULL, NULL);
	INSERT INTO personne VALUES (30, 'Tully', 'Hoster', NULL, NULL);
	INSERT INTO personne VALUES (31, 'Tully', 'Lysa', 30, NULL);
	INSERT INTO personne VALUES (32, 'Tully', 'Edmure', 30, NULL);
	INSERT INTO personne VALUES (33, 'Tully', 'Catelyn', 30, NULL);
	INSERT INTO personne VALUES (39, 'Snow', 'Jon', 22, 29);
	INSERT INTO personne VALUES (25, 'Stark', 'Rickard', NULL, NULL);
	INSERT INTO personne VALUES (26, 'Stark', 'Brandon', 25, NULL);
	INSERT INTO personne VALUES (27, 'Stark', 'Eddard', 25, NULL);
	INSERT INTO personne VALUES (28, 'Stark', 'Benjen', 25, NULL);
	INSERT INTO personne VALUES (29, 'Stark', 'Lyanna', 25, NULL);
	INSERT INTO personne VALUES (34, 'Stark', 'Robb', 27, 33);
	INSERT INTO personne VALUES (35, 'Stark', 'Sansa', 27, 33);
	INSERT INTO personne VALUES (36, 'Stark', 'Arya', 27, 33);
	INSERT INTO personne VALUES (37, 'Stark', 'Brandon', 27, 33);
	INSERT INTO personne VALUES (38, 'Stark', 'Rickon', 27, 33);
	
2022-11-28 14:10:57.750 UTC [16475] LOG:  duration: 20.067 ms
2022-11-28 14:11:07.330 UTC [16475] LOG:  statement: select * from personne;
2022-11-28 14:11:07.330 UTC [16475] LOG:  duration: 0.508 ms
2022-11-28 14:11:07.439 UTC [16475] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:11:07.445 UTC [16475] LOG:  duration: 6.458 ms
2022-11-28 14:11:07.458 UTC [16475] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16912::oid)::oid[])
	
2022-11-28 14:11:07.461 UTC [16475] LOG:  duration: 2.711 ms
2022-11-28 14:11:07.501 UTC [16475] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16912::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:11:07.506 UTC [16475] LOG:  duration: 5.291 ms
2022-11-28 14:11:07.544 UTC [16475] LOG:  statement: SELECT n.nspname, r.relname
	FROM pg_catalog.pg_class r
	    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
	WHERE r.oid = 16912;
	
2022-11-28 14:11:07.544 UTC [16475] LOG:  duration: 0.480 ms
2022-11-28 14:11:07.547 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23, 1043, 1043, 23, 23) ORDER BY oid;
2022-11-28 14:11:07.547 UTC [16475] LOG:  duration: 0.414 ms
2022-11-28 14:13:27.339 UTC [16475] LOG:  statement: EXPLAIN (FORMAT JSON, ANALYZE false, VERBOSE false, COSTS false, TIMING false, BUFFERS false, SUMMARY false, SETTINGS false) select * from personne;
	
2022-11-28 14:13:27.339 UTC [16475] LOG:  duration: 0.362 ms
2022-11-28 14:13:27.414 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (114) ORDER BY oid;
2022-11-28 14:13:27.414 UTC [16475] LOG:  duration: 0.511 ms
2022-11-28 14:13:36.017 UTC [16475] LOG:  statement: SELECT * FROM pg_catalog.unnest(current_schemas(true)) AS schema
	
2022-11-28 14:13:36.024 UTC [16475] LOG:  duration: 6.860 ms
2022-11-28 14:13:36.025 UTC [16475] LOG:  statement: SELECT nspname AS schema FROM pg_catalog.pg_namespace ORDER BY 1
	
2022-11-28 14:13:36.026 UTC [16475] LOG:  duration: 0.331 ms
2022-11-28 14:13:36.058 UTC [16475] LOG:  statement: SELECT upper(word) as word FROM pg_get_keywords()
	
2022-11-28 14:13:36.062 UTC [16475] LOG:  duration: 4.164 ms
2022-11-28 14:13:36.135 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:36.136 UTC [16475] LOG:  duration: 1.279 ms
2022-11-28 14:13:36.169 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:36.173 UTC [16475] LOG:  duration: 4.265 ms
2022-11-28 14:13:36.227 UTC [16475] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog','public')
2022-11-28 14:13:36.229 UTC [16475] LOG:  duration: 2.462 ms
2022-11-28 14:13:36.231 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:36.232 UTC [16475] LOG:  duration: 0.758 ms
2022-11-28 14:13:36.234 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:36.237 UTC [16475] LOG:  duration: 3.449 ms
2022-11-28 14:13:36.264 UTC [16475] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog','public')
	ORDER BY 1, 2
2022-11-28 14:13:36.291 UTC [16475] LOG:  duration: 27.218 ms
2022-11-28 14:13:37.667 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:37.667 UTC [16475] LOG:  duration: 0.984 ms
2022-11-28 14:13:37.670 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:37.673 UTC [16475] LOG:  duration: 3.163 ms
2022-11-28 14:13:37.688 UTC [16475] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog','public')
2022-11-28 14:13:37.690 UTC [16475] LOG:  duration: 1.322 ms
2022-11-28 14:13:37.691 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:37.692 UTC [16475] LOG:  duration: 0.736 ms
2022-11-28 14:13:37.694 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:37.698 UTC [16475] LOG:  duration: 3.554 ms
2022-11-28 14:13:37.715 UTC [16475] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog','public')
	ORDER BY 1, 2
2022-11-28 14:13:37.729 UTC [16475] LOG:  duration: 14.354 ms
2022-11-28 14:13:38.984 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:38.985 UTC [16475] LOG:  duration: 1.072 ms
2022-11-28 14:13:38.988 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:38.992 UTC [16475] LOG:  duration: 3.930 ms
2022-11-28 14:13:39.008 UTC [16475] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog','public')
2022-11-28 14:13:39.010 UTC [16475] LOG:  duration: 2.280 ms
2022-11-28 14:13:39.012 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:39.013 UTC [16475] LOG:  duration: 0.814 ms
2022-11-28 14:13:39.016 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:39.019 UTC [16475] LOG:  duration: 3.935 ms
2022-11-28 14:13:39.042 UTC [16475] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog','public')
	ORDER BY 1, 2
2022-11-28 14:13:39.059 UTC [16475] LOG:  duration: 17.168 ms
2022-11-28 14:13:40.495 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:40.496 UTC [16475] LOG:  duration: 1.019 ms
2022-11-28 14:13:40.499 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:40.503 UTC [16475] LOG:  duration: 3.657 ms
2022-11-28 14:13:40.518 UTC [16475] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog','public')
2022-11-28 14:13:40.520 UTC [16475] LOG:  duration: 2.047 ms
2022-11-28 14:13:40.522 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:40.522 UTC [16475] LOG:  duration: 0.788 ms
2022-11-28 14:13:40.525 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:40.528 UTC [16475] LOG:  duration: 3.577 ms
2022-11-28 14:13:40.547 UTC [16475] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog','public')
	ORDER BY 1, 2
2022-11-28 14:13:40.561 UTC [16475] LOG:  duration: 14.430 ms
2022-11-28 14:13:40.928 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:40.929 UTC [16475] LOG:  duration: 0.760 ms
2022-11-28 14:13:40.931 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:40.934 UTC [16475] LOG:  duration: 3.052 ms
2022-11-28 14:13:40.951 UTC [16475] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog','public')
2022-11-28 14:13:40.952 UTC [16475] LOG:  duration: 1.867 ms
2022-11-28 14:13:40.954 UTC [16475] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog','public')
	    ORDER BY 1,2
	
2022-11-28 14:13:40.955 UTC [16475] LOG:  duration: 0.787 ms
2022-11-28 14:13:40.957 UTC [16475] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog','public')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:13:40.961 UTC [16475] LOG:  duration: 3.557 ms
2022-11-28 14:13:40.979 UTC [16475] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog','public')
	ORDER BY 1, 2
2022-11-28 14:13:40.993 UTC [16475] LOG:  duration: 14.455 ms
2022-11-28 14:13:42.683 UTC [16475] LOG:  statement: EXPLAIN (FORMAT JSON, ANALYZE false, VERBOSE false, COSTS false, TIMING false, BUFFERS false, SUMMARY false, SETTINGS false) select * from personne
	where nom ='Lannister';
	
2022-11-28 14:13:42.684 UTC [16475] LOG:  duration: 0.791 ms
2022-11-28 14:13:42.764 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (114) ORDER BY oid;
2022-11-28 14:13:42.765 UTC [16475] LOG:  duration: 0.471 ms
2022-11-28 14:13:47.682 UTC [16475] LOG:  statement: EXPLAIN (FORMAT JSON, ANALYZE false, VERBOSE false, COSTS false, TIMING false, BUFFERS false, SUMMARY false, SETTINGS false) select * from personne
	where nom ='Lannister';
	
2022-11-28 14:13:47.682 UTC [16475] LOG:  duration: 0.411 ms
2022-11-28 14:13:47.769 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (114) ORDER BY oid;
2022-11-28 14:13:47.770 UTC [16475] LOG:  duration: 0.455 ms
2022-11-28 14:13:49.118 UTC [16475] LOG:  statement: select * from personne
	where nom ='Lannister';
	
2022-11-28 14:13:49.119 UTC [16475] LOG:  duration: 0.393 ms
2022-11-28 14:13:49.201 UTC [16475] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:13:49.201 UTC [16475] LOG:  duration: 0.639 ms
2022-11-28 14:13:49.203 UTC [16475] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16912::oid)::oid[])
	
2022-11-28 14:13:49.204 UTC [16475] LOG:  duration: 1.069 ms
2022-11-28 14:13:49.206 UTC [16475] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16912::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:13:49.208 UTC [16475] LOG:  duration: 2.168 ms
2022-11-28 14:13:49.209 UTC [16475] LOG:  statement: SELECT n.nspname, r.relname
	FROM pg_catalog.pg_class r
	    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
	WHERE r.oid = 16912;
	
2022-11-28 14:13:49.210 UTC [16475] LOG:  duration: 0.698 ms
2022-11-28 14:13:49.213 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23, 1043, 1043, 23, 23) ORDER BY oid;
2022-11-28 14:13:49.214 UTC [16475] LOG:  duration: 0.523 ms
2022-11-28 14:21:46.332 UTC [16475] ERROR:  syntax error at or near "FROM" at character 74
2022-11-28 14:21:46.332 UTC [16475] STATEMENT:  WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;
2022-11-28 14:22:16.094 UTC [16475] ERROR:  syntax error at or near "FROM" at character 235
2022-11-28 14:22:16.094 UTC [16475] STATEMENT:  CREATE TABLE personne (
	    numpers integer PRIMARY KEY,
	    nom character varying(30),
	    prenom character varying(30),
	    pere integer,
	    mere integer
	);
	
	WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;
2022-11-28 14:22:22.509 UTC [16475] LOG:  statement: CREATE TABLE personne (
	    numpers integer PRIMARY KEY,
	    nom character varying(30),
	    prenom character varying(30),
	    pere integer,
	    mere integer
	);
	/*
	WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;*/
2022-11-28 14:22:22.509 UTC [16475] ERROR:  relation "personne" already exists
2022-11-28 14:22:22.509 UTC [16475] STATEMENT:  CREATE TABLE personne (
	    numpers integer PRIMARY KEY,
	    nom character varying(30),
	    prenom character varying(30),
	    pere integer,
	    mere integer
	);
	/*
	WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;*/
2022-11-28 14:22:34.141 UTC [16475] LOG:  statement: 
	INSERT INTO personne VALUES (1, 'Estermont', 'Cassana', NULL, NULL);
	INSERT INTO personne VALUES (3, 'Baratheon', 'Renly', 2, 1);
	INSERT INTO personne VALUES (4, 'Baratheon', 'Stannis', 2, 1);
	INSERT INTO personne VALUES (5, 'Baratheon', 'Robert', 2, 1);
	INSERT INTO personne VALUES (12, 'Lannister', 'Joanna', NULL, NULL);
	INSERT INTO personne VALUES (13, 'Lannister', 'Tywin', NULL, NULL);
	INSERT INTO personne VALUES (9, 'Lannister', 'Cersei', 13, 12);
	INSERT INTO personne VALUES (6, NULL, 'Gendry', 5, NULL);
	INSERT INTO personne VALUES (8, 'Baratheon', 'Tommen', 5, 9);
	INSERT INTO personne VALUES (7, 'Baratheon', 'Joffrey', 5, 9);
	INSERT INTO personne VALUES (10, 'Baratheon', 'Myrcella', 5, 9);
	INSERT INTO personne VALUES (11, 'Lannister', 'Jaime', 13, 12);
	INSERT INTO personne VALUES (14, 'Lannister', 'Tyrion', 13, 12);
	INSERT INTO personne VALUES (15, 'Florent', 'Selyse', NULL, NULL);
	INSERT INTO personne VALUES (16, 'Baratheon', 'Shireen', 4, 15);
	INSERT INTO personne VALUES (18, 'Baratheon', 'Ormund', NULL, NULL);
	INSERT INTO personne VALUES (2, 'Baratheon', 'Steffon', 18, 17);
	INSERT INTO personne VALUES (19, 'Targaryen', 'Aegon', NULL, NULL);
	INSERT INTO personne VALUES (17, 'Targaryen', 'Rhaelle', 19, NULL);
	INSERT INTO personne VALUES (21, 'Targaryen', 'Aerys', 20, NULL);
	INSERT INTO personne VALUES (20, 'Targaryen', 'Jaehaerys', 19, NULL);
	INSERT INTO personne VALUES (23, 'Targaryen', 'Viserys', 21, NULL);
	INSERT INTO personne VALUES (22, 'Targaryen', 'Rhaegar', 21, NULL);
	INSERT INTO personne VALUES (24, 'Targaryen', 'Daenerys', NULL, NULL);
	INSERT INTO personne VALUES (30, 'Tully', 'Hoster', NULL, NULL);
	INSERT INTO personne VALUES (31, 'Tully', 'Lysa', 30, NULL);
	INSERT INTO personne VALUES (32, 'Tully', 'Edmure', 30, NULL);
	INSERT INTO personne VALUES (33, 'Tully', 'Catelyn', 30, NULL);
	INSERT INTO personne VALUES (39, 'Snow', 'Jon', 22, 29);
	INSERT INTO personne VALUES (25, 'Stark', 'Rickard', NULL, NULL);
	INSERT INTO personne VALUES (26, 'Stark', 'Brandon', 25, NULL);
	INSERT INTO personne VALUES (27, 'Stark', 'Eddard', 25, NULL);
	INSERT INTO personne VALUES (28, 'Stark', 'Benjen', 25, NULL);
	INSERT INTO personne VALUES (29, 'Stark', 'Lyanna', 25, NULL);
	INSERT INTO personne VALUES (34, 'Stark', 'Robb', 27, 33);
	INSERT INTO personne VALUES (35, 'Stark', 'Sansa', 27, 33);
	INSERT INTO personne VALUES (36, 'Stark', 'Arya', 27, 33);
	INSERT INTO personne VALUES (37, 'Stark', 'Brandon', 27, 33);
	INSERT INTO personne VALUES (38, 'Stark', 'Rickon', 27, 33);
	
	/*
	WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;*/
2022-11-28 14:22:34.141 UTC [16475] ERROR:  duplicate key value violates unique constraint "personne_pkey"
2022-11-28 14:22:34.141 UTC [16475] DETAIL:  Key (numpers)=(1) already exists.
2022-11-28 14:22:34.141 UTC [16475] STATEMENT:  
	INSERT INTO personne VALUES (1, 'Estermont', 'Cassana', NULL, NULL);
	INSERT INTO personne VALUES (3, 'Baratheon', 'Renly', 2, 1);
	INSERT INTO personne VALUES (4, 'Baratheon', 'Stannis', 2, 1);
	INSERT INTO personne VALUES (5, 'Baratheon', 'Robert', 2, 1);
	INSERT INTO personne VALUES (12, 'Lannister', 'Joanna', NULL, NULL);
	INSERT INTO personne VALUES (13, 'Lannister', 'Tywin', NULL, NULL);
	INSERT INTO personne VALUES (9, 'Lannister', 'Cersei', 13, 12);
	INSERT INTO personne VALUES (6, NULL, 'Gendry', 5, NULL);
	INSERT INTO personne VALUES (8, 'Baratheon', 'Tommen', 5, 9);
	INSERT INTO personne VALUES (7, 'Baratheon', 'Joffrey', 5, 9);
	INSERT INTO personne VALUES (10, 'Baratheon', 'Myrcella', 5, 9);
	INSERT INTO personne VALUES (11, 'Lannister', 'Jaime', 13, 12);
	INSERT INTO personne VALUES (14, 'Lannister', 'Tyrion', 13, 12);
	INSERT INTO personne VALUES (15, 'Florent', 'Selyse', NULL, NULL);
	INSERT INTO personne VALUES (16, 'Baratheon', 'Shireen', 4, 15);
	INSERT INTO personne VALUES (18, 'Baratheon', 'Ormund', NULL, NULL);
	INSERT INTO personne VALUES (2, 'Baratheon', 'Steffon', 18, 17);
	INSERT INTO personne VALUES (19, 'Targaryen', 'Aegon', NULL, NULL);
	INSERT INTO personne VALUES (17, 'Targaryen', 'Rhaelle', 19, NULL);
	INSERT INTO personne VALUES (21, 'Targaryen', 'Aerys', 20, NULL);
	INSERT INTO personne VALUES (20, 'Targaryen', 'Jaehaerys', 19, NULL);
	INSERT INTO personne VALUES (23, 'Targaryen', 'Viserys', 21, NULL);
	INSERT INTO personne VALUES (22, 'Targaryen', 'Rhaegar', 21, NULL);
	INSERT INTO personne VALUES (24, 'Targaryen', 'Daenerys', NULL, NULL);
	INSERT INTO personne VALUES (30, 'Tully', 'Hoster', NULL, NULL);
	INSERT INTO personne VALUES (31, 'Tully', 'Lysa', 30, NULL);
	INSERT INTO personne VALUES (32, 'Tully', 'Edmure', 30, NULL);
	INSERT INTO personne VALUES (33, 'Tully', 'Catelyn', 30, NULL);
	INSERT INTO personne VALUES (39, 'Snow', 'Jon', 22, 29);
	INSERT INTO personne VALUES (25, 'Stark', 'Rickard', NULL, NULL);
	INSERT INTO personne VALUES (26, 'Stark', 'Brandon', 25, NULL);
	INSERT INTO personne VALUES (27, 'Stark', 'Eddard', 25, NULL);
	INSERT INTO personne VALUES (28, 'Stark', 'Benjen', 25, NULL);
	INSERT INTO personne VALUES (29, 'Stark', 'Lyanna', 25, NULL);
	INSERT INTO personne VALUES (34, 'Stark', 'Robb', 27, 33);
	INSERT INTO personne VALUES (35, 'Stark', 'Sansa', 27, 33);
	INSERT INTO personne VALUES (36, 'Stark', 'Arya', 27, 33);
	INSERT INTO personne VALUES (37, 'Stark', 'Brandon', 27, 33);
	INSERT INTO personne VALUES (38, 'Stark', 'Rickon', 27, 33);
	
	/*
	WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;*/
2022-11-28 14:22:45.030 UTC [16475] ERROR:  syntax error at or near "FROM" at character 75
2022-11-28 14:22:45.030 UTC [16475] STATEMENT:  
	WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;
2022-11-28 14:22:50.479 UTC [16475] ERROR:  syntax error at or near "FROM" at character 161
2022-11-28 14:22:50.479 UTC [16475] STATEMENT:  
	WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE,
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
		
	Select * from enfants;
2022-11-28 14:22:55.983 UTC [16475] LOG:  statement: WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
	SELECT *
	FROM ENFANTS;
2022-11-28 14:22:55.983 UTC [16475] ERROR:  column "id" does not exist at character 57
2022-11-28 14:22:55.983 UTC [16475] STATEMENT:  WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT ID AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
	SELECT *
	FROM ENFANTS;
2022-11-28 14:23:02.590 UTC [16475] LOG:  statement: WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT numpers AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
	SELECT *
	FROM ENFANTS;
2022-11-28 14:23:02.590 UTC [16475] ERROR:  column "id" does not exist at character 148
2022-11-28 14:23:02.590 UTC [16475] STATEMENT:  WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT numpers AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT ID AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
	SELECT *
	FROM ENFANTS;
2022-11-28 14:23:07.626 UTC [16475] LOG:  statement: WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT NUMPERS AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL
			UNION SELECT NUMPERS AS ANCETRE
			FROM PERSONNE
			WHERE PERE IS NULL
				AND MERE IS NULL )
	SELECT *
	FROM ENFANTS;
2022-11-28 14:23:07.626 UTC [16475] LOG:  duration: 0.410 ms
2022-11-28 14:23:07.721 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23) ORDER BY oid;
2022-11-28 14:23:07.721 UTC [16475] LOG:  duration: 0.553 ms
2022-11-28 14:23:59.210 UTC [16475] LOG:  statement: WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT NUMPERS AS ANCETRE
			FROM PERSONNE P
			JOIN PERSONNE E ON E.PERE = P.NUMPERS
			OR E.MERE = P.NUMPERS)
	SELECT *
	FROM ENFANTS;
2022-11-28 14:23:59.210 UTC [16475] ERROR:  column reference "numpers" is ambiguous at character 57
2022-11-28 14:23:59.210 UTC [16475] STATEMENT:  WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT NUMPERS AS ANCETRE
			FROM PERSONNE P
			JOIN PERSONNE E ON E.PERE = P.NUMPERS
			OR E.MERE = P.NUMPERS)
	SELECT *
	FROM ENFANTS;
2022-11-28 14:24:04.550 UTC [16475] LOG:  statement: WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT p.NUMPERS AS ANCETRE
			FROM PERSONNE P
			JOIN PERSONNE E ON E.PERE = P.NUMPERS
			OR E.MERE = P.NUMPERS)
	SELECT *
	FROM ENFANTS;
2022-11-28 14:24:04.550 UTC [16475] LOG:  duration: 0.784 ms
2022-11-28 14:24:04.643 UTC [16475] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:24:04.644 UTC [16475] LOG:  duration: 0.812 ms
2022-11-28 14:24:04.645 UTC [16475] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16912::oid)::oid[])
	
2022-11-28 14:24:04.646 UTC [16475] LOG:  duration: 0.820 ms
2022-11-28 14:24:04.647 UTC [16475] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16912::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:24:04.649 UTC [16475] LOG:  duration: 1.594 ms
2022-11-28 14:24:04.652 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23) ORDER BY oid;
2022-11-28 14:24:04.652 UTC [16475] LOG:  duration: 0.588 ms
2022-11-28 14:24:40.537 UTC [16475] LOG:  statement: WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT p.NUMPERS AS ANCETRE
			FROM PERSONNE P
			JOIN PERSONNE E ON E.PERE = P.NUMPERS
			OR E.MERE = P.NUMPERS)
			
	SELECT nom, prenom
	FROM ENFANTS join personne using (numpers);
2022-11-28 14:24:40.537 UTC [16475] ERROR:  column "numpers" specified in USING clause does not exist in left table
2022-11-28 14:24:40.537 UTC [16475] STATEMENT:  WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT p.NUMPERS AS ANCETRE
			FROM PERSONNE P
			JOIN PERSONNE E ON E.PERE = P.NUMPERS
			OR E.MERE = P.NUMPERS)
			
	SELECT nom, prenom
	FROM ENFANTS join personne using (numpers);
2022-11-28 14:24:49.921 UTC [16475] LOG:  statement: WITH RECURSIVE ENFANTS AS
		(-- point de départs
	 SELECT p.NUMPERS AS numpers
			FROM PERSONNE P
			JOIN PERSONNE E ON E.PERE = P.NUMPERS
			OR E.MERE = P.NUMPERS)
			
	SELECT nom, prenom
	FROM ENFANTS join personne using (numpers);
2022-11-28 14:24:49.921 UTC [16475] LOG:  duration: 1.069 ms
2022-11-28 14:24:50.000 UTC [16475] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:24:50.000 UTC [16475] LOG:  duration: 0.542 ms
2022-11-28 14:24:50.002 UTC [16475] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16912::oid)::oid[])
	
2022-11-28 14:24:50.002 UTC [16475] LOG:  duration: 0.799 ms
2022-11-28 14:24:50.004 UTC [16475] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16912::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:24:50.005 UTC [16475] LOG:  duration: 1.560 ms
2022-11-28 14:24:50.008 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (1043, 1043) ORDER BY oid;
2022-11-28 14:24:50.009 UTC [16475] LOG:  duration: 0.531 ms
2022-11-28 14:28:10.622 UTC [16475] LOG:  statement:     WITH RECURSIVE DESCENDANTS (ANCETRE, DESCENDANT) AS (
		SELECT
	        PERE,
	        NUMPERS   
	    FROM
	        PERSONNE   
	    WHERE
	        PERE IS NOT NULL   
	    UNION
	    SELECT
	        MERE,
	        NUMPERS   
	    FROM
	        PERSONNE   
	    WHERE
	        MERE IS NOT NULL   
	    UNION
	    SELECT
	        D.ANCETRE,
	        P.NUMPERS   
	    FROM
	        DESCENDANTS D   
	    JOIN
	        PERSONNE P 
	            ON P.PERE = D.DESCENDANT   
	            OR P.MERE = D.DESCENDANT)    
		SELECT
	            P1.NOM,
	            P1.PRENOM,
	            COUNT(DESCENDANT) 
	    FROM
	        DESCENDANTS D 
	    JOIN
	        PERSONNE P1 
	            ON P1.NUMPERS = D.ANCETRE 
	    GROUP BY
	        P1.NOM,
	        P1.PRENOM 
	    ORDER BY
	        3 DESC,
	        1,
	        2
2022-11-28 14:28:10.628 UTC [16475] LOG:  duration: 6.029 ms
2022-11-28 14:28:10.736 UTC [16475] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:28:10.737 UTC [16475] LOG:  duration: 0.674 ms
2022-11-28 14:28:10.739 UTC [16475] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16912::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16912::oid)::oid[])
	
2022-11-28 14:28:10.739 UTC [16475] LOG:  duration: 0.843 ms
2022-11-28 14:28:10.741 UTC [16475] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16912::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:28:10.743 UTC [16475] LOG:  duration: 1.790 ms
2022-11-28 14:28:10.746 UTC [16475] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (1043, 1043, 20) ORDER BY oid;
2022-11-28 14:28:10.746 UTC [16475] LOG:  duration: 0.553 ms
2022-11-28 14:39:06.791 UTC [18830] LOG:  connection received: host=::1 port=54462
2022-11-28 14:39:06.792 UTC [18830] LOG:  connection authorized: user=postgres database=postgres application_name=pgAdmin 4 - CONN:8309437
2022-11-28 14:39:06.794 UTC [18830] LOG:  statement: BEGIN
2022-11-28 14:39:06.794 UTC [18830] LOG:  duration: 0.086 ms
2022-11-28 14:39:06.794 UTC [18830] LOG:  statement: SELECT pg_cancel_backend(16475);
2022-11-28 14:39:06.794 UTC [18830] LOG:  duration: 0.300 ms
2022-11-28 14:39:06.794 UTC [18830] LOG:  disconnection: session time: 0:00:00.003 user=postgres database=postgres host=::1 port=54462
2022-11-28 14:39:06.795 UTC [16475] LOG:  disconnection: session time: 0:31:52.745 user=postgres database=postgres host=::1 port=37652
2022-11-28 14:39:11.755 UTC [16328] LOG:  statement: SELECT CASE WHEN usesuper
	       THEN pg_catalog.pg_is_in_recovery()
	       ELSE FALSE
	       END as inrecovery,
	       CASE WHEN usesuper AND pg_catalog.pg_is_in_recovery()
	       THEN pg_is_wal_replay_paused()
	       ELSE FALSE
	       END as isreplaypaused
	FROM pg_catalog.pg_user WHERE usename=current_user
2022-11-28 14:39:11.755 UTC [16328] LOG:  duration: 0.572 ms
2022-11-28 14:39:11.886 UTC [16328] LOG:  statement: SELECT
	    db.oid as did, db.datname as name, ta.spcname as spcname, db.datallowconn,
	    db.datistemplate AS is_template,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate, datdba as owner
	FROM
	    pg_catalog.pg_database db
	    LEFT OUTER JOIN pg_catalog.pg_tablespace ta ON db.dattablespace = ta.oid
	WHERE         db.oid > 16383::OID OR db.datname IN ('postgres', 'edb')
	
	ORDER BY datname;
2022-11-28 14:39:11.887 UTC [16328] LOG:  duration: 0.538 ms
2022-11-28 14:39:11.943 UTC [16328] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_catalog.pg_encoding_to_char(db.encoding) AS serverencoding,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.oid = 14767
2022-11-28 14:39:11.944 UTC [16328] LOG:  duration: 1.335 ms
2022-11-28 14:39:12.006 UTC [16328] LOG:  statement: SELECT
	    nsp.oid,
	    nsp.nspname as name,
	    pg_catalog.has_schema_privilege(nsp.oid, 'CREATE') as can_create,
	    pg_catalog.has_schema_privilege(nsp.oid, 'USAGE') as has_usage
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	            nspname NOT LIKE 'pg!_%' escape '!' AND
	            NOT (
	(nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1))
	    )
	
	    
	ORDER BY nspname;
2022-11-28 14:39:12.007 UTC [16328] LOG:  duration: 1.058 ms
2022-11-28 14:39:12.279 UTC [16328] LOG:  statement: SELECT
	    nsp.nspname as schema_name,
	    (nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1)) AS is_catalog,
	    CASE
	    WHEN nsp.nspname = ANY('{information_schema}')
	        THEN false
	    ELSE true END AS db_support
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	    nsp.oid = 16910::OID;
2022-11-28 14:39:12.279 UTC [16328] LOG:  duration: 0.908 ms
2022-11-28 14:39:30.409 UTC [16328] LOG:  statement: SELECT
	    db.oid as did, db.datname as name, ta.spcname as spcname, db.datallowconn,
	    db.datistemplate AS is_template,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate, datdba as owner
	FROM
	    pg_catalog.pg_database db
	    LEFT OUTER JOIN pg_catalog.pg_tablespace ta ON db.dattablespace = ta.oid
	WHERE         db.oid > 0::OID OR db.datname IN ('postgres', 'edb')
	
	ORDER BY datname;
2022-11-28 14:39:30.409 UTC [16328] LOG:  duration: 0.447 ms
2022-11-28 14:39:30.542 UTC [16328] LOG:  statement: SELECT * FROM
	(SELECT pg_catalog.pg_encoding_to_char(s.i) AS encoding
	FROM (SELECT pg_catalog.generate_series(0, 100, 1) as i) s) a
	WHERE encoding != '' ORDER BY encoding;
	
	
2022-11-28 14:39:30.543 UTC [16328] LOG:  duration: 0.535 ms
2022-11-28 14:39:30.544 UTC [16328] LOG:  statement: SELECT pg_catalog.current_setting('lc_ctype') as cname
	UNION
	SELECT pg_catalog.current_setting('lc_collate') as cname
2022-11-28 14:39:30.544 UTC [16328] LOG:  duration: 0.376 ms
2022-11-28 14:39:30.591 UTC [16328] LOG:  statement: SELECT pg_catalog.current_setting('lc_ctype') as cname
	UNION
	SELECT pg_catalog.current_setting('lc_collate') as cname
2022-11-28 14:39:30.591 UTC [16328] LOG:  duration: 0.244 ms
2022-11-28 14:39:30.605 UTC [16328] LOG:  statement: SELECT
	    ts.oid AS oid, spcname AS name, spcowner as owner
	FROM
	    pg_catalog.pg_tablespace ts
	ORDER BY name;
2022-11-28 14:39:30.605 UTC [16328] LOG:  duration: 0.318 ms
2022-11-28 14:39:30.607 UTC [16328] LOG:  statement: SELECT
		r.oid, r.rolname, r.rolcanlogin, r.rolsuper
	FROM
		pg_catalog.pg_roles r
	ORDER BY r.rolcanlogin, r.rolname
2022-11-28 14:39:30.608 UTC [16328] LOG:  duration: 0.855 ms
2022-11-28 14:40:07.215 UTC [16328] LOG:  statement: CREATE DATABASE tp3
	    WITH
	    OWNER = postgres
	    ENCODING = 'UTF8'
	    CONNECTION LIMIT = -1
	    IS_TEMPLATE = False;
	
2022-11-28 14:40:07.701 UTC [16328] LOG:  duration: 485.154 ms
2022-11-28 14:40:07.892 UTC [16328] LOG:  statement: SELECT
	    db.oid AS did, db.oid, db.datname AS name, db.dattablespace AS spcoid,
	    spcname, datallowconn, pg_catalog.pg_encoding_to_char(encoding) AS encoding,
	    pg_catalog.pg_get_userbyid(datdba) AS datowner,
	    (select pg_catalog.current_setting('lc_collate')) as datcollate,
	    (select pg_catalog.current_setting('lc_ctype')) as datctype,
	    datconnlimit,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') AS cancreate,
	    pg_catalog.current_setting('default_tablespace') AS default_tablespace,
	    descr.description AS comments, db.datistemplate AS is_template,
	        '' AS tblacl,
	        '' AS seqacl,
	        '' AS funcacl,
	    pg_catalog.array_to_string(datacl::text[], ', ') AS acl
	FROM pg_catalog.pg_database db
	    LEFT OUTER JOIN pg_catalog.pg_tablespace ta ON db.dattablespace=ta.OID
	    LEFT OUTER JOIN pg_catalog.pg_shdescription descr ON (
	        db.oid=descr.objoid AND descr.classoid='pg_database'::regclass
	    )
	WHERE
	            db.datname = 'tp3'::text
	    
	
	ORDER BY datname;
2022-11-28 14:40:07.900 UTC [16328] LOG:  duration: 7.967 ms
2022-11-28 14:40:08.005 UTC [16328] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_catalog.pg_encoding_to_char(db.encoding) AS serverencoding,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.oid = 16917
2022-11-28 14:40:08.005 UTC [16328] LOG:  duration: 0.451 ms
2022-11-28 14:40:08.010 UTC [18882] LOG:  connection received: host=::1 port=34140
2022-11-28 14:40:08.011 UTC [18882] LOG:  connection authorized: user=postgres database=tp3 application_name=pgAdmin 4 - DB:tp3
2022-11-28 14:40:08.019 UTC [18882] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:40:08.022 UTC [18882] LOG:  duration: 3.343 ms
2022-11-28 14:40:08.022 UTC [18882] LOG:  statement: SELECT version()
2022-11-28 14:40:08.023 UTC [18882] LOG:  duration: 0.153 ms
2022-11-28 14:40:08.023 UTC [18882] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:40:08.024 UTC [18882] LOG:  duration: 0.796 ms
2022-11-28 14:40:08.024 UTC [18882] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:40:08.025 UTC [18882] LOG:  duration: 0.756 ms
2022-11-28 14:40:08.025 UTC [18882] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:40:08.027 UTC [18882] LOG:  duration: 2.113 ms
2022-11-28 14:40:08.593 UTC [18882] LOG:  statement: SELECT
	    nsp.oid,
	    nsp.nspname as name,
	    pg_catalog.has_schema_privilege(nsp.oid, 'CREATE') as can_create,
	    pg_catalog.has_schema_privilege(nsp.oid, 'USAGE') as has_usage
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	            nspname NOT LIKE 'pg!_%' escape '!' AND
	            NOT (
	(nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1))
	    )
	
	    
	ORDER BY nspname;
2022-11-28 14:40:08.595 UTC [18882] LOG:  duration: 2.091 ms
2022-11-28 14:40:08.832 UTC [18882] LOG:  statement: SELECT
	    nsp.nspname as schema_name,
	    (nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1)) AS is_catalog,
	    CASE
	    WHEN nsp.nspname = ANY('{information_schema}')
	        THEN false
	    ELSE true END AS db_support
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	    nsp.oid = 2200::OID;
2022-11-28 14:40:08.833 UTC [18882] LOG:  duration: 0.462 ms
2022-11-28 14:40:29.488 UTC [16328] LOG:  statement: SELECT CASE WHEN usesuper
	       THEN pg_catalog.pg_is_in_recovery()
	       ELSE FALSE
	       END as inrecovery,
	       CASE WHEN usesuper AND pg_catalog.pg_is_in_recovery()
	       THEN pg_is_wal_replay_paused()
	       ELSE FALSE
	       END as isreplaypaused
	FROM pg_catalog.pg_user WHERE usename=current_user
2022-11-28 14:40:29.489 UTC [16328] LOG:  duration: 0.566 ms
2022-11-28 14:40:29.602 UTC [16328] LOG:  statement: SELECT
	    db.oid as did, db.datname as name, ta.spcname as spcname, db.datallowconn,
	    db.datistemplate AS is_template,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate, datdba as owner
	FROM
	    pg_catalog.pg_database db
	    LEFT OUTER JOIN pg_catalog.pg_tablespace ta ON db.dattablespace = ta.oid
	WHERE         db.oid > 16383::OID OR db.datname IN ('postgres', 'edb')
	
	ORDER BY datname;
2022-11-28 14:40:29.603 UTC [16328] LOG:  duration: 0.686 ms
2022-11-28 14:40:29.840 UTC [16328] LOG:  statement: SELECT
	    nsp.oid,
	    nsp.nspname as name,
	    pg_catalog.has_schema_privilege(nsp.oid, 'CREATE') as can_create,
	    pg_catalog.has_schema_privilege(nsp.oid, 'USAGE') as has_usage
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	            nspname NOT LIKE 'pg!_%' escape '!' AND
	            NOT (
	(nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1))
	    )
	
	    
	ORDER BY nspname;
2022-11-28 14:40:29.841 UTC [16328] LOG:  duration: 0.742 ms
2022-11-28 14:40:29.845 UTC [18882] LOG:  statement: SELECT
	    nsp.oid,
	    nsp.nspname as name,
	    pg_catalog.has_schema_privilege(nsp.oid, 'CREATE') as can_create,
	    pg_catalog.has_schema_privilege(nsp.oid, 'USAGE') as has_usage
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	            nspname NOT LIKE 'pg!_%' escape '!' AND
	            NOT (
	(nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1))
	    )
	
	    
	ORDER BY nspname;
2022-11-28 14:40:29.846 UTC [18882] LOG:  duration: 1.148 ms
2022-11-28 14:40:29.892 UTC [16328] LOG:  statement: SELECT
	    nsp.nspname as schema_name,
	    (nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1)) AS is_catalog,
	    CASE
	    WHEN nsp.nspname = ANY('{information_schema}')
	        THEN false
	    ELSE true END AS db_support
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	    nsp.oid = 16910::OID;
2022-11-28 14:40:29.893 UTC [16328] LOG:  duration: 0.737 ms
2022-11-28 14:40:29.921 UTC [18882] LOG:  statement: SELECT
	    nsp.nspname as schema_name,
	    (nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1)) AS is_catalog,
	    CASE
	    WHEN nsp.nspname = ANY('{information_schema}')
	        THEN false
	    ELSE true END AS db_support
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	    nsp.oid = 2200::OID;
2022-11-28 14:40:29.922 UTC [18882] LOG:  duration: 0.806 ms
2022-11-28 14:40:47.166 UTC [18920] LOG:  connection received: host=::1 port=33088
2022-11-28 14:40:47.167 UTC [18920] LOG:  connection authorized: user=postgres database=tp3 application_name=pgAdmin 4 - CONN:6836302
2022-11-28 14:40:47.168 UTC [18920] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:40:47.170 UTC [18920] LOG:  duration: 1.500 ms
2022-11-28 14:40:47.170 UTC [18920] LOG:  statement: SELECT version()
2022-11-28 14:40:47.170 UTC [18920] LOG:  duration: 0.094 ms
2022-11-28 14:40:47.170 UTC [18920] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:40:47.170 UTC [18920] LOG:  duration: 0.370 ms
2022-11-28 14:40:47.170 UTC [18920] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:40:47.171 UTC [18920] LOG:  duration: 0.315 ms
2022-11-28 14:40:47.171 UTC [18920] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:40:47.172 UTC [18920] LOG:  duration: 1.285 ms
2022-11-28 14:41:11.323 UTC [18920] LOG:  statement: 
	
	CREATE FUNCTION updatesalaries() RETURNS trigger
	    LANGUAGE plpgsql
	    AS $$BEGIN
	   IF NEW.salary <> OLD.salary THEN
	    INSERT INTO salary_changes(employee_id,old_salary,new_salary,modifiant)
	        VALUES(NEW.employee_id,OLD.salary,NEW.salary,current_user);
	    END IF;
	RETURN NEW;
	END;
	
	
	$$;
	
	CREATE TABLE regions (
	    region_id SERIAL PRIMARY KEY,
	    region_name character varying(25)
	);
	
	
	CREATE TABLE countries (
	    country_id character(2) PRIMARY KEY,
	    country_name character varying(40),
	    region_id integer NOT NULL REFERENCES regions
	);
	
	
	
	CREATE TABLE locations (
	    location_id SERIAL PRIMARY KEY,
	    street_address character varying(40),
	    postal_code character varying(12),
	    city character varying(30) NOT NULL,
	    state_province character varying(25),
	    country_id character(2) NOT NULL REFERENCES countries
	);
	
	CREATE TABLE departments (
	    department_id SERIAL PRIMARY KEY,
	    department_name character varying(30) NOT NULL,
	    location_id integer REFERENCES locations
	);
	
	-- Ne sert pas dans le TP3
	
	
	
	CREATE TABLE jobs (
	    job_id SERIAL PRIMARY KEY,
	    job_title character varying(35) NOT NULL,
	    min_salary numeric(8,2),
	    max_salary numeric(8,2)
	);
	
	CREATE TABLE employees (
	    employee_id SERIAL PRIMARY KEY,
	    first_name character varying(20),
	    last_name character varying(25) NOT NULL,
	    email character varying(100) NOT NULL,
	    phone_number character varying(20),
	    hire_date date NOT NULL,
	    job_id integer NOT NULL REFERENCES jobs,
	    salary numeric(8,2) NOT NULL,
	    manager_id integer REFERENCES employees,
	    department_id integer REFERENCES departments
	);
	
	CREATE TABLE dependents (
	    dependent_id SERIAL PRIMARY KEY,
	    first_name character varying(50) NOT NULL,
	    last_name character varying(50) NOT NULL,
	    relationship character varying(25) NOT NULL,
	    employee_id integer NOT NULL REFERENCES employees
	);
	
	
	
	CREATE TABLE salary_changes (
	    employee_id integer NOT NULL,
	    changed_at timestamp(4) with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	    old_salary numeric(8,2),
	    new_salary numeric(8,2),
	    modifiant text
	);
	
	
	
	
	
	CREATE TRIGGER after_update_salary AFTER UPDATE ON employees FOR EACH ROW EXECUTE PROCEDURE updatesalaries();
	
	
	
	
2022-11-28 14:41:11.357 UTC [18920] LOG:  duration: 34.276 ms
2022-11-28 14:41:57.477 UTC [18920] LOG:  statement: --
	-- PostgreSQL database dump
	--
	
	-- Dumped from database version 11.5
	-- Dumped by pg_dump version 11.5
	
	SET statement_timeout = 0;
	SET lock_timeout = 0;
	SET idle_in_transaction_session_timeout = 0;
	SET client_encoding = 'UTF8';
	SET standard_conforming_strings = on;
	SELECT pg_catalog.set_config('search_path', '', false);
	SET check_function_bodies = false;
	SET xmloption = content;
	SET client_min_messages = warning;
	SET row_security = off;
	
	--
	-- Data for Name: regions; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	SET SESSION AUTHORIZATION DEFAULT;
	
	ALTER TABLE public.regions DISABLE TRIGGER ALL;
	
	INSERT INTO public.regions VALUES (1, 'Europe');
	INSERT INTO public.regions VALUES (2, 'Americas');
	INSERT INTO public.regions VALUES (3, 'Asia');
	INSERT INTO public.regions VALUES (4, 'Middle East and Africa');
	
	
	ALTER TABLE public.regions ENABLE TRIGGER ALL;
	
	--
	-- Data for Name: countries; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	ALTER TABLE public.countries DISABLE TRIGGER ALL;
	
	INSERT INTO public.countries VALUES ('AR', 'Argentina', 2);
	INSERT INTO public.countries VALUES ('AU', 'Australia', 3);
	INSERT INTO public.countries VALUES ('BE', 'Belgium', 1);
	INSERT INTO public.countries VALUES ('BR', 'Brazil', 2);
	INSERT INTO public.countries VALUES ('CA', 'Canada', 2);
	INSERT INTO public.countries VALUES ('CH', 'Switzerland', 1);
	INSERT INTO public.countries VALUES ('CN', 'China', 3);
	INSERT INTO public.countries VALUES ('DE', 'Germany', 1);
	INSERT INTO public.countries VALUES ('DK', 'Denmark', 1);
	INSERT INTO public.countries VALUES ('EG', 'Egypt', 4);
	INSERT INTO public.countries VALUES ('FR', 'France', 1);
	INSERT INTO public.countries VALUES ('HK', 'HongKong', 3);
	INSERT INTO public.countries VALUES ('IL', 'Israel', 4);
	INSERT INTO public.countries VALUES ('IN', 'India', 3);
	INSERT INTO public.countries VALUES ('IT', 'Italy', 1);
	INSERT INTO public.countries VALUES ('JP', 'Japan', 3);
	INSERT INTO public.countries VALUES ('KW', 'Kuwait', 4);
	INSERT INTO public.countries VALUES ('MX', 'Mexico', 2);
	INSERT INTO public.countries VALUES ('NG', 'Nigeria', 4);
	INSERT INTO public.countries VALUES ('NL', 'Netherlands', 1);
	INSERT INTO public.countries VALUES ('SG', 'Singapore', 3);
	INSERT INTO public.countries VALUES ('UK', 'United Kingdom', 1);
	INSERT INTO public.countries VALUES ('US', 'United States of America', 2);
	INSERT INTO public.countries VALUES ('ZM', 'Zambia', 4);
	INSERT INTO public.countries VALUES ('ZW', 'Zimbabwe', 4);
	
	
	ALTER TABLE public.countries ENABLE TRIGGER ALL;
	
	--
	-- Data for Name: locations; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	ALTER TABLE public.locations DISABLE TRIGGER ALL;
	
	INSERT INTO public.locations VALUES (1400, '2014 Jabberwocky Rd', '26192', 'Southlake', 'Texas', 'US');
	INSERT INTO public.locations VALUES (1500, '2011 Interiors Blvd', '99236', 'South San Francisco', 'California', 'US');
	INSERT INTO public.locations VALUES (1700, '2004 Charade Rd', '98199', 'Seattle', 'Washington', 'US');
	INSERT INTO public.locations VALUES (1800, '147 Spadina Ave', 'M5V 2L7', 'Toronto', 'Ontario', 'CA');
	INSERT INTO public.locations VALUES (2400, '8204 Arthur St', NULL, 'London', NULL, 'UK');
	INSERT INTO public.locations VALUES (2500, 'Magdalen Centre, The Oxford Science Park', 'OX9 9ZB', 'Oxford', 'Oxford', 'UK');
	INSERT INTO public.locations VALUES (2700, 'Schwanthalerstr. 7031', '80925', 'Munich', 'Bavaria', 'DE');
	
	
	ALTER TABLE public.locations ENABLE TRIGGER ALL;
	
	--
	-- Data for Name: departments; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	ALTER TABLE public.departments DISABLE TRIGGER ALL;
	
	INSERT INTO public.departments VALUES (1, 'Administration', 1700);
	INSERT INTO public.departments VALUES (2, 'Marketing', 1800);
	INSERT INTO public.departments VALUES (3, 'Purchasing', 1700);
	INSERT INTO public.departments VALUES (4, 'Human Resources', 2400);
	INSERT INTO public.departments VALUES (5, 'Shipping', 1500);
	INSERT INTO public.departments VALUES (6, 'IT', 1400);
	INSERT INTO public.departments VALUES (7, 'Public Relations', 2700);
	INSERT INTO public.departments VALUES (8, 'Sales', 2500);
	INSERT INTO public.departments VALUES (9, 'Executive', 1700);
	INSERT INTO public.departments VALUES (10, 'Finance', 1700);
	INSERT INTO public.departments VALUES (11, 'Accounting', 1700);
	
	
	ALTER TABLE public.departments ENABLE TRIGGER ALL;
	
	--
	-- Data for Name: jobs; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	ALTER TABLE public.jobs DISABLE TRIGGER ALL;
	
	INSERT INTO public.jobs VALUES (1, 'Public Accountant', 4200.00, 9000.00);
	INSERT INTO public.jobs VALUES (2, 'Accounting Manager', 8200.00, 16000.00);
	INSERT INTO public.jobs VALUES (3, 'Administration Assistant', 3000.00, 6000.00);
	INSERT INTO public.jobs VALUES (4, 'President', 20000.00, 40000.00);
	INSERT INTO public.jobs VALUES (5, 'Administration Vice President', 15000.00, 30000.00);
	INSERT INTO public.jobs VALUES (6, 'Accountant', 4200.00, 9000.00);
	INSERT INTO public.jobs VALUES (7, 'Finance Manager', 8200.00, 16000.00);
	INSERT INTO public.jobs VALUES (8, 'Human Resources Representative', 4000.00, 9000.00);
	INSERT INTO public.jobs VALUES (9, 'Programmer', 4000.00, 10000.00);
	INSERT INTO public.jobs VALUES (10, 'Marketing Manager', 9000.00, 15000.00);
	INSERT INTO public.jobs VALUES (11, 'Marketing Representative', 4000.00, 9000.00);
	INSERT INTO public.jobs VALUES (12, 'Public Relations Representative', 4500.00, 10500.00);
	INSERT INTO public.jobs VALUES (13, 'Purchasing Clerk', 2500.00, 5500.00);
	INSERT INTO public.jobs VALUES (14, 'Purchasing Manager', 8000.00, 15000.00);
	INSERT INTO public.jobs VALUES (15, 'Sales Manager', 10000.00, 20000.00);
	INSERT INTO public.jobs VALUES (16, 'Sales Representative', 6000.00, 12000.00);
	INSERT INTO public.jobs VALUES (17, 'Shipping Clerk', 2500.00, 5500.00);
	INSERT INTO public.jobs VALUES (18, 'Stock Clerk', 2000.00, 5000.00);
	INSERT INTO public.jobs VALUES (19, 'Stock Manager', 5500.00, 8500.00);
	
	
	ALTER TABLE public.jobs ENABLE TRIGGER ALL;
	
	--
	-- Data for Name: employees; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	ALTER TABLE public.employees DISABLE TRIGGER ALL;
	
	INSERT INTO public.employees VALUES (101, 'Neena', 'Kochhar', 'neena.kochhar@sqltutorial.org', '515.123.4568', '1989-09-21', 5, 17000.00, 100, 9);
	INSERT INTO public.employees VALUES (102, 'Lex', 'De Haan', 'lex.de haan@sqltutorial.org', '515.123.4569', '1993-01-13', 5, 17000.00, 100, 9);
	INSERT INTO public.employees VALUES (103, 'Alexander', 'Hunold', 'alexander.hunold@sqltutorial.org', '590.423.4567', '1990-01-03', 9, 9000.00, 102, 6);
	INSERT INTO public.employees VALUES (104, 'Bruce', 'Ernst', 'bruce.ernst@sqltutorial.org', '590.423.4568', '1991-05-21', 9, 6000.00, 103, 6);
	INSERT INTO public.employees VALUES (105, 'David', 'Austin', 'david.austin@sqltutorial.org', '590.423.4569', '1997-06-25', 9, 4800.00, 103, 6);
	INSERT INTO public.employees VALUES (106, 'Valli', 'Pataballa', 'valli.pataballa@sqltutorial.org', '590.423.4560', '1998-02-05', 9, 4800.00, 103, 6);
	INSERT INTO public.employees VALUES (107, 'Diana', 'Lorentz', 'diana.lorentz@sqltutorial.org', '590.423.5567', '1999-02-07', 9, 4200.00, 103, 6);
	INSERT INTO public.employees VALUES (108, 'Nancy', 'Greenberg', 'nancy.greenberg@sqltutorial.org', '515.124.4569', '1994-08-17', 7, 12000.00, 101, 10);
	INSERT INTO public.employees VALUES (109, 'Daniel', 'Faviet', 'daniel.faviet@sqltutorial.org', '515.124.4169', '1994-08-16', 6, 9000.00, 108, 10);
	INSERT INTO public.employees VALUES (110, 'John', 'Chen', 'john.chen@sqltutorial.org', '515.124.4269', '1997-09-28', 6, 8200.00, 108, 10);
	INSERT INTO public.employees VALUES (111, 'Ismael', 'Sciarra', 'ismael.sciarra@sqltutorial.org', '515.124.4369', '1997-09-30', 6, 7700.00, 108, 10);
	INSERT INTO public.employees VALUES (112, 'Jose Manuel', 'Urman', 'jose manuel.urman@sqltutorial.org', '515.124.4469', '1998-03-07', 6, 7800.00, 108, 10);
	INSERT INTO public.employees VALUES (113, 'Luis', 'Popp', 'luis.popp@sqltutorial.org', '515.124.4567', '1999-12-07', 6, 6900.00, 108, 10);
	INSERT INTO public.employees VALUES (114, 'Den', 'Raphaely', 'den.raphaely@sqltutorial.org', '515.127.4561', '1994-12-07', 14, 11000.00, 100, 3);
	INSERT INTO public.employees VALUES (115, 'Alexander', 'Khoo', 'alexander.khoo@sqltutorial.org', '515.127.4562', '1995-05-18', 13, 3100.00, 114, 3);
	INSERT INTO public.employees VALUES (116, 'Shelli', 'Baida', 'shelli.baida@sqltutorial.org', '515.127.4563', '1997-12-24', 13, 2900.00, 114, 3);
	INSERT INTO public.employees VALUES (117, 'Sigal', 'Tobias', 'sigal.tobias@sqltutorial.org', '515.127.4564', '1997-07-24', 13, 2800.00, 114, 3);
	INSERT INTO public.employees VALUES (118, 'Guy', 'Himuro', 'guy.himuro@sqltutorial.org', '515.127.4565', '1998-11-15', 13, 2600.00, 114, 3);
	INSERT INTO public.employees VALUES (119, 'Karen', 'Colmenares', 'karen.colmenares@sqltutorial.org', '515.127.4566', '1999-08-10', 13, 2500.00, 114, 3);
	INSERT INTO public.employees VALUES (120, 'Matthew', 'Weiss', 'matthew.weiss@sqltutorial.org', '650.123.1234', '1996-07-18', 19, 8000.00, 100, 5);
	INSERT INTO public.employees VALUES (121, 'Adam', 'Fripp', 'adam.fripp@sqltutorial.org', '650.123.2234', '1997-04-10', 19, 8200.00, 100, 5);
	INSERT INTO public.employees VALUES (122, 'Payam', 'Kaufling', 'payam.kaufling@sqltutorial.org', '650.123.3234', '1995-05-01', 19, 7900.00, 100, 5);
	INSERT INTO public.employees VALUES (123, 'Shanta', 'Vollman', 'shanta.vollman@sqltutorial.org', '650.123.4234', '1997-10-10', 19, 6500.00, 100, 5);
	INSERT INTO public.employees VALUES (126, 'Irene', 'Mikkilineni', 'irene.mikkilineni@sqltutorial.org', '650.124.1224', '1998-09-28', 18, 2700.00, 120, 5);
	INSERT INTO public.employees VALUES (145, 'John', 'Russell', 'john.russell@sqltutorial.org', NULL, '1996-10-01', 15, 14000.00, 100, 8);
	INSERT INTO public.employees VALUES (146, 'Karen', 'Partners', 'karen.partners@sqltutorial.org', NULL, '1997-01-05', 15, 13500.00, 100, 8);
	INSERT INTO public.employees VALUES (176, 'Jonathon', 'Taylor', 'jonathon.taylor@sqltutorial.org', NULL, '1998-03-24', 16, 8600.00, 100, 8);
	INSERT INTO public.employees VALUES (177, 'Jack', 'Livingston', 'jack.livingston@sqltutorial.org', NULL, '1998-04-23', 16, 8400.00, 100, 8);
	INSERT INTO public.employees VALUES (178, 'Kimberely', 'Grant', 'kimberely.grant@sqltutorial.org', NULL, '1999-05-24', 16, 7000.00, 100, 8);
	INSERT INTO public.employees VALUES (179, 'Charles', 'Johnson', 'charles.johnson@sqltutorial.org', NULL, '2000-01-04', 16, 6200.00, 100, 8);
	INSERT INTO public.employees VALUES (192, 'Sarah', 'Bell', 'sarah.bell@sqltutorial.org', '650.501.1876', '1996-02-04', 17, 4000.00, 123, 5);
	INSERT INTO public.employees VALUES (193, 'Britney', 'Everett', 'britney.everett@sqltutorial.org', '650.501.2876', '1997-03-03', 17, 3900.00, 123, 5);
	INSERT INTO public.employees VALUES (200, 'Jennifer', 'Whalen', 'jennifer.whalen@sqltutorial.org', '515.123.4444', '1987-09-17', 3, 4400.00, 101, 1);
	INSERT INTO public.employees VALUES (201, 'Michael', 'Hartstein', 'michael.hartstein@sqltutorial.org', '515.123.5555', '1996-02-17', 10, 13000.00, 100, 2);
	INSERT INTO public.employees VALUES (202, 'Pat', 'Fay', 'pat.fay@sqltutorial.org', '603.123.6666', '1997-08-17', 11, 6000.00, 201, 2);
	INSERT INTO public.employees VALUES (203, 'Susan', 'Mavris', 'susan.mavris@sqltutorial.org', '515.123.7777', '1994-06-07', 8, 6500.00, 101, 4);
	INSERT INTO public.employees VALUES (204, 'Hermann', 'Baer', 'hermann.baer@sqltutorial.org', '515.123.8888', '1994-06-07', 12, 10000.00, 101, 7);
	INSERT INTO public.employees VALUES (205, 'Shelley', 'Higgins', 'shelley.higgins@sqltutorial.org', '515.123.8080', '1994-06-07', 2, 12000.00, 101, 11);
	INSERT INTO public.employees VALUES (206, 'William', 'Gietz', 'william.gietz@sqltutorial.org', '515.123.8181', '1994-06-07', 1, 8300.00, 205, 11);
	INSERT INTO public.employees VALUES (100, 'Steven', 'King', 'steven.king@sqltutorial.org', '515.123.4567', '1987-06-17', 4, 30100.00, NULL, 9);
	
	
	ALTER TABLE public.employees ENABLE TRIGGER ALL;
	
	--
	-- Data for Name: dependents; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	ALTER TABLE public.dependents DISABLE TRIGGER ALL;
	
	INSERT INTO public.dependents VALUES (1, 'Penelope', 'Gietz', 'Child', 206);
	INSERT INTO public.dependents VALUES (2, 'Nick', 'Higgins', 'Child', 205);
	INSERT INTO public.dependents VALUES (3, 'Ed', 'Whalen', 'Child', 200);
	INSERT INTO public.dependents VALUES (4, 'Jennifer', 'King', 'Child', 100);
	INSERT INTO public.dependents VALUES (5, 'Johnny', 'Kochhar', 'Child', 101);
	INSERT INTO public.dependents VALUES (6, 'Bette', 'De Haan', 'Child', 102);
	INSERT INTO public.dependents VALUES (7, 'Grace', 'Faviet', 'Child', 109);
	INSERT INTO public.dependents VALUES (8, 'Matthew', 'Chen', 'Child', 110);
	INSERT INTO public.dependents VALUES (9, 'Joe', 'Sciarra', 'Child', 111);
	INSERT INTO public.dependents VALUES (10, 'Christian', 'Urman', 'Child', 112);
	INSERT INTO public.dependents VALUES (11, 'Zero', 'Popp', 'Child', 113);
	INSERT INTO public.dependents VALUES (12, 'Karl', 'Greenberg', 'Child', 108);
	INSERT INTO public.dependents VALUES (13, 'Uma', 'Mavris', 'Child', 203);
	INSERT INTO public.dependents VALUES (14, 'Vivien', 'Hunold', 'Child', 103);
	INSERT INTO public.dependents VALUES (15, 'Cuba', 'Ernst', 'Child', 104);
	INSERT INTO public.dependents VALUES (16, 'Fred', 'Austin', 'Child', 105);
	INSERT INTO public.dependents VALUES (17, 'Helen', 'Pataballa', 'Child', 106);
	INSERT INTO public.dependents VALUES (18, 'Dan', 'Lorentz', 'Child', 107);
	INSERT INTO public.dependents VALUES (19, 'Bob', 'Hartstein', 'Child', 201);
	INSERT INTO public.dependents VALUES (20, 'Lucille', 'Fay', 'Child', 202);
	INSERT INTO public.dependents VALUES (21, 'Kirsten', 'Baer', 'Child', 204);
	INSERT INTO public.dependents VALUES (22, 'Elvis', 'Khoo', 'Child', 115);
	INSERT INTO public.dependents VALUES (23, 'Sandra', 'Baida', 'Child', 116);
	INSERT INTO public.dependents VALUES (24, 'Cameron', 'Tobias', 'Child', 117);
	INSERT INTO public.dependents VALUES (25, 'Kevin', 'Himuro', 'Child', 118);
	INSERT INTO public.dependents VALUES (26, 'Rip', 'Colmenares', 'Child', 119);
	INSERT INTO public.dependents VALUES (27, 'Julia', 'Raphaely', 'Child', 114);
	INSERT INTO public.dependents VALUES (28, 'Woody', 'Russell', 'Child', 145);
	INSERT INTO public.dependents VALUES (29, 'Alec', 'Partners', 'Child', 146);
	INSERT INTO public.dependents VALUES (30, 'Sandra', 'Taylor', 'Child', 176);
	
	
	ALTER TABLE public.dependents ENABLE TRIGGER ALL;
	
	--
	-- Data for Name: salary_changes; Type: TABLE DATA; Schema: public; Owner: -
	--
	
	ALTER TABLE public.salary_changes ENABLE TRIGGER ALL;
	
	--
	-- Name: departments_department_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
	--
	
	SELECT pg_catalog.setval('public.departments_department_id_seq', 1, false);
	
	
	--
	-- Name: dependents_dependent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
	--
	
	SELECT pg_catalog.setval('public.dependents_dependent_id_seq', 1, false);
	
	
	--
	-- Name: employees_employee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
	--
	
	SELECT pg_catalog.setval('public.employees_employee_id_seq', 1, false);
	
	
	--
	-- Name: jobs_job_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
	--
	
	SELECT pg_catalog.setval('public.jobs_job_id_seq', 1, false);
	
	
	--
	-- Name: locations_location_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
	--
	
	SELECT pg_catalog.setval('public.locations_location_id_seq', 1, false);
	
	
	--
	-- Name: regions_region_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
	--
	
	SELECT pg_catalog.setval('public.regions_region_id_seq', 1, false);
	
	
	--
	-- PostgreSQL database dump complete
	--
	
	
2022-11-28 14:41:57.485 UTC [18920] LOG:  duration: 8.682 ms
2022-11-28 14:41:57.565 UTC [18920] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (20) ORDER BY oid;
2022-11-28 14:41:57.566 UTC [18920] LOG:  duration: 1.459 ms
2022-11-28 14:42:08.431 UTC [18882] LOG:  statement: SELECT rel.oid, rel.relname AS name,
	    (SELECT count(*) FROM pg_catalog.pg_trigger WHERE tgrelid=rel.oid AND tgisinternal = FALSE) AS triggercount,
	    (SELECT count(*) FROM pg_catalog.pg_trigger WHERE tgrelid=rel.oid AND tgisinternal = FALSE AND tgenabled = 'O') AS has_enable_triggers,
	    (CASE WHEN rel.relkind = 'p' THEN true ELSE false END) AS is_partitioned,
	    (SELECT count(1) FROM pg_catalog.pg_inherits WHERE inhrelid=rel.oid LIMIT 1) as is_inherits,
	    (SELECT count(1) FROM pg_catalog.pg_inherits WHERE inhparent=rel.oid LIMIT 1) as is_inherited
	FROM pg_catalog.pg_class rel
	    WHERE rel.relkind IN ('r','s','t','p') AND rel.relnamespace = 2200::oid
	    AND NOT rel.relispartition
	        ORDER BY rel.relname;
2022-11-28 14:42:08.433 UTC [18882] LOG:  duration: 2.103 ms
2022-11-28 14:42:42.247 UTC [19066] LOG:  connection received: host=::1 port=53650
2022-11-28 14:42:42.248 UTC [19066] LOG:  connection authorized: user=postgres database=tp3 application_name=pgAdmin 4 - CONN:2452667
2022-11-28 14:42:42.253 UTC [19066] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:42:42.254 UTC [19066] LOG:  duration: 1.392 ms
2022-11-28 14:42:42.255 UTC [19066] LOG:  statement: SELECT version()
2022-11-28 14:42:42.255 UTC [19066] LOG:  duration: 0.160 ms
2022-11-28 14:42:42.255 UTC [19066] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:42:42.256 UTC [19066] LOG:  duration: 0.498 ms
2022-11-28 14:42:42.256 UTC [19066] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:42:42.256 UTC [19066] LOG:  duration: 0.437 ms
2022-11-28 14:42:42.257 UTC [19066] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:42:42.259 UTC [19066] LOG:  duration: 1.933 ms
2022-11-28 14:42:42.261 UTC [18882] LOG:  statement: SELECT n.nspname, r.relname
	FROM pg_catalog.pg_class r
	    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
	WHERE r.oid = 16968;
	
2022-11-28 14:42:42.262 UTC [18882] LOG:  duration: 0.649 ms
2022-11-28 14:42:42.520 UTC [18882] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16968::oid)::oid[])
	
2022-11-28 14:42:42.521 UTC [18882] LOG:  duration: 1.705 ms
2022-11-28 14:42:42.566 UTC [18882] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16968::oid)::oid[])
	
2022-11-28 14:42:42.566 UTC [18882] LOG:  duration: 0.651 ms
2022-11-28 14:42:42.569 UTC [19066] LOG:  statement: SELECT * FROM public.employees
	ORDER BY employee_id ASC 
2022-11-28 14:42:42.570 UTC [19066] LOG:  duration: 0.685 ms
2022-11-28 14:42:42.698 UTC [19066] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16968::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:42:42.703 UTC [19066] LOG:  duration: 5.369 ms
2022-11-28 14:42:42.705 UTC [19066] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23, 1043, 1043, 1043, 1043, 1082, 23, 1700, 23, 23) ORDER BY oid;
2022-11-28 14:42:42.706 UTC [19066] LOG:  duration: 0.363 ms
2022-11-28 14:43:23.352 UTC [18920] LOG:  statement: SELECT * FROM pg_catalog.unnest(current_schemas(true)) AS schema
	
2022-11-28 14:43:23.353 UTC [18920] LOG:  duration: 0.723 ms
2022-11-28 14:43:23.354 UTC [18920] LOG:  statement: SELECT nspname AS schema FROM pg_catalog.pg_namespace ORDER BY 1
	
2022-11-28 14:43:23.355 UTC [18920] LOG:  duration: 0.596 ms
2022-11-28 14:43:23.358 UTC [18920] LOG:  statement: SELECT upper(word) as word FROM pg_get_keywords()
	
2022-11-28 14:43:23.361 UTC [18920] LOG:  duration: 2.661 ms
2022-11-28 14:43:23.403 UTC [18920] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog')
	    ORDER BY 1,2
	
2022-11-28 14:43:23.405 UTC [18920] LOG:  duration: 1.672 ms
2022-11-28 14:43:23.407 UTC [18920] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:43:23.411 UTC [18920] LOG:  duration: 4.397 ms
2022-11-28 14:43:23.426 UTC [18920] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog')
2022-11-28 14:43:23.428 UTC [18920] LOG:  duration: 2.669 ms
2022-11-28 14:43:23.430 UTC [18920] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog')
	    ORDER BY 1,2
	
2022-11-28 14:43:23.431 UTC [18920] LOG:  duration: 0.778 ms
2022-11-28 14:43:23.433 UTC [18920] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:43:23.437 UTC [18920] LOG:  duration: 3.850 ms
2022-11-28 14:43:23.456 UTC [18920] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog')
	ORDER BY 1, 2
2022-11-28 14:43:23.472 UTC [18920] LOG:  duration: 16.100 ms
2022-11-28 14:43:24.930 UTC [18920] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog')
	    ORDER BY 1,2
	
2022-11-28 14:43:24.931 UTC [18920] LOG:  duration: 0.988 ms
2022-11-28 14:43:24.933 UTC [18920] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:43:24.937 UTC [18920] LOG:  duration: 4.456 ms
2022-11-28 14:43:24.954 UTC [18920] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog')
2022-11-28 14:43:24.955 UTC [18920] LOG:  duration: 1.445 ms
2022-11-28 14:43:24.957 UTC [18920] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog')
	    ORDER BY 1,2
	
2022-11-28 14:43:24.957 UTC [18920] LOG:  duration: 0.718 ms
2022-11-28 14:43:24.960 UTC [18920] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:43:24.963 UTC [18920] LOG:  duration: 3.812 ms
2022-11-28 14:43:24.982 UTC [18920] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog')
	ORDER BY 1, 2
2022-11-28 14:43:24.998 UTC [18920] LOG:  duration: 16.127 ms
2022-11-28 14:43:25.581 UTC [18920] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['r', 'p']) and n.nspname IN ('pg_catalog')
	    ORDER BY 1,2
	
2022-11-28 14:43:25.582 UTC [18920] LOG:  duration: 0.986 ms
2022-11-28 14:43:25.585 UTC [18920] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog')
	        AND cls.relkind = ANY(array['r', 'p'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:43:25.588 UTC [18920] LOG:  duration: 3.828 ms
2022-11-28 14:43:25.605 UTC [18920] LOG:  statement: SELECT s_p.nspname AS parentschema,
	   t_p.relname AS parenttable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(confkey) as attnum, pg_catalog.generate_subscripts(confkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.confrelid
	    )) AS parentcolumn,
	   s_c.nspname AS childschema,
	   t_c.relname AS childtable,
	   pg_catalog.unnest((
	    select
	        pg_catalog.array_agg(attname ORDER BY i)
	    from
	        (select pg_catalog.unnest(conkey) as attnum, pg_catalog.generate_subscripts(conkey, 1) as i) x
	        JOIN pg_catalog.pg_attribute c USING(attnum)
	        WHERE c.attrelid = fk.conrelid
	    )) AS childcolumn
	FROM pg_catalog.pg_constraint fk
	JOIN pg_catalog.pg_class      t_p ON t_p.oid = fk.confrelid
	JOIN pg_catalog.pg_namespace  s_p ON s_p.oid = t_p.relnamespace
	JOIN pg_catalog.pg_class      t_c ON t_c.oid = fk.conrelid
	JOIN pg_catalog.pg_namespace  s_c ON s_c.oid = t_c.relnamespace
	WHERE fk.contype = 'f' AND s_p.nspname IN ('pg_catalog')
2022-11-28 14:43:25.607 UTC [18920] LOG:  duration: 1.963 ms
2022-11-28 14:43:25.608 UTC [18920] LOG:  statement: SELECT  n.nspname schema_name,
	    c.relname object_name
	FROM pg_catalog.pg_class c
	    LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	    WHERE c.relkind = ANY(array['v', 'm']) and n.nspname IN ('pg_catalog')
	    ORDER BY 1,2
	
2022-11-28 14:43:25.609 UTC [18920] LOG:  duration: 0.773 ms
2022-11-28 14:43:25.612 UTC [18920] LOG:  statement: SELECT  nsp.nspname schema_name,
	        cls.relname table_name,
	        att.attname column_name,
	        att.atttypid::regtype::text type_name,
	        att.atthasdef AS has_default,
	        pg_get_expr(def.adbin, def.adrelid) as default
	FROM    pg_catalog.pg_attribute att
	        INNER JOIN pg_catalog.pg_class cls
	            ON att.attrelid = cls.oid
	        INNER JOIN pg_catalog.pg_namespace nsp
	            ON cls.relnamespace = nsp.oid
	        LEFT OUTER JOIN pg_catalog.pg_attrdef def
	            ON def.adrelid = att.attrelid
	            AND def.adnum = att.attnum
	WHERE   nsp.nspname IN ('pg_catalog')
	        AND cls.relkind = ANY(array['v', 'm'])
	        AND NOT att.attisdropped
	        AND att.attnum  > 0
	ORDER BY 1, 2, att.attnum
	
2022-11-28 14:43:25.616 UTC [18920] LOG:  duration: 4.087 ms
2022-11-28 14:43:25.636 UTC [18920] LOG:  statement: SELECT n.nspname schema_name,
	    p.proname func_name,
	    p.proargnames arg_names,
	    COALESCE(proallargtypes::regtype[], proargtypes::regtype[])::text[] arg_types,
	    p.proargmodes arg_modes,
	    prorettype::regtype::text return_type,
	    CASE WHEN p.prokind = 'a' THEN true ELSE false END is_aggregate,
	    CASE WHEN p.prokind = 'w' THEN true ELSE false END is_window,
	    p.proretset is_set_returning,
	    d.deptype = 'e' is_extension,
	    pg_catalog.pg_get_expr(proargdefaults, 0) AS arg_defaults
	FROM pg_catalog.pg_proc p
	    INNER JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
	    LEFT JOIN pg_catalog.pg_depend d ON d.objid = p.oid and d.deptype = 'e'
	WHERE p.prorettype::regtype != 'trigger'::regtype
	    AND n.nspname IN ('pg_catalog')
	ORDER BY 1, 2
2022-11-28 14:43:25.650 UTC [18920] LOG:  duration: 14.404 ms
2022-11-28 14:44:06.058 UTC [18920] LOG:  statement: select *
	from employees
	;
2022-11-28 14:44:06.058 UTC [18920] ERROR:  relation "employees" does not exist at character 15
2022-11-28 14:44:06.058 UTC [18920] STATEMENT:  select *
	from employees
	;
2022-11-28 14:44:28.733 UTC [19208] LOG:  connection received: host=::1 port=42002
2022-11-28 14:44:28.734 UTC [19208] LOG:  connection authorized: user=postgres database=tp3 application_name=pgAdmin 4 - CONN:9671181
2022-11-28 14:44:28.736 UTC [19208] LOG:  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='UNICODE';
2022-11-28 14:44:28.737 UTC [19208] LOG:  duration: 1.433 ms
2022-11-28 14:44:28.738 UTC [19208] LOG:  statement: SELECT version()
2022-11-28 14:44:28.738 UTC [19208] LOG:  duration: 0.160 ms
2022-11-28 14:44:28.738 UTC [19208] LOG:  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2022-11-28 14:44:28.739 UTC [19208] LOG:  duration: 0.606 ms
2022-11-28 14:44:28.739 UTC [19208] LOG:  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2022-11-28 14:44:28.739 UTC [19208] LOG:  duration: 0.444 ms
2022-11-28 14:44:28.740 UTC [19208] LOG:  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2022-11-28 14:44:28.741 UTC [19208] LOG:  duration: 1.563 ms
2022-11-28 14:44:36.371 UTC [19208] LOG:  statement: select * from employees;
2022-11-28 14:44:36.371 UTC [19208] LOG:  duration: 0.792 ms
2022-11-28 14:44:36.474 UTC [19208] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:44:36.476 UTC [19208] LOG:  duration: 1.405 ms
2022-11-28 14:44:36.477 UTC [19208] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16968::oid)::oid[])
	
2022-11-28 14:44:36.480 UTC [19208] LOG:  duration: 2.299 ms
2022-11-28 14:44:36.481 UTC [19208] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16968::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:44:36.485 UTC [19208] LOG:  duration: 3.918 ms
2022-11-28 14:44:36.487 UTC [19208] LOG:  statement: SELECT n.nspname, r.relname
	FROM pg_catalog.pg_class r
	    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
	WHERE r.oid = 16968;
	
2022-11-28 14:44:36.488 UTC [19208] LOG:  duration: 0.699 ms
2022-11-28 14:44:36.491 UTC [19208] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23, 1043, 1043, 1043, 1043, 1082, 23, 1700, 23, 23) ORDER BY oid;
2022-11-28 14:44:36.492 UTC [19208] LOG:  duration: 0.534 ms
2022-11-28 14:47:20.878 UTC [19208] LOG:  statement: select *
	
			from employees e
	
			join emloyeees manager
					on e.manager_id = manager.id;
2022-11-28 14:47:20.878 UTC [19208] ERROR:  relation "emloyeees" does not exist at character 38
2022-11-28 14:47:20.878 UTC [19208] STATEMENT:  select *
	
			from employees e
	
			join emloyeees manager
					on e.manager_id = manager.id;
2022-11-28 14:47:25.662 UTC [19208] LOG:  statement: select *
	
			from employees e
	
			join employeees manager
					on e.manager_id = manager.id;
2022-11-28 14:47:25.663 UTC [19208] ERROR:  relation "employeees" does not exist at character 38
2022-11-28 14:47:25.663 UTC [19208] STATEMENT:  select *
	
			from employees e
	
			join employeees manager
					on e.manager_id = manager.id;
2022-11-28 14:47:28.142 UTC [19208] LOG:  statement: select *
	
			from employees e
	
			join employees manager
					on e.manager_id = manager.id;
2022-11-28 14:47:28.142 UTC [19208] ERROR:  column manager.id does not exist at character 78
2022-11-28 14:47:28.142 UTC [19208] STATEMENT:  select *
	
			from employees e
	
			join employees manager
					on e.manager_id = manager.id;
2022-11-28 14:47:39.173 UTC [19208] LOG:  statement: select *
	
			from employees e
	
		/*	join employees manager
					on e.manager_id = manager.id;*/
2022-11-28 14:47:39.173 UTC [19208] LOG:  duration: 0.345 ms
2022-11-28 14:47:39.260 UTC [19208] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:47:39.260 UTC [19208] LOG:  duration: 0.690 ms
2022-11-28 14:47:39.262 UTC [19208] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16968::oid)::oid[])
	
2022-11-28 14:47:39.263 UTC [19208] LOG:  duration: 1.060 ms
2022-11-28 14:47:39.264 UTC [19208] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16968::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:47:39.266 UTC [19208] LOG:  duration: 2.445 ms
2022-11-28 14:47:39.268 UTC [19208] LOG:  statement: SELECT n.nspname, r.relname
	FROM pg_catalog.pg_class r
	    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
	WHERE r.oid = 16968;
	
2022-11-28 14:47:39.269 UTC [19208] LOG:  duration: 0.669 ms
2022-11-28 14:47:39.272 UTC [19208] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23, 1043, 1043, 1043, 1043, 1082, 23, 1700, 23, 23) ORDER BY oid;
2022-11-28 14:47:39.273 UTC [19208] LOG:  duration: 0.503 ms
2022-11-28 14:47:49.196 UTC [19208] LOG:  statement: select *
	
			from employees e
	
			join employees manager
					on e.manager_id = manager.employee_id;
2022-11-28 14:47:49.197 UTC [19208] LOG:  duration: 0.952 ms
2022-11-28 14:47:49.294 UTC [19208] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:47:49.295 UTC [19208] LOG:  duration: 0.551 ms
2022-11-28 14:47:49.297 UTC [19208] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16968::oid)::oid[])
	
2022-11-28 14:47:49.298 UTC [19208] LOG:  duration: 1.092 ms
2022-11-28 14:47:49.300 UTC [19208] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16968::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:47:49.303 UTC [19208] LOG:  duration: 2.484 ms
2022-11-28 14:47:49.307 UTC [19208] LOG:  statement: SELECT n.nspname, r.relname
	FROM pg_catalog.pg_class r
	    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
	WHERE r.oid = 16968;
	
2022-11-28 14:47:49.307 UTC [19208] LOG:  duration: 0.546 ms
2022-11-28 14:47:49.311 UTC [19208] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23, 1043, 1043, 1043, 1043, 1082, 23, 1700, 23, 23, 23, 1043, 1043, 1043, 1043, 1082, 23, 1700, 23, 23) ORDER BY oid;
2022-11-28 14:47:49.312 UTC [19208] LOG:  duration: 0.771 ms
2022-11-28 14:48:00.725 UTC [19208] LOG:  statement: select first_name, last_name
	
			from employees e
	
			join employees manager
					on e.manager_id = manager.employee_id;
2022-11-28 14:48:00.725 UTC [19208] ERROR:  column reference "first_name" is ambiguous at character 8
2022-11-28 14:48:00.725 UTC [19208] STATEMENT:  select first_name, last_name
	
			from employees e
	
			join employees manager
					on e.manager_id = manager.employee_id;
2022-11-28 14:48:37.336 UTC [19208] LOG:  statement: select e.first_name,
	
								e.last_name,
	
								m.first_name as "MPre",
	
								m.last_name as "MNom"
	
			from employees e
	
			join employees m
					on e.manager_id = m.employee_id;
2022-11-28 14:48:37.337 UTC [19208] LOG:  duration: 0.860 ms
2022-11-28 14:48:37.402 UTC [19208] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:48:37.403 UTC [19208] LOG:  duration: 0.859 ms
2022-11-28 14:48:37.405 UTC [19208] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16968::oid)::oid[])
	
2022-11-28 14:48:37.406 UTC [19208] LOG:  duration: 0.875 ms
2022-11-28 14:48:37.407 UTC [19208] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16968::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:48:37.409 UTC [19208] LOG:  duration: 1.580 ms
2022-11-28 14:48:37.412 UTC [19208] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (1043, 1043, 1043, 1043) ORDER BY oid;
2022-11-28 14:48:37.412 UTC [19208] LOG:  duration: 0.420 ms
2022-11-28 14:49:15.365 UTC [19208] LOG:  statement: select e.employee_id,
		m.employee_id
	from employees e
	join employees m on e.manager_id = m.employee_id;
2022-11-28 14:49:15.366 UTC [19208] LOG:  duration: 0.669 ms
2022-11-28 14:49:15.472 UTC [19208] LOG:  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid
	    AND at.attnum > 0
	    AND at.attisdropped = FALSE
	
2022-11-28 14:49:15.473 UTC [19208] LOG:  duration: 0.882 ms
2022-11-28 14:49:15.474 UTC [19208] LOG:  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	WHERE attrelid=16968::oid AND attnum = ANY (
	    (SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	    AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND rel.oid = 16968::oid)::oid[])
	
2022-11-28 14:49:15.475 UTC [19208] LOG:  duration: 1.085 ms
2022-11-28 14:49:15.477 UTC [19208] LOG:  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	WHERE
	    att.attrelid = 16968::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2022-11-28 14:49:15.480 UTC [19208] LOG:  duration: 2.937 ms
2022-11-28 14:49:15.482 UTC [19208] LOG:  statement: SELECT n.nspname, r.relname
	FROM pg_catalog.pg_class r
	    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
	WHERE r.oid = 16968;
	
2022-11-28 14:49:15.483 UTC [19208] LOG:  duration: 0.756 ms
2022-11-28 14:49:15.487 UTC [19208] LOG:  statement: SELECT oid, pg_catalog.format_type(oid, NULL) AS typname FROM pg_catalog.pg_type WHERE oid IN (23, 23) ORDER BY oid;
2022-11-28 14:49:15.487 UTC [19208] LOG:  duration: 0.491 ms
2022-11-28 14:54:58.376 UTC [19208] LOG:  statement: with recursive managers(employee, manager) as
	(
		select employee_id, null as manager_id
		from employees 
		where manager_id is null
		
		union
		
		select manager.employee_id, manager.manager_id
		from employees join managers on employees.manager_id = managers.employee_id
	)
	
	select * from managers;
	
2022-11-28 14:54:58.376 UTC [19208] ERROR:  column managers.employee_id does not exist at character 247
2022-11-28 14:54:58.376 UTC [19208] HINT:  Perhaps you meant to reference the column "managers.employee".
2022-11-28 14:54:58.376 UTC [19208] STATEMENT:  with recursive managers(employee, manager) as
	(
		select employee_id, null as manager_id
		from employees 
		where manager_id is null
		
		union
		
		select manager.employee_id, manager.manager_id
		from employees join managers on employees.manager_id = managers.employee_id
	)
	
	select * from managers;
	
2022-11-28 14:55:58.344 UTC [19208] LOG:  statement: with recursive managers(employee,
																	manager) as
		(select employee_id,
				null as manager_id
			from employees
			where manager_id is null
			union 
		 select e.employee_id,
				e.manager_id
			from employees e
			join managers on employees.manager_id = managers.employee_id)
	select *
	from managers;
2022-11-28 14:55:58.344 UTC [19208] ERROR:  invalid reference to FROM-clause entry for table "employees" at character 238
2022-11-28 14:55:58.344 UTC [19208] HINT:  Perhaps you meant to reference the table alias "e".
2022-11-28 14:55:58.344 UTC [19208] STATEMENT:  with recursive managers(employee,
																	manager) as
		(select employee_id,
				null as manager_id
			from employees
			where manager_id is null
			union 
		 select e.employee_id,
				e.manager_id
			from employees e
			join managers on employees.manager_id = managers.employee_id)
	select *
	from managers;
2022-11-28 14:56:12.868 UTC [19208] LOG:  statement: with recursive managers(employee,
																	manager) as
		(select employee_id,
				null as manager_id
			from employees
			where manager_id is null
			union 
		 select e.employee_id,
				e.manager_id
			from employees e
			join managers m on e.manager_id = m.employee_id)
	select *
	from managers;
2022-11-28 14:56:12.868 UTC [19208] ERROR:  column m.employee_id does not exist at character 255
2022-11-28 14:56:12.868 UTC [19208] HINT:  Perhaps you meant to reference the column "e.employee_id".
2022-11-28 14:56:12.868 UTC [19208] STATEMENT:  with recursive managers(employee,
																	manager) as
		(select employee_id,
				null as manager_id
			from employees
			where manager_id is null
			union 
		 select e.employee_id,
				e.manager_id
			from employees e
			join managers m on e.manager_id = m.employee_id)
	select *
	from managers;
2022-11-28 14:57:13.790 UTC [38650] LOG:  connection received: host=127.0.0.1 port=48942
2022-11-28 14:57:13.822 UTC [38650] LOG:  connection authorized: user=edgar database=postgres
2022-11-28 14:57:13.822 UTC [38650] FATAL:  role "edgar" does not exist
2022-11-28 14:57:13.865 UTC [38651] LOG:  connection received: host=127.0.0.1 port=48950
2022-11-28 14:57:13.866 UTC [38651] LOG:  connection authorized: user=edgar database=postgres
2022-11-28 14:57:13.866 UTC [38651] FATAL:  role "edgar" does not exist
2022-11-28 14:57:20.485 UTC [38696] LOG:  connection received: host=127.0.0.1 port=56082
2022-11-28 14:57:20.537 UTC [38696] LOG:  connection authorized: user=postgres database=postgres
2022-11-28 14:57:20.596 UTC [38696] LOG:  duration: 0.212 ms
2022-11-28 14:57:20.596 UTC [38696] LOG:  duration: 0.010 ms
2022-11-28 14:57:20.596 UTC [38696] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 14:57:20.596 UTC [38696] LOG:  duration: 0.030 ms
2022-11-28 14:57:20.597 UTC [38696] LOG:  duration: 0.039 ms
2022-11-28 14:57:20.597 UTC [38696] LOG:  duration: 0.010 ms
2022-11-28 14:57:20.597 UTC [38696] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 14:57:20.597 UTC [38696] LOG:  duration: 0.025 ms
2022-11-28 14:57:20.655 UTC [38696] LOG:  duration: 0.276 ms
2022-11-28 14:57:20.655 UTC [38696] LOG:  duration: 0.117 ms
2022-11-28 14:57:20.655 UTC [38696] LOG:  execute <unnamed>: select version()
2022-11-28 14:57:20.655 UTC [38696] LOG:  duration: 0.030 ms
2022-11-28 14:57:20.708 UTC [38696] LOG:  duration: 0.068 ms
2022-11-28 14:57:20.708 UTC [38696] LOG:  duration: 0.012 ms
2022-11-28 14:57:20.708 UTC [38696] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 14:57:20.708 UTC [38696] LOG:  duration: 0.028 ms
2022-11-28 14:57:21.144 UTC [38696] LOG:  duration: 0.046 ms
2022-11-28 14:57:21.144 UTC [38696] LOG:  duration: 0.030 ms
2022-11-28 14:57:21.144 UTC [38696] LOG:  execute <unnamed>: SELECT 'keep alive'
2022-11-28 14:57:21.144 UTC [38696] LOG:  duration: 0.014 ms
2022-11-28 14:57:21.163 UTC [38696] LOG:  duration: 0.286 ms
2022-11-28 14:57:21.164 UTC [38696] LOG:  duration: 0.169 ms
2022-11-28 14:57:21.164 UTC [38696] LOG:  execute <unnamed>: select ssl from pg_stat_ssl where pid = pg_backend_pid()
2022-11-28 14:57:21.164 UTC [38696] LOG:  duration: 0.103 ms
2022-11-28 14:57:21.213 UTC [38696] LOG:  disconnection: session time: 0:00:00.728 user=postgres database=postgres host=127.0.0.1 port=56082
2022-11-28 14:57:24.138 UTC [38740] LOG:  connection received: host=127.0.0.1 port=55912
2022-11-28 14:57:24.184 UTC [38740] LOG:  connection authorized: user=postgres database=postgres
2022-11-28 14:57:24.237 UTC [38740] LOG:  duration: 0.269 ms
2022-11-28 14:57:24.237 UTC [38740] LOG:  duration: 0.012 ms
2022-11-28 14:57:24.237 UTC [38740] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 14:57:24.237 UTC [38740] LOG:  duration: 0.032 ms
2022-11-28 14:57:24.238 UTC [38740] LOG:  duration: 0.071 ms
2022-11-28 14:57:24.238 UTC [38740] LOG:  duration: 0.013 ms
2022-11-28 14:57:24.238 UTC [38740] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 14:57:24.238 UTC [38740] LOG:  duration: 0.028 ms
2022-11-28 14:57:24.297 UTC [38740] LOG:  duration: 0.372 ms
2022-11-28 14:57:24.297 UTC [38740] LOG:  duration: 0.094 ms
2022-11-28 14:57:24.297 UTC [38740] LOG:  execute <unnamed>: select version()
2022-11-28 14:57:24.297 UTC [38740] LOG:  duration: 0.020 ms
2022-11-28 14:57:24.341 UTC [38740] LOG:  duration: 0.117 ms
2022-11-28 14:57:24.341 UTC [38740] LOG:  duration: 0.058 ms
2022-11-28 14:57:24.341 UTC [38740] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 14:57:24.341 UTC [38740] LOG:  duration: 0.056 ms
2022-11-28 14:57:24.413 UTC [38740] LOG:  duration: 0.033 ms
2022-11-28 14:57:24.413 UTC [38740] LOG:  duration: 0.012 ms
2022-11-28 14:57:24.466 UTC [38740] LOG:  duration: 0.415 ms
2022-11-28 14:57:24.466 UTC [38740] LOG:  duration: 0.059 ms
2022-11-28 14:57:24.466 UTC [38740] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 14:57:24.466 UTC [38740] LOG:  duration: 0.073 ms
2022-11-28 14:57:24.569 UTC [38740] LOG:  duration: 0.114 ms
2022-11-28 14:57:24.569 UTC [38740] LOG:  duration: 0.045 ms
2022-11-28 14:57:24.569 UTC [38740] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2022-11-28 14:57:24.569 UTC [38740] LOG:  duration: 0.021 ms
2022-11-28 14:57:24.658 UTC [38740] LOG:  duration: 0.528 ms
2022-11-28 14:57:24.658 UTC [38740] LOG:  duration: 0.103 ms
2022-11-28 14:57:24.658 UTC [38740] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2022-11-28 14:57:24.658 UTC [38740] LOG:  duration: 0.142 ms
2022-11-28 14:57:24.710 UTC [38740] LOG:  duration: 0.134 ms
2022-11-28 14:57:24.710 UTC [38740] LOG:  duration: 0.036 ms
2022-11-28 14:57:24.710 UTC [38740] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2022-11-28 14:57:24.710 UTC [38740] LOG:  duration: 0.016 ms
2022-11-28 14:57:24.731 UTC [38740] LOG:  duration: 0.584 ms
2022-11-28 14:57:24.731 UTC [38740] LOG:  duration: 0.248 ms
2022-11-28 14:57:24.731 UTC [38740] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2022-11-28 14:57:24.731 UTC [38740] LOG:  duration: 0.103 ms
2022-11-28 14:57:24.756 UTC [38740] LOG:  duration: 0.222 ms
2022-11-28 14:57:24.756 UTC [38740] LOG:  duration: 0.043 ms
2022-11-28 14:57:24.756 UTC [38740] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then null
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2022-11-28 14:57:24.756 UTC [38740] LOG:  duration: 0.022 ms
2022-11-28 14:57:24.787 UTC [38740] LOG:  duration: 0.449 ms
2022-11-28 14:57:24.788 UTC [38740] LOG:  duration: 0.864 ms
2022-11-28 14:57:24.788 UTC [38740] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       datistemplate as is_template,
	       datallowconn as allow_connections,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:24.788 UTC [38740] LOG:  duration: 0.094 ms
2022-11-28 14:57:24.844 UTC [38740] LOG:  duration: 0.307 ms
2022-11-28 14:57:24.846 UTC [38740] LOG:  duration: 1.835 ms
2022-11-28 14:57:24.846 UTC [38740] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:24.847 UTC [38740] LOG:  duration: 1.060 ms
2022-11-28 14:57:24.860 UTC [38740] LOG:  duration: 0.793 ms
2022-11-28 14:57:24.861 UTC [38740] LOG:  duration: 0.878 ms
2022-11-28 14:57:24.861 UTC [38740] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:24.861 UTC [38740] DETAIL:  parameters: $1 = '28'
2022-11-28 14:57:24.861 UTC [38740] LOG:  duration: 0.058 ms
2022-11-28 14:57:24.912 UTC [38740] LOG:  duration: 0.053 ms
2022-11-28 14:57:24.912 UTC [38740] LOG:  duration: 0.010 ms
2022-11-28 14:57:24.912 UTC [38740] LOG:  execute <unnamed>: show DateStyle
2022-11-28 14:57:24.912 UTC [38740] LOG:  duration: 0.023 ms
2022-11-28 14:57:24.936 UTC [38740] LOG:  duration: 0.478 ms
2022-11-28 14:57:24.936 UTC [38740] LOG:  duration: 0.179 ms
2022-11-28 14:57:24.936 UTC [38740] LOG:  execute <unnamed>: select name, is_dst from pg_catalog.pg_timezone_names
	union distinct
	select abbrev as name, is_dst from pg_catalog.pg_timezone_abbrevs
2022-11-28 14:57:25.050 UTC [38740] LOG:  duration: 114.002 ms
2022-11-28 14:57:25.116 UTC [38740] LOG:  duration: 0.519 ms
2022-11-28 14:57:25.116 UTC [38740] LOG:  duration: 0.537 ms
2022-11-28 14:57:25.116 UTC [38740] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2022-11-28 14:57:25.116 UTC [38740] LOG:  duration: 0.071 ms
2022-11-28 14:57:25.146 UTC [38740] LOG:  duration: 0.156 ms
2022-11-28 14:57:25.146 UTC [38740] LOG:  duration: 0.209 ms
2022-11-28 14:57:25.146 UTC [38740] LOG:  execute <unnamed>: select member id, roleid role_id, admin_option
	          from pg_catalog.pg_auth_members order by id, roleid::text
2022-11-28 14:57:25.146 UTC [38740] LOG:  duration: 0.055 ms
2022-11-28 14:57:25.170 UTC [38740] LOG:  duration: 0.225 ms
2022-11-28 14:57:25.170 UTC [38740] LOG:  duration: 0.353 ms
2022-11-28 14:57:25.170 UTC [38740] LOG:  execute <unnamed>: select T.oid::bigint as id, T.spcname as name,
	       T.xmin as state_number, pg_catalog.pg_get_userbyid(T.spcowner) as owner,
	       pg_catalog.pg_tablespace_location(T.oid) /* null */ as location,
	       T.spcoptions /* null */ as options,
	       D.description as comment
	from pg_catalog.pg_tablespace T
	  left join pg_catalog.pg_shdescription D on D.objoid = T.oid
	--  where pg_catalog.age(T.xmin) <= #TXAGE
2022-11-28 14:57:25.170 UTC [38740] LOG:  duration: 0.041 ms
2022-11-28 14:57:25.200 UTC [38740] LOG:  duration: 0.092 ms
2022-11-28 14:57:25.200 UTC [38740] LOG:  duration: 0.137 ms
2022-11-28 14:57:25.200 UTC [38740] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.spcacl as acl
	          from pg_catalog.pg_tablespace T 
	          union all
	          select T.oid as object_id,
	                 T.datacl as acl
	          from pg_catalog.pg_database T 
2022-11-28 14:57:25.200 UTC [38740] LOG:  duration: 0.036 ms
2022-11-28 14:57:25.208 UTC [38740] LOG:  duration: 0.180 ms
2022-11-28 14:57:25.208 UTC [38740] LOG:  duration: 0.321 ms
2022-11-28 14:57:25.208 UTC [38740] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:25.208 UTC [38740] DETAIL:  parameters: $1 = '1034'
2022-11-28 14:57:25.208 UTC [38740] LOG:  duration: 0.065 ms
2022-11-28 14:57:25.209 UTC [38740] LOG:  duration: 0.192 ms
2022-11-28 14:57:25.210 UTC [38740] LOG:  duration: 0.329 ms
2022-11-28 14:57:25.210 UTC [38740] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2022-11-28 14:57:25.210 UTC [38740] DETAIL:  parameters: $1 = '1034'
2022-11-28 14:57:25.210 UTC [38740] LOG:  duration: 0.035 ms
2022-11-28 14:57:25.211 UTC [38740] LOG:  duration: 0.173 ms
2022-11-28 14:57:25.211 UTC [38740] LOG:  duration: 0.323 ms
2022-11-28 14:57:25.211 UTC [38740] LOG:  execute <unnamed>: SELECT e.oid, n.nspname = ANY(current_schemas(true)), n.nspname, e.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_type e ON t.typelem = e.oid JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2022-11-28 14:57:25.211 UTC [38740] DETAIL:  parameters: $1 = '1034'
2022-11-28 14:57:25.211 UTC [38740] LOG:  duration: 0.055 ms
2022-11-28 14:57:25.212 UTC [38740] LOG:  duration: 0.203 ms
2022-11-28 14:57:25.212 UTC [38740] LOG:  duration: 0.308 ms
2022-11-28 14:57:25.212 UTC [38740] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:25.212 UTC [38740] DETAIL:  parameters: $1 = '1033'
2022-11-28 14:57:25.212 UTC [38740] LOG:  duration: 0.070 ms
2022-11-28 14:57:25.236 UTC [38740] LOG:  duration: 0.032 ms
2022-11-28 14:57:25.236 UTC [38740] LOG:  duration: 0.008 ms
2022-11-28 14:57:25.240 UTC [38740] LOG:  duration: 0.036 ms
2022-11-28 14:57:25.240 UTC [38740] LOG:  duration: 0.010 ms
2022-11-28 14:57:25.240 UTC [38740] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 14:57:25.240 UTC [38740] LOG:  duration: 0.022 ms
2022-11-28 14:57:25.297 UTC [38740] LOG:  disconnection: session time: 0:00:01.159 user=postgres database=postgres host=127.0.0.1 port=55912
2022-11-28 14:57:33.616 UTC [38794] LOG:  connection received: host=127.0.0.1 port=55920
2022-11-28 14:57:33.618 UTC [38794] LOG:  connection authorized: user=postgres database=tp3
2022-11-28 14:57:33.621 UTC [38794] LOG:  duration: 0.260 ms
2022-11-28 14:57:33.621 UTC [38794] LOG:  duration: 0.014 ms
2022-11-28 14:57:33.621 UTC [38794] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 14:57:33.621 UTC [38794] LOG:  duration: 0.042 ms
2022-11-28 14:57:33.622 UTC [38794] LOG:  duration: 0.048 ms
2022-11-28 14:57:33.622 UTC [38794] LOG:  duration: 0.009 ms
2022-11-28 14:57:33.622 UTC [38794] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 14:57:33.622 UTC [38794] LOG:  duration: 0.024 ms
2022-11-28 14:57:33.624 UTC [38794] LOG:  duration: 0.263 ms
2022-11-28 14:57:33.624 UTC [38794] LOG:  duration: 0.094 ms
2022-11-28 14:57:33.624 UTC [38794] LOG:  execute <unnamed>: select version()
2022-11-28 14:57:33.624 UTC [38794] LOG:  duration: 0.023 ms
2022-11-28 14:57:33.631 UTC [38794] LOG:  duration: 0.051 ms
2022-11-28 14:57:33.631 UTC [38794] LOG:  duration: 0.010 ms
2022-11-28 14:57:33.631 UTC [38794] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 14:57:33.631 UTC [38794] LOG:  duration: 0.025 ms
2022-11-28 14:57:33.653 UTC [38794] LOG:  duration: 0.044 ms
2022-11-28 14:57:33.653 UTC [38794] LOG:  duration: 0.009 ms
2022-11-28 14:57:33.666 UTC [38794] LOG:  duration: 0.198 ms
2022-11-28 14:57:33.666 UTC [38794] LOG:  duration: 0.054 ms
2022-11-28 14:57:33.666 UTC [38794] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2022-11-28 14:57:33.666 UTC [38794] LOG:  duration: 0.061 ms
2022-11-28 14:57:33.681 UTC [38794] LOG:  duration: 0.633 ms
2022-11-28 14:57:33.681 UTC [38794] LOG:  duration: 0.088 ms
2022-11-28 14:57:33.681 UTC [38794] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2022-11-28 14:57:33.681 UTC [38794] LOG:  duration: 0.081 ms
2022-11-28 14:57:33.708 UTC [38794] LOG:  duration: 0.731 ms
2022-11-28 14:57:33.708 UTC [38794] LOG:  duration: 0.283 ms
2022-11-28 14:57:33.708 UTC [38794] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2022-11-28 14:57:33.709 UTC [38794] LOG:  duration: 0.164 ms
2022-11-28 14:57:33.727 UTC [38794] LOG:  duration: 0.362 ms
2022-11-28 14:57:33.728 UTC [38794] LOG:  duration: 0.094 ms
2022-11-28 14:57:33.728 UTC [38794] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then null
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2022-11-28 14:57:33.728 UTC [38794] LOG:  duration: 0.032 ms
2022-11-28 14:57:33.756 UTC [38794] LOG:  duration: 0.503 ms
2022-11-28 14:57:33.757 UTC [38794] LOG:  duration: 0.725 ms
2022-11-28 14:57:33.757 UTC [38794] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       datistemplate as is_template,
	       datallowconn as allow_connections,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:33.757 UTC [38794] LOG:  duration: 0.072 ms
2022-11-28 14:57:33.796 UTC [38794] LOG:  duration: 0.060 ms
2022-11-28 14:57:33.796 UTC [38794] LOG:  duration: 0.012 ms
2022-11-28 14:57:33.796 UTC [38794] LOG:  execute <unnamed>: show DateStyle
2022-11-28 14:57:33.796 UTC [38794] LOG:  duration: 0.027 ms
2022-11-28 14:57:33.821 UTC [38794] LOG:  duration: 0.625 ms
2022-11-28 14:57:33.822 UTC [38794] LOG:  duration: 0.422 ms
2022-11-28 14:57:33.822 UTC [38794] LOG:  execute <unnamed>: select name, is_dst from pg_catalog.pg_timezone_names
	union distinct
	select abbrev as name, is_dst from pg_catalog.pg_timezone_abbrevs
2022-11-28 14:57:33.887 UTC [38794] LOG:  duration: 65.519 ms
2022-11-28 14:57:33.937 UTC [38794] LOG:  duration: 0.253 ms
2022-11-28 14:57:33.937 UTC [38794] LOG:  duration: 0.226 ms
2022-11-28 14:57:33.937 UTC [38794] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2022-11-28 14:57:33.938 UTC [38794] LOG:  duration: 1.131 ms
2022-11-28 14:57:33.951 UTC [38794] LOG:  duration: 0.382 ms
2022-11-28 14:57:33.952 UTC [38794] LOG:  duration: 0.375 ms
2022-11-28 14:57:33.952 UTC [38794] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2022-11-28 14:57:33.952 UTC [38794] LOG:  duration: 0.049 ms
2022-11-28 14:57:33.965 UTC [38794] LOG:  duration: 0.144 ms
2022-11-28 14:57:33.965 UTC [38794] LOG:  duration: 0.201 ms
2022-11-28 14:57:33.965 UTC [38794] LOG:  execute <unnamed>: select member id, roleid role_id, admin_option
	          from pg_catalog.pg_auth_members order by id, roleid::text
2022-11-28 14:57:33.965 UTC [38794] LOG:  duration: 0.066 ms
2022-11-28 14:57:33.982 UTC [38794] LOG:  duration: 0.126 ms
2022-11-28 14:57:33.982 UTC [38794] LOG:  duration: 0.243 ms
2022-11-28 14:57:33.982 UTC [38794] LOG:  execute <unnamed>: select oid::bigint from pg_catalog.pg_tablespace
2022-11-28 14:57:33.983 UTC [38794] LOG:  duration: 0.038 ms
2022-11-28 14:57:34.008 UTC [38794] LOG:  duration: 0.329 ms
2022-11-28 14:57:34.008 UTC [38794] LOG:  duration: 0.199 ms
2022-11-28 14:57:34.008 UTC [38794] LOG:  execute <unnamed>: select T.oid::bigint as id, T.spcname as name,
	       T.xmin as state_number, pg_catalog.pg_get_userbyid(T.spcowner) as owner,
	       pg_catalog.pg_tablespace_location(T.oid) /* null */ as location,
	       T.spcoptions /* null */ as options,
	       D.description as comment
	from pg_catalog.pg_tablespace T
	  left join pg_catalog.pg_shdescription D on D.objoid = T.oid
	where pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:34.008 UTC [38794] DETAIL:  parameters: $1 = '894'
2022-11-28 14:57:34.008 UTC [38794] LOG:  duration: 0.021 ms
2022-11-28 14:57:34.022 UTC [38794] LOG:  duration: 0.152 ms
2022-11-28 14:57:34.022 UTC [38794] LOG:  duration: 0.144 ms
2022-11-28 14:57:34.022 UTC [38794] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.spcacl as acl
	          from pg_catalog.pg_tablespace T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($1::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.datacl as acl
	          from pg_catalog.pg_database T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($2::varchar::xid)
2022-11-28 14:57:34.022 UTC [38794] DETAIL:  parameters: $1 = '894', $2 = '894'
2022-11-28 14:57:34.022 UTC [38794] LOG:  duration: 0.025 ms
2022-11-28 14:57:34.055 UTC [38794] LOG:  duration: 0.171 ms
2022-11-28 14:57:34.056 UTC [38794] LOG:  duration: 0.713 ms
2022-11-28 14:57:34.056 UTC [38794] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:34.056 UTC [38794] LOG:  duration: 0.069 ms
2022-11-28 14:57:34.063 UTC [38794] LOG:  duration: 0.688 ms
2022-11-28 14:57:34.063 UTC [38794] LOG:  duration: 0.492 ms
2022-11-28 14:57:34.063 UTC [38794] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:34.063 UTC [38794] DETAIL:  parameters: $1 = '28'
2022-11-28 14:57:34.063 UTC [38794] LOG:  duration: 0.051 ms
2022-11-28 14:57:34.077 UTC [38794] LOG:  duration: 0.127 ms
2022-11-28 14:57:34.078 UTC [38794] LOG:  duration: 0.299 ms
2022-11-28 14:57:34.078 UTC [38794] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:34.078 UTC [38794] LOG:  duration: 0.061 ms
2022-11-28 14:57:34.091 UTC [38794] LOG:  duration: 0.295 ms
2022-11-28 14:57:34.091 UTC [38794] LOG:  duration: 0.167 ms
2022-11-28 14:57:34.091 UTC [38794] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2022-11-28 14:57:34.091 UTC [38794] LOG:  duration: 0.019 ms
2022-11-28 14:57:34.103 UTC [38794] LOG:  duration: 0.112 ms
2022-11-28 14:57:34.103 UTC [38794] LOG:  duration: 0.160 ms
2022-11-28 14:57:34.103 UTC [38794] LOG:  execute <unnamed>: select t.oid as id, t.xmin state_number, t.evtname as name, t.evtevent as event,
	       t.evtfoid routine_id, pg_catalog.pg_get_userbyid(t.evtowner) as "owner",
	       t.evttags tags
	from pg_catalog.pg_event_trigger t
	--  where pg_catalog.age(t.xmin) <= #TXAGE
2022-11-28 14:57:34.103 UTC [38794] LOG:  duration: 0.013 ms
2022-11-28 14:57:34.115 UTC [38794] LOG:  duration: 0.276 ms
2022-11-28 14:57:34.116 UTC [38794] LOG:  duration: 0.848 ms
2022-11-28 14:57:34.116 UTC [38794] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  --  where pg_catalog.age(fdw.xmin) <= #TXAGE
2022-11-28 14:57:34.116 UTC [38794] LOG:  duration: 0.016 ms
2022-11-28 14:57:34.127 UTC [38794] LOG:  duration: 0.156 ms
2022-11-28 14:57:34.128 UTC [38794] LOG:  duration: 0.183 ms
2022-11-28 14:57:34.128 UTC [38794] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  --  where pg_catalog.age(srv.xmin) <= #TXAGE
2022-11-28 14:57:34.128 UTC [38794] LOG:  duration: 0.013 ms
2022-11-28 14:57:34.139 UTC [38794] LOG:  duration: 0.166 ms
2022-11-28 14:57:34.140 UTC [38794] LOG:  duration: 0.195 ms
2022-11-28 14:57:34.140 UTC [38794] LOG:  execute <unnamed>: select oid as id,
	       umserver as server_id,
	       case when umuser = 0 then null else pg_catalog.pg_get_userbyid(umuser) end as user,
	       umoptions as options
	from pg_catalog.pg_user_mapping
	--  where pg_catalog.age(xmin) <= #TXAGE
	order by server_id
2022-11-28 14:57:34.140 UTC [38794] LOG:  duration: 0.016 ms
2022-11-28 14:57:34.151 UTC [38794] LOG:  duration: 0.268 ms
2022-11-28 14:57:34.151 UTC [38794] LOG:  duration: 0.474 ms
2022-11-28 14:57:34.151 UTC [38794] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	--  where pg_catalog.age(A.xmin) <= #TXAGE
2022-11-28 14:57:34.151 UTC [38794] LOG:  duration: 0.139 ms
2022-11-28 14:57:34.171 UTC [38794] LOG:  duration: 0.239 ms
2022-11-28 14:57:34.171 UTC [38794] LOG:  duration: 0.331 ms
2022-11-28 14:57:34.171 UTC [38794] LOG:  execute <unnamed>: select pg_extension.oid as id,
	       pg_extension.xmin as state_number,
	       extname as name,
	       extversion as version,
	       extnamespace as schema_id,
	       nspname as schema_name,
	       array(select target
	             from pg_extension_update_paths(extname)
	             where source = extversion and path is not null) as available_updates
	from pg_catalog.pg_extension
	  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
	--  where pg_catalog.age(pg_extension.xmin) <= #TXAGE
2022-11-28 14:57:34.177 UTC [38794] LOG:  duration: 5.524 ms
2022-11-28 14:57:34.192 UTC [38794] LOG:  duration: 0.210 ms
2022-11-28 14:57:34.194 UTC [38794] LOG:  duration: 1.385 ms
2022-11-28 14:57:34.194 UTC [38794] LOG:  execute <unnamed>: select l.oid as id, l.xmin state_number, lanname as name, lanpltrusted as trusted,
	       h.proname as handler, hs.nspname as handlerSchema,
	       i.proname as inline, isc.nspname as inlineSchema,
	       v.proname as validator, vs.nspname as validatorSchema
	from pg_catalog.pg_language l
	    left join pg_catalog.pg_proc h on h.oid = lanplcallfoid
	    left join pg_catalog.pg_namespace hs on hs.oid = h.pronamespace
	    left join pg_catalog.pg_proc i on i.oid = laninline
	    left join pg_catalog.pg_namespace isc on isc.oid = i.pronamespace
	    left join pg_catalog.pg_proc v on v.oid = lanvalidator
	    left join pg_catalog.pg_namespace vs on vs.oid = v.pronamespace
	--  where pg_catalog.age(l.xmin) <= #TXAGE
	order by lanname
2022-11-28 14:57:34.194 UTC [38794] LOG:  duration: 0.115 ms
2022-11-28 14:57:34.211 UTC [38794] LOG:  duration: 0.323 ms
2022-11-28 14:57:34.211 UTC [38794] LOG:  duration: 0.126 ms
2022-11-28 14:57:34.211 UTC [38794] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_event_trigger'::regclass = classoid then 'T'
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_cast'::regclass = classoid then 'C'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_language'::regclass = classoid then 'L'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	--  and pg_catalog.age(D.xmin) <= #TXAGE
2022-11-28 14:57:34.212 UTC [38794] LOG:  duration: 0.727 ms
2022-11-28 14:57:34.231 UTC [38794] LOG:  duration: 0.116 ms
2022-11-28 14:57:34.231 UTC [38794] LOG:  duration: 0.172 ms
2022-11-28 14:57:34.231 UTC [38794] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.fdwacl as acl
	          from pg_catalog.pg_foreign_data_wrapper T 
	          union all
	          select T.oid as object_id,
	                 T.lanacl as acl
	          from pg_catalog.pg_language T 
	          union all
	          select T.oid as object_id,
	                 T.nspacl as acl
	          from pg_catalog.pg_namespace T 
	          union all
	          select T.oid as object_id,
	                 T.srvacl as acl
	          from pg_catalog.pg_foreign_server T 
	          
2022-11-28 14:57:34.231 UTC [38794] LOG:  duration: 0.032 ms
2022-11-28 14:57:34.238 UTC [38794] LOG:  duration: 0.209 ms
2022-11-28 14:57:34.238 UTC [38794] LOG:  duration: 0.280 ms
2022-11-28 14:57:34.238 UTC [38794] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:34.238 UTC [38794] DETAIL:  parameters: $1 = '1034'
2022-11-28 14:57:34.238 UTC [38794] LOG:  duration: 0.053 ms
2022-11-28 14:57:34.239 UTC [38794] LOG:  duration: 0.082 ms
2022-11-28 14:57:34.239 UTC [38794] LOG:  duration: 0.255 ms
2022-11-28 14:57:34.239 UTC [38794] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2022-11-28 14:57:34.239 UTC [38794] DETAIL:  parameters: $1 = '1034'
2022-11-28 14:57:34.239 UTC [38794] LOG:  duration: 0.025 ms
2022-11-28 14:57:34.240 UTC [38794] LOG:  duration: 0.167 ms
2022-11-28 14:57:34.240 UTC [38794] LOG:  duration: 0.395 ms
2022-11-28 14:57:34.240 UTC [38794] LOG:  execute <unnamed>: SELECT e.oid, n.nspname = ANY(current_schemas(true)), n.nspname, e.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_type e ON t.typelem = e.oid JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2022-11-28 14:57:34.240 UTC [38794] DETAIL:  parameters: $1 = '1034'
2022-11-28 14:57:34.240 UTC [38794] LOG:  duration: 0.073 ms
2022-11-28 14:57:34.241 UTC [38794] LOG:  duration: 0.179 ms
2022-11-28 14:57:34.241 UTC [38794] LOG:  duration: 0.309 ms
2022-11-28 14:57:34.241 UTC [38794] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:34.241 UTC [38794] DETAIL:  parameters: $1 = '1033'
2022-11-28 14:57:34.241 UTC [38794] LOG:  duration: 0.053 ms
2022-11-28 14:57:34.255 UTC [38794] LOG:  duration: 0.317 ms
2022-11-28 14:57:34.257 UTC [38794] LOG:  duration: 1.558 ms
2022-11-28 14:57:34.257 UTC [38794] LOG:  execute <unnamed>: select C.oid,
	       C.xmin as state_number,
	       C.castsource as castsource_id,
	       pg_catalog.quote_ident(SN.nspname) || '.' || pg_catalog.quote_ident(S.typname) as castsource_name,
	       C.casttarget as casttarget_id,
	       pg_catalog.quote_ident(TN.nspname) || '.' || pg_catalog.quote_ident(T.typname) as casttarget_name,
	       C.castfunc as castfunc_id,
	       pg_catalog.quote_ident(FN.nspname) || '.' || pg_catalog.quote_ident(F.proname) as castfunc_name,
	       C.castcontext,
	       C.castmethod
	from pg_cast C
	     left outer join pg_proc F on C.castfunc::oid = F.oid
	     left outer join pg_namespace FN on F.pronamespace = FN.oid
	     join pg_type S on C.castsource::oid = S.oid
	     join pg_namespace SN on S.typnamespace = SN.oid
	     join pg_type T on C.casttarget::oid = T.oid
	     join pg_namespace TN on T.typnamespace = TN.oid
	--  where pg_catalog.age(C.xmin) <= #TXAGE
2022-11-28 14:57:34.259 UTC [38794] LOG:  duration: 2.150 ms
2022-11-28 14:57:34.337 UTC [38794] LOG:  duration: 0.289 ms
2022-11-28 14:57:34.337 UTC [38794] LOG:  duration: 0.535 ms
2022-11-28 14:57:34.337 UTC [38794] LOG:  execute <unnamed>: select 'sequence' as dependent_kind,
	       'table' as owner_kind,
	       D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid = C_SEQ.oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
2022-11-28 14:57:34.343 UTC [38794] LOG:  duration: 5.787 ms
2022-11-28 14:57:34.369 UTC [38794] LOG:  duration: 0.037 ms
2022-11-28 14:57:34.369 UTC [38794] LOG:  duration: 0.007 ms
2022-11-28 14:57:34.371 UTC [38794] LOG:  duration: 0.048 ms
2022-11-28 14:57:34.371 UTC [38794] LOG:  duration: 0.008 ms
2022-11-28 14:57:34.371 UTC [38794] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 14:57:34.371 UTC [38794] LOG:  duration: 0.020 ms
2022-11-28 14:57:34.376 UTC [38794] LOG:  disconnection: session time: 0:00:00.759 user=postgres database=tp3 host=127.0.0.1 port=55920
2022-11-28 14:57:57.592 UTC [38835] LOG:  connection received: host=127.0.0.1 port=59470
2022-11-28 14:57:57.593 UTC [38835] LOG:  connection authorized: user=postgres database=tp3
2022-11-28 14:57:57.596 UTC [38835] LOG:  duration: 0.379 ms
2022-11-28 14:57:57.596 UTC [38835] LOG:  duration: 0.015 ms
2022-11-28 14:57:57.596 UTC [38835] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 14:57:57.596 UTC [38835] LOG:  duration: 0.040 ms
2022-11-28 14:57:57.596 UTC [38835] LOG:  duration: 0.028 ms
2022-11-28 14:57:57.596 UTC [38835] LOG:  duration: 0.005 ms
2022-11-28 14:57:57.596 UTC [38835] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 14:57:57.596 UTC [38835] LOG:  duration: 0.017 ms
2022-11-28 14:57:57.599 UTC [38835] LOG:  duration: 0.303 ms
2022-11-28 14:57:57.599 UTC [38835] LOG:  duration: 0.092 ms
2022-11-28 14:57:57.599 UTC [38835] LOG:  execute <unnamed>: select version()
2022-11-28 14:57:57.599 UTC [38835] LOG:  duration: 0.023 ms
2022-11-28 14:57:57.604 UTC [38835] LOG:  duration: 0.098 ms
2022-11-28 14:57:57.605 UTC [38835] LOG:  duration: 0.050 ms
2022-11-28 14:57:57.605 UTC [38835] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 14:57:57.605 UTC [38835] LOG:  duration: 0.031 ms
2022-11-28 14:57:57.615 UTC [38835] LOG:  duration: 0.032 ms
2022-11-28 14:57:57.616 UTC [38835] LOG:  duration: 0.010 ms
2022-11-28 14:57:57.628 UTC [38835] LOG:  duration: 0.321 ms
2022-11-28 14:57:57.628 UTC [38835] LOG:  duration: 0.082 ms
2022-11-28 14:57:57.628 UTC [38835] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2022-11-28 14:57:57.628 UTC [38835] LOG:  duration: 0.085 ms
2022-11-28 14:57:57.640 UTC [38835] LOG:  duration: 0.405 ms
2022-11-28 14:57:57.641 UTC [38835] LOG:  duration: 0.110 ms
2022-11-28 14:57:57.641 UTC [38835] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2022-11-28 14:57:57.641 UTC [38835] LOG:  duration: 0.280 ms
2022-11-28 14:57:57.666 UTC [38835] LOG:  duration: 0.791 ms
2022-11-28 14:57:57.667 UTC [38835] LOG:  duration: 0.309 ms
2022-11-28 14:57:57.667 UTC [38835] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2022-11-28 14:57:57.667 UTC [38835] LOG:  duration: 0.145 ms
2022-11-28 14:57:57.695 UTC [38835] LOG:  duration: 0.251 ms
2022-11-28 14:57:57.695 UTC [38835] LOG:  duration: 0.068 ms
2022-11-28 14:57:57.695 UTC [38835] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then null
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2022-11-28 14:57:57.695 UTC [38835] LOG:  duration: 0.037 ms
2022-11-28 14:57:57.718 UTC [38835] LOG:  duration: 0.568 ms
2022-11-28 14:57:57.719 UTC [38835] LOG:  duration: 0.678 ms
2022-11-28 14:57:57.719 UTC [38835] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       datistemplate as is_template,
	       datallowconn as allow_connections,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:57.719 UTC [38835] LOG:  duration: 0.075 ms
2022-11-28 14:57:57.741 UTC [38835] LOG:  duration: 0.061 ms
2022-11-28 14:57:57.741 UTC [38835] LOG:  duration: 0.010 ms
2022-11-28 14:57:57.741 UTC [38835] LOG:  execute <unnamed>: show DateStyle
2022-11-28 14:57:57.741 UTC [38835] LOG:  duration: 0.038 ms
2022-11-28 14:57:57.761 UTC [38835] LOG:  duration: 0.808 ms
2022-11-28 14:57:57.762 UTC [38835] LOG:  duration: 0.372 ms
2022-11-28 14:57:57.762 UTC [38835] LOG:  execute <unnamed>: select name, is_dst from pg_catalog.pg_timezone_names
	union distinct
	select abbrev as name, is_dst from pg_catalog.pg_timezone_abbrevs
2022-11-28 14:57:57.832 UTC [38835] LOG:  duration: 70.122 ms
2022-11-28 14:57:57.877 UTC [38835] LOG:  duration: 0.415 ms
2022-11-28 14:57:57.878 UTC [38835] LOG:  duration: 0.344 ms
2022-11-28 14:57:57.878 UTC [38835] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2022-11-28 14:57:57.878 UTC [38835] LOG:  duration: 0.768 ms
2022-11-28 14:57:57.901 UTC [38835] LOG:  duration: 0.669 ms
2022-11-28 14:57:57.902 UTC [38835] LOG:  duration: 0.606 ms
2022-11-28 14:57:57.902 UTC [38835] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2022-11-28 14:57:57.902 UTC [38835] LOG:  duration: 0.081 ms
2022-11-28 14:57:57.926 UTC [38835] LOG:  duration: 0.278 ms
2022-11-28 14:57:57.926 UTC [38835] LOG:  duration: 0.358 ms
2022-11-28 14:57:57.926 UTC [38835] LOG:  execute <unnamed>: select member id, roleid role_id, admin_option
	          from pg_catalog.pg_auth_members order by id, roleid::text
2022-11-28 14:57:57.926 UTC [38835] LOG:  duration: 0.091 ms
2022-11-28 14:57:57.951 UTC [38835] LOG:  duration: 0.319 ms
2022-11-28 14:57:57.951 UTC [38835] LOG:  duration: 0.271 ms
2022-11-28 14:57:57.951 UTC [38835] LOG:  execute <unnamed>: select oid::bigint from pg_catalog.pg_tablespace
2022-11-28 14:57:57.951 UTC [38835] LOG:  duration: 0.026 ms
2022-11-28 14:57:57.978 UTC [38835] LOG:  duration: 0.572 ms
2022-11-28 14:57:57.978 UTC [38835] LOG:  duration: 0.297 ms
2022-11-28 14:57:57.978 UTC [38835] LOG:  execute <unnamed>: select T.oid::bigint as id, T.spcname as name,
	       T.xmin as state_number, pg_catalog.pg_get_userbyid(T.spcowner) as owner,
	       pg_catalog.pg_tablespace_location(T.oid) /* null */ as location,
	       T.spcoptions /* null */ as options,
	       D.description as comment
	from pg_catalog.pg_tablespace T
	  left join pg_catalog.pg_shdescription D on D.objoid = T.oid
	where pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:57.978 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:57.978 UTC [38835] LOG:  duration: 0.028 ms
2022-11-28 14:57:58.001 UTC [38835] LOG:  duration: 0.238 ms
2022-11-28 14:57:58.001 UTC [38835] LOG:  duration: 0.211 ms
2022-11-28 14:57:58.002 UTC [38835] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.spcacl as acl
	          from pg_catalog.pg_tablespace T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($1::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.datacl as acl
	          from pg_catalog.pg_database T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($2::varchar::xid)
2022-11-28 14:57:58.002 UTC [38835] DETAIL:  parameters: $1 = '895', $2 = '895'
2022-11-28 14:57:58.002 UTC [38835] LOG:  duration: 0.035 ms
2022-11-28 14:57:58.034 UTC [38835] LOG:  duration: 0.316 ms
2022-11-28 14:57:58.035 UTC [38835] LOG:  duration: 0.696 ms
2022-11-28 14:57:58.035 UTC [38835] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:58.035 UTC [38835] LOG:  duration: 0.067 ms
2022-11-28 14:57:58.048 UTC [38835] LOG:  duration: 0.990 ms
2022-11-28 14:57:58.049 UTC [38835] LOG:  duration: 1.017 ms
2022-11-28 14:57:58.049 UTC [38835] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:58.049 UTC [38835] DETAIL:  parameters: $1 = '28'
2022-11-28 14:57:58.049 UTC [38835] LOG:  duration: 0.082 ms
2022-11-28 14:57:58.072 UTC [38835] LOG:  duration: 0.207 ms
2022-11-28 14:57:58.072 UTC [38835] LOG:  duration: 0.302 ms
2022-11-28 14:57:58.072 UTC [38835] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2022-11-28 14:57:58.073 UTC [38835] LOG:  duration: 0.124 ms
2022-11-28 14:57:58.096 UTC [38835] LOG:  duration: 0.382 ms
2022-11-28 14:57:58.097 UTC [38835] LOG:  duration: 0.437 ms
2022-11-28 14:57:58.097 UTC [38835] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2022-11-28 14:57:58.097 UTC [38835] LOG:  duration: 0.029 ms
2022-11-28 14:57:58.119 UTC [38835] LOG:  duration: 0.106 ms
2022-11-28 14:57:58.119 UTC [38835] LOG:  duration: 0.355 ms
2022-11-28 14:57:58.119 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_event_trigger
2022-11-28 14:57:58.119 UTC [38835] LOG:  duration: 0.021 ms
2022-11-28 14:57:58.139 UTC [38835] LOG:  duration: 0.484 ms
2022-11-28 14:57:58.139 UTC [38835] LOG:  duration: 0.329 ms
2022-11-28 14:57:58.139 UTC [38835] LOG:  execute <unnamed>: select t.oid as id, t.xmin state_number, t.evtname as name, t.evtevent as event,
	       t.evtfoid routine_id, pg_catalog.pg_get_userbyid(t.evtowner) as "owner",
	       t.evttags tags
	from pg_catalog.pg_event_trigger t
	where pg_catalog.age(t.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:58.139 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.139 UTC [38835] LOG:  duration: 0.029 ms
2022-11-28 14:57:58.163 UTC [38835] LOG:  duration: 0.098 ms
2022-11-28 14:57:58.164 UTC [38835] LOG:  duration: 0.451 ms
2022-11-28 14:57:58.164 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_foreign_data_wrapper
2022-11-28 14:57:58.164 UTC [38835] LOG:  duration: 0.020 ms
2022-11-28 14:57:58.190 UTC [38835] LOG:  duration: 0.467 ms
2022-11-28 14:57:58.191 UTC [38835] LOG:  duration: 1.154 ms
2022-11-28 14:57:58.191 UTC [38835] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  where pg_catalog.age(fdw.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:58.191 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.191 UTC [38835] LOG:  duration: 0.035 ms
2022-11-28 14:57:58.217 UTC [38835] LOG:  duration: 0.139 ms
2022-11-28 14:57:58.218 UTC [38835] LOG:  duration: 0.405 ms
2022-11-28 14:57:58.218 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_foreign_server
2022-11-28 14:57:58.218 UTC [38835] LOG:  duration: 0.020 ms
2022-11-28 14:57:58.242 UTC [38835] LOG:  duration: 0.302 ms
2022-11-28 14:57:58.242 UTC [38835] LOG:  duration: 0.197 ms
2022-11-28 14:57:58.242 UTC [38835] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  where pg_catalog.age(srv.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:58.242 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.242 UTC [38835] LOG:  duration: 0.022 ms
2022-11-28 14:57:58.263 UTC [38835] LOG:  duration: 0.146 ms
2022-11-28 14:57:58.264 UTC [38835] LOG:  duration: 0.264 ms
2022-11-28 14:57:58.264 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_user_mapping
2022-11-28 14:57:58.264 UTC [38835] LOG:  duration: 0.019 ms
2022-11-28 14:57:58.289 UTC [38835] LOG:  duration: 0.295 ms
2022-11-28 14:57:58.290 UTC [38835] LOG:  duration: 0.331 ms
2022-11-28 14:57:58.290 UTC [38835] LOG:  execute <unnamed>: select oid as id,
	       umserver as server_id,
	       case when umuser = 0 then null else pg_catalog.pg_get_userbyid(umuser) end as user,
	       umoptions as options
	from pg_catalog.pg_user_mapping
	where pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
	order by server_id
2022-11-28 14:57:58.290 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.290 UTC [38835] LOG:  duration: 0.031 ms
2022-11-28 14:57:58.309 UTC [38835] LOG:  duration: 0.220 ms
2022-11-28 14:57:58.309 UTC [38835] LOG:  duration: 0.396 ms
2022-11-28 14:57:58.309 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_am
2022-11-28 14:57:58.309 UTC [38835] LOG:  duration: 0.038 ms
2022-11-28 14:57:58.337 UTC [38835] LOG:  duration: 0.577 ms
2022-11-28 14:57:58.337 UTC [38835] LOG:  duration: 0.498 ms
2022-11-28 14:57:58.337 UTC [38835] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	where pg_catalog.age(A.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:58.337 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.337 UTC [38835] LOG:  duration: 0.025 ms
2022-11-28 14:57:58.358 UTC [38835] LOG:  duration: 0.173 ms
2022-11-28 14:57:58.358 UTC [38835] LOG:  duration: 0.226 ms
2022-11-28 14:57:58.358 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_extension
2022-11-28 14:57:58.358 UTC [38835] LOG:  duration: 0.021 ms
2022-11-28 14:57:58.379 UTC [38835] LOG:  duration: 0.313 ms
2022-11-28 14:57:58.379 UTC [38835] LOG:  duration: 0.264 ms
2022-11-28 14:57:58.379 UTC [38835] LOG:  execute <unnamed>: select pg_extension.oid as id,
	       pg_extension.xmin as state_number,
	       extname as name,
	       extversion as version,
	       extnamespace as schema_id,
	       nspname as schema_name,
	       array(select target
	             from pg_extension_update_paths(extname)
	             where source = extversion and path is not null) as available_updates
	from pg_catalog.pg_extension
	  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
	where pg_catalog.age(pg_extension.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:58.379 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.379 UTC [38835] LOG:  duration: 0.025 ms
2022-11-28 14:57:58.400 UTC [38835] LOG:  duration: 0.103 ms
2022-11-28 14:57:58.400 UTC [38835] LOG:  duration: 0.272 ms
2022-11-28 14:57:58.400 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_language
2022-11-28 14:57:58.400 UTC [38835] LOG:  duration: 0.026 ms
2022-11-28 14:57:58.426 UTC [38835] LOG:  duration: 0.529 ms
2022-11-28 14:57:58.427 UTC [38835] LOG:  duration: 1.415 ms
2022-11-28 14:57:58.428 UTC [38835] LOG:  execute <unnamed>: select l.oid as id, l.xmin state_number, lanname as name, lanpltrusted as trusted,
	       h.proname as handler, hs.nspname as handlerSchema,
	       i.proname as inline, isc.nspname as inlineSchema,
	       v.proname as validator, vs.nspname as validatorSchema
	from pg_catalog.pg_language l
	    left join pg_catalog.pg_proc h on h.oid = lanplcallfoid
	    left join pg_catalog.pg_namespace hs on hs.oid = h.pronamespace
	    left join pg_catalog.pg_proc i on i.oid = laninline
	    left join pg_catalog.pg_namespace isc on isc.oid = i.pronamespace
	    left join pg_catalog.pg_proc v on v.oid = lanvalidator
	    left join pg_catalog.pg_namespace vs on vs.oid = v.pronamespace
	where pg_catalog.age(l.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
	order by lanname
2022-11-28 14:57:58.428 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.428 UTC [38835] LOG:  duration: 0.157 ms
2022-11-28 14:57:58.447 UTC [38835] LOG:  duration: 0.173 ms
2022-11-28 14:57:58.447 UTC [38835] LOG:  duration: 0.132 ms
2022-11-28 14:57:58.447 UTC [38835] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2022-11-28 14:57:58.448 UTC [38835] LOG:  duration: 0.852 ms
2022-11-28 14:57:58.471 UTC [38835] LOG:  duration: 0.495 ms
2022-11-28 14:57:58.471 UTC [38835] LOG:  duration: 0.220 ms
2022-11-28 14:57:58.471 UTC [38835] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_event_trigger'::regclass = classoid then 'T'
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_cast'::regclass = classoid then 'C'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_language'::regclass = classoid then 'L'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:58.471 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.472 UTC [38835] LOG:  duration: 0.742 ms
2022-11-28 14:57:58.492 UTC [38835] LOG:  duration: 0.277 ms
2022-11-28 14:57:58.492 UTC [38835] LOG:  duration: 0.353 ms
2022-11-28 14:57:58.492 UTC [38835] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.fdwacl as acl
	          from pg_catalog.pg_foreign_data_wrapper T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($1::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.lanacl as acl
	          from pg_catalog.pg_language T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($2::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.nspacl as acl
	          from pg_catalog.pg_namespace T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($3::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.srvacl as acl
	          from pg_catalog.pg_foreign_server T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($4::varchar::xid)
	          
2022-11-28 14:57:58.492 UTC [38835] DETAIL:  parameters: $1 = '895', $2 = '895', $3 = '895', $4 = '895'
2022-11-28 14:57:58.492 UTC [38835] LOG:  duration: 0.036 ms
2022-11-28 14:57:58.510 UTC [38835] LOG:  duration: 0.095 ms
2022-11-28 14:57:58.510 UTC [38835] LOG:  duration: 0.275 ms
2022-11-28 14:57:58.510 UTC [38835] LOG:  execute <unnamed>: select oid from pg_catalog.pg_cast
2022-11-28 14:57:58.510 UTC [38835] LOG:  duration: 0.084 ms
2022-11-28 14:57:58.539 UTC [38835] LOG:  duration: 0.487 ms
2022-11-28 14:57:58.541 UTC [38835] LOG:  duration: 1.934 ms
2022-11-28 14:57:58.542 UTC [38835] LOG:  execute <unnamed>: select C.oid,
	       C.xmin as state_number,
	       C.castsource as castsource_id,
	       pg_catalog.quote_ident(SN.nspname) || '.' || pg_catalog.quote_ident(S.typname) as castsource_name,
	       C.casttarget as casttarget_id,
	       pg_catalog.quote_ident(TN.nspname) || '.' || pg_catalog.quote_ident(T.typname) as casttarget_name,
	       C.castfunc as castfunc_id,
	       pg_catalog.quote_ident(FN.nspname) || '.' || pg_catalog.quote_ident(F.proname) as castfunc_name,
	       C.castcontext,
	       C.castmethod
	from pg_cast C
	     left outer join pg_proc F on C.castfunc::oid = F.oid
	     left outer join pg_namespace FN on F.pronamespace = FN.oid
	     join pg_type S on C.castsource::oid = S.oid
	     join pg_namespace SN on S.typnamespace = SN.oid
	     join pg_type T on C.casttarget::oid = T.oid
	     join pg_namespace TN on T.typnamespace = TN.oid
	where pg_catalog.age(C.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2022-11-28 14:57:58.542 UTC [38835] DETAIL:  parameters: $1 = '895'
2022-11-28 14:57:58.542 UTC [38835] LOG:  duration: 0.129 ms
2022-11-28 14:57:58.568 UTC [38835] LOG:  duration: 0.324 ms
2022-11-28 14:57:58.569 UTC [38835] LOG:  duration: 0.758 ms
2022-11-28 14:57:58.569 UTC [38835] LOG:  execute <unnamed>: select 'sequence' as dependent_kind,
	       'table' as owner_kind,
	       D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid = C_SEQ.oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
2022-11-28 14:57:58.574 UTC [38835] LOG:  duration: 5.418 ms
2022-11-28 14:57:58.624 UTC [38835] LOG:  duration: 0.254 ms
2022-11-28 14:57:58.625 UTC [38835] LOG:  duration: 0.466 ms
2022-11-28 14:57:58.625 UTC [38835] LOG:  execute <unnamed>: select cls.xmin as sequence_state_number,
	       sq.seqrelid as sequence_id,
	       cls.relname as sequence_name,
	       pg_catalog.format_type(sq.seqtypid, null) as data_type,
	       sq.seqstart as next_value,
	       sq.seqincrement as inc_value,
	       sq.seqmin as min_value,
	       sq.seqmax as max_value,
	       sq.seqcache as cache_size,
	       sq.seqcycle as cycle_option,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_sequence sq
	    join pg_class cls on sq.seqrelid = cls.oid
	    where cls.relnamespace = $1::oid
	          --  and pg_catalog.age(cls.xmin) <= #TXAGE
2022-11-28 14:57:58.625 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.625 UTC [38835] LOG:  duration: 0.144 ms
2022-11-28 14:57:58.663 UTC [38835] LOG:  duration: 0.448 ms
2022-11-28 14:57:58.664 UTC [38835] LOG:  duration: 0.790 ms
2022-11-28 14:57:58.664 UTC [38835] LOG:  execute <unnamed>: select T.oid as type_id,
	       T.xmin as type_state_number,
	       T.typname as type_name,
	       T.typtype as type_sub_kind,
	       T.typcategory as type_category,
	       T.typrelid as class_id,
	       T.typbasetype as base_type_id,
	       case when T.typtype in ('c','e') then null
	            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
	       T.typdefault as default_expression,
	       T.typnotnull as mandatory,
	       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
	from pg_catalog.pg_type T
	         left outer join pg_catalog.pg_class C
	             on T.typrelid = C.oid
	where T.typnamespace = $1::oid
	  --  and pg_catalog.age(T.xmin) <= #TXAGE
	  and (T.typtype in ('d','e') or
	       C.relkind = 'c'::"char" or
	       (T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A')) or
	       T.typtype = 'p' and not T.typisdefined)
	order by 1
2022-11-28 14:57:58.664 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.664 UTC [38835] LOG:  duration: 0.249 ms
2022-11-28 14:57:58.694 UTC [38835] LOG:  duration: 0.490 ms
2022-11-28 14:57:58.694 UTC [38835] LOG:  duration: 0.628 ms
2022-11-28 14:57:58.694 UTC [38835] LOG:  execute <unnamed>: select T.relkind as table_kind,
	       T.relname as table_name,
	       T.oid as table_id,
	       T.xmin as table_state_number,
	       false /* T.relhasoids */ as table_with_oids,
	       T.reltablespace as tablespace_id,
	       T.reloptions as options,
	       T.relpersistence as persistence,
	       (select pg_catalog.array_agg(inhparent::bigint order by inhseqno)::varchar from pg_catalog.pg_inherits where T.oid = inhrelid) as ancestors,
	       (select pg_catalog.array_agg(inhrelid::bigint order by inhrelid)::varchar from pg_catalog.pg_inherits where T.oid = inhparent) as successors,
	       T.relispartition /* false */ as is_partition,
	       pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
	       pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
	       T.relam am_id,
	       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
	from pg_catalog.pg_class T
	where relnamespace = $1::oid
	  and relkind in ('r', 'm', 'v', 'f', 'p')
	  --  and pg_catalog.age(T.xmin) <= #TXAGE
	order by table_kind, table_id
2022-11-28 14:57:58.694 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.695 UTC [38835] LOG:  duration: 0.463 ms
2022-11-28 14:57:58.727 UTC [38835] LOG:  duration: 0.370 ms
2022-11-28 14:57:58.727 UTC [38835] LOG:  duration: 0.437 ms
2022-11-28 14:57:58.727 UTC [38835] LOG:  execute <unnamed>: select ft.ftrelid as table_id,
	       srv.srvname as table_server,
	       ft.ftoptions as table_options,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_foreign_table ft
	     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
	     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
	where cls.relnamespace = $1::oid
	  --  and pg_catalog.age(ft.xmin) <= #TXAGE
	order by table_id
2022-11-28 14:57:58.727 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.727 UTC [38835] LOG:  duration: 0.026 ms
2022-11-28 14:57:58.744 UTC [38835] LOG:  duration: 0.705 ms
2022-11-28 14:57:58.746 UTC [38835] LOG:  duration: 1.116 ms
2022-11-28 14:57:58.746 UTC [38835] LOG:  execute <unnamed>: with schema_procs as (select prorettype, proargtypes, proallargtypes
	                      from pg_catalog.pg_proc
	                      where pronamespace = $1::oid
	                        /* and pg_catalog.age(xmin) <= #TXAGE */ ),
	     schema_opers as (select oprleft, oprright, oprresult
	                      from pg_catalog.pg_operator
	                      where oprnamespace = $2::oid
	                        /* and pg_catalog.age(xmin) <= #TXAGE */ ),
	     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
	                           from pg_catalog.pg_aggregate A
	                           join pg_catalog.pg_proc P
	                             on A.aggfnoid = P.oid
	                           where P.pronamespace = $3::oid
	                           /* and (pg_catalog.age(A.xmin) <= #TXAGE or pg_catalog.age(P.xmin) <= #TXAGE) */),
	     schema_arg_types as ( select prorettype as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proargtypes) as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proallargtypes) as type_id
	                           from schema_procs
	                           union
	                           select oprleft as type_id
	                           from schema_opers
	                           where oprleft is not null
	                           union
	                           select oprright as type_id
	                           from schema_opers
	                           where oprright is not null
	                           union
	                           select oprresult as type_id
	                           from schema_opers
	                           where oprresult is not null
	                           union
	                           select aggtranstype::oid as type_id
	                           from schema_aggregates
	                           union
	                           select aggmtranstype::oid as type_id
	                           from schema_aggregates
	                           
	                           )
	select type_id, pg_catalog.format_type(type_id, null) as type_spec
	from schema_arg_types
	where type_id <> 0
2022-11-28 14:57:58.746 UTC [38835] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200'
2022-11-28 14:57:58.747 UTC [38835] LOG:  duration: 1.375 ms
2022-11-28 14:57:58.780 UTC [38835] LOG:  duration: 0.316 ms
2022-11-28 14:57:58.781 UTC [38835] LOG:  duration: 0.631 ms
2022-11-28 14:57:58.781 UTC [38835] LOG:  execute <unnamed>: with languages as (select oid as lang_oid, lanname as lang
	                   from pg_catalog.pg_language),
	     routines as (select proname as r_name,
	                         prolang as lang_oid,
	                         oid as r_id,
	                         xmin as r_state_number,
	                         proargnames as arg_names,
	                         proargmodes as arg_modes,
	                         proargtypes::int[] as in_arg_types,
	                         proallargtypes::int[] as all_arg_types,
	                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
	                         provariadic as arg_variadic_id,
	                         prorettype as ret_type_id,
	                         proretset as ret_set,
	                         prokind /* case when proiswindow then 'w'
	                                                when proisagg then 'a'
	                                                else 'f'
	                                           end */ as kind,
	                         provolatile as volatile_kind,
	                         proisstrict as is_strict,
	                         prosecdef as is_security_definer,
	                         proconfig as configuration_parameters,
	                         procost as cost,
	                         pg_catalog.pg_get_userbyid(proowner) as "owner",
	                         prorows as rows ,
	                         proleakproof as is_leakproof  ,
	                         proparallel as concurrency_kind 
	                  from pg_catalog.pg_proc
	                  where pronamespace = $1::oid
	                    and not (prokind = 'a') /* proisagg */
	                    /* and pg_catalog.age(xmin) <= #TXAGE */)
	select *
	from routines natural join languages
2022-11-28 14:57:58.781 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.782 UTC [38835] LOG:  duration: 0.708 ms
2022-11-28 14:57:58.808 UTC [38835] LOG:  duration: 0.418 ms
2022-11-28 14:57:58.808 UTC [38835] LOG:  duration: 0.421 ms
2022-11-28 14:57:58.808 UTC [38835] LOG:  execute <unnamed>: select P.oid as aggregate_id,
	       P.xmin as state_number,
	       P.proname as aggregate_name,
	       P.proargnames as arg_names,
	       P.proargmodes as arg_modes,
	       P.proargtypes::int[] as in_arg_types,
	       P.proallargtypes::int[] as all_arg_types,
	       A.aggtransfn::oid as transition_function_id,
	       A.aggtransfn::regproc::text as transition_function_name,
	       A.aggtranstype as transition_type,
	       A.aggfinalfn::oid as final_function_id,
	       case when A.aggfinalfn::oid = 0 then null else A.aggfinalfn::regproc::varchar end as final_function_name,
	       case when A.aggfinalfn::oid = 0 then 0 else P.prorettype end as final_return_type,
	       A.agginitval as initial_value,
	       A.aggsortop as sort_operator_id,
	       case when A.aggsortop = 0 then null else A.aggsortop::regoper::varchar end as sort_operator_name,
	       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
	       ,
	       A.aggfinalextra as final_extra,
	       A.aggtransspace as state_size,
	       A.aggmtransfn::oid as moving_transition_id,
	       case when A.aggmtransfn::oid = 0 then null else A.aggmtransfn::regproc::varchar end as moving_transition_name,
	       A.aggminvtransfn::oid as inverse_transition_id,
	       case when A.aggminvtransfn::oid = 0 then null else A.aggminvtransfn::regproc::varchar end as inverse_transition_name,
	       A.aggmtranstype::oid as moving_state_type,
	       A.aggmtransspace as moving_state_size,
	       A.aggmfinalfn::oid as moving_final_id,
	       case when A.aggmfinalfn::oid = 0 then null else A.aggmfinalfn::regproc::varchar end as moving_final_name,
	       A.aggmfinalextra as moving_final_extra,
	       A.aggminitval as moving_initial_value,
	       A.aggkind as aggregate_kind,
	       A.aggnumdirectargs as direct_args
	       
	       ,
	       A.aggcombinefn::oid as combine_function_id,
	       case when A.aggcombinefn::oid = 0 then null else A.aggcombinefn::regproc::varchar end as combine_function_name,
	       A.aggserialfn::oid as serialization_function_id,
	       case when A.aggserialfn::oid = 0 then null else A.aggserialfn::regproc::varchar end as serialization_function_name,
	       A.aggdeserialfn::oid as deserialization_function_id,
	       case when A.aggdeserialfn::oid = 0 then null else A.aggdeserialfn::regproc::varchar end as deserialization_function_name,
	       P.proparallel as concurrency_kind
	       
	from pg_catalog.pg_aggregate A
	join pg_catalog.pg_proc P
	  on A.aggfnoid = P.oid
	where P.pronamespace = $1::oid
	--  and (pg_catalog.age(A.xmin) <= #TXAGE or pg_catalog.age(P.xmin) <= #TXAGE)
	order by P.oid
2022-11-28 14:57:58.808 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.809 UTC [38835] LOG:  duration: 0.450 ms
2022-11-28 14:57:58.824 UTC [38835] LOG:  duration: 0.234 ms
2022-11-28 14:57:58.824 UTC [38835] LOG:  duration: 0.169 ms
2022-11-28 14:57:58.824 UTC [38835] LOG:  execute <unnamed>: select O.oid as op_id,
	       O.xmin as state_number,
	       oprname as op_name,
	       oprkind as op_kind,
	       oprleft as arg_left_type_id,
	       oprright as arg_right_type_id,
	       oprresult as arg_result_type_id,
	       oprcode::oid as main_id,
	       oprcode::varchar as main_name,
	       oprrest::oid as restrict_id,
	       oprrest::varchar as restrict_name,
	       oprjoin::oid as join_id,
	       oprjoin::varchar as join_name,
	       oprcom::oid as com_id,
	       oprcom::regoper::varchar as com_name,
	       oprnegate::oid as neg_id,
	       oprnegate::regoper::varchar as neg_name,
	       oprcanmerge as merges,
	       oprcanhash as hashes,
	       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
	from pg_catalog.pg_operator O
	where oprnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= #TXAGE
2022-11-28 14:57:58.824 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.824 UTC [38835] LOG:  duration: 0.098 ms
2022-11-28 14:57:58.843 UTC [38835] LOG:  duration: 0.136 ms
2022-11-28 14:57:58.843 UTC [38835] LOG:  duration: 0.230 ms
2022-11-28 14:57:58.843 UTC [38835] LOG:  execute <unnamed>: select oid as id,
	       xmin as state_number,
	       collname as name,
	       collcollate as lc_collate,
	       collctype as lc_ctype,
	       pg_catalog.pg_get_userbyid(collowner) as "owner"
	from pg_catalog.pg_collation
	where collnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= #TXAGE
2022-11-28 14:57:58.843 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.843 UTC [38835] LOG:  duration: 0.175 ms
2022-11-28 14:57:58.854 UTC [38835] LOG:  duration: 0.221 ms
2022-11-28 14:57:58.854 UTC [38835] LOG:  duration: 0.378 ms
2022-11-28 14:57:58.854 UTC [38835] LOG:  execute <unnamed>: select O.oid as id,
	       O.xmin as state_number,
	       opcname as name,
	       opcintype::regtype::varchar as in_type,
	       case when opckeytype = 0 then null else opckeytype::regtype::varchar end as key_type,
	       opcdefault as is_default,
	       opcfamily as family_id,
	       opfname as family,
	       opcmethod as access_method_id,
	       pg_catalog.pg_get_userbyid(O.opcowner) as "owner"
	from pg_catalog.pg_opclass O join pg_catalog.pg_opfamily F on F.oid = opcfamily
	where opcnamespace = $1::oid
	  --  and pg_catalog.age(O.xmin) <= #TXAGE
2022-11-28 14:57:58.854 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.854 UTC [38835] LOG:  duration: 0.063 ms
2022-11-28 14:57:58.868 UTC [38835] LOG:  duration: 0.140 ms
2022-11-28 14:57:58.868 UTC [38835] LOG:  duration: 0.105 ms
2022-11-28 14:57:58.868 UTC [38835] LOG:  execute <unnamed>: select O.oid as id,
	       O.xmin as state_number,
	       opfname as name,
	       opfmethod as access_method_id,
	       pg_catalog.pg_get_userbyid(O.opfowner) as "owner"
	from pg_catalog.pg_opfamily O
	where opfnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= #TXAGE
2022-11-28 14:57:58.868 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.868 UTC [38835] LOG:  duration: 0.053 ms
2022-11-28 14:57:58.881 UTC [38835] LOG:  duration: 0.269 ms
2022-11-28 14:57:58.882 UTC [38835] LOG:  duration: 1.047 ms
2022-11-28 14:57:58.882 UTC [38835] LOG:  execute <unnamed>: select O.oid as id,
	       O.amopstrategy as strategy,
	       O.amopopr as op_id,
	       O.amopopr::regoperator::varchar as op_sig,
	       O.amopsortfamily /* null */ as sort_family_id,
	       SF.opfname /* null */ as sort_family,
	       O.amopfamily as family_id,
	       C.oid as class_id
	from pg_catalog.pg_amop O
	    left join pg_opfamily F on O.amopfamily = F.oid
	    left join pg_opfamily SF on O.amopsortfamily = SF.oid
	    left join pg_depend D on D.classid = 'pg_amop'::regclass and O.oid = D.objid and D.objsubid = 0
	    left join pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
	where C.opcnamespace = $1::oid or C.opcnamespace is null and F.opfnamespace = $2::oid
	  --  and pg_catalog.age(O.xmin) <= #TXAGE
	order by C.oid, F.oid
2022-11-28 14:57:58.882 UTC [38835] DETAIL:  parameters: $1 = '2200', $2 = '2200'
2022-11-28 14:57:58.883 UTC [38835] LOG:  duration: 0.568 ms
2022-11-28 14:57:58.895 UTC [38835] LOG:  duration: 0.267 ms
2022-11-28 14:57:58.895 UTC [38835] LOG:  duration: 0.777 ms
2022-11-28 14:57:58.895 UTC [38835] LOG:  execute <unnamed>: select P.oid as id,
	       P.amprocnum as num,
	       P.amproc::oid as proc_id,
	       P.amproc::regprocedure::varchar as proc_sig,
	       P.amproclefttype::regtype::varchar as left_type,
	       P.amprocrighttype::regtype::varchar as right_type,
	       P.amprocfamily as family_id,
	       C.oid as class_id
	from pg_catalog.pg_amproc P
	    left join pg_opfamily F on P.amprocfamily = F.oid
	    left join pg_depend D on D.classid = 'pg_amproc'::regclass and P.oid = D.objid and D.objsubid = 0
	    left join pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
	where C.opcnamespace = $1::oid or C.opcnamespace is null and F.opfnamespace = $2::oid
	  --  and pg_catalog.age(P.xmin) <= #TXAGE
	order by C.oid, F.oid
2022-11-28 14:57:58.895 UTC [38835] DETAIL:  parameters: $1 = '2200', $2 = '2200'
2022-11-28 14:57:58.896 UTC [38835] LOG:  duration: 0.361 ms
2022-11-28 14:57:58.910 UTC [38835] LOG:  duration: 0.670 ms
2022-11-28 14:57:58.911 UTC [38835] LOG:  duration: 1.264 ms
2022-11-28 14:57:58.911 UTC [38835] LOG:  execute <unnamed>: with T as ( select --  distinct
	                  T.oid as table_id, T.relname as table_name
	            from pg_catalog.pg_class T
	                 --  , pg_catalog.pg_attribute A
	            where T.relnamespace = $1::oid
	              and T.relkind in ('r', 'm', 'v', 'f', 'p')
	              --  and (pg_catalog.age(A.xmin) <= #TXAGE or pg_catalog.age(T.xmin) <= #TXAGE)
	              --  and A.attrelid = T.oid
	            )
	select T.table_id,
	       C.attnum as column_position,
	       C.attname as column_name,
	       C.xmin as column_state_number,
	       C.atttypmod as type_mod,
	       C.attndims as dimensions_number,
	       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
	       C.atttypid as type_id,
	       C.attnotnull as mandatory,
	       pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
	       not C.attislocal as column_is_inherited,
	       C.attfdwoptions as options,
	       C.attisdropped as column_is_dropped,
	       C.attidentity /* null */ as identity_kind,
	       C.attgenerated /* null */ as generated
	from T
	  join pg_catalog.pg_attribute C on T.table_id = C.attrelid
	  left join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
	where attnum > 0
	order by table_id, attnum
2022-11-28 14:57:58.911 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.912 UTC [38835] LOG:  duration: 0.720 ms
2022-11-28 14:57:58.937 UTC [38835] LOG:  duration: 0.346 ms
2022-11-28 14:57:58.938 UTC [38835] LOG:  duration: 1.062 ms
2022-11-28 14:57:58.938 UTC [38835] LOG:  execute <unnamed>: select tab.oid               table_id,
	       tab.relkind           table_kind,
	       ind_stor.relname      index_name,
	       ind_head.indexrelid   index_id,
	       ind_stor.xmin         state_number,
	       ind_head.indisunique  is_unique,
	       ind_head.indisprimary is_primary,
	       pg_catalog.pg_get_expr(ind_head.indpred, ind_head.indrelid) as condition,
	       (select pg_catalog.array_agg(inhparent::bigint order by inhseqno)::varchar from pg_catalog.pg_inherits where ind_stor.oid = inhrelid) as ancestors,
	       ind_stor.reltablespace tablespace_id,
	       opcmethod as access_method_id
	from pg_catalog.pg_class tab
	         join pg_catalog.pg_index ind_head
	              on ind_head.indrelid = tab.oid
	         join pg_catalog.pg_class ind_stor
	              on tab.relnamespace = ind_stor.relnamespace and ind_stor.oid = ind_head.indexrelid
	         left join pg_catalog.pg_opclass on pg_opclass.oid = ANY(indclass)
	where tab.relnamespace = $1::oid
	        and tab.relkind in ('r', 'm', 'v', 'p')
	        and ind_stor.relkind in ('i', 'I')
	--  and pg_catalog.age(ind_stor.xmin) <= #TXAGE
2022-11-28 14:57:58.938 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.938 UTC [38835] LOG:  duration: 0.311 ms
2022-11-28 14:57:58.957 UTC [38835] LOG:  duration: 0.706 ms
2022-11-28 14:57:58.960 UTC [38835] LOG:  duration: 2.462 ms
2022-11-28 14:57:58.960 UTC [38835] LOG:  execute <unnamed>: select ind_head.indexrelid index_id,
	       k col_idx,
	       k <= indnkeyatts /* true */ in_key,
	       ind_head.indkey[k-1] column_position,
	       ind_head.indoption[k-1] column_options,
	       ind_head.indcollation[k-1] /* null */ as collation,
	       colln.nspname /* null */ as collation_schema,
	       collname /* null */ as collation_str,
	       ind_head.indclass[k-1] as opclass,
	       case when opcdefault then null else opcn.nspname end as opclass_schema,
	       case when opcdefault then null else opcname end as opclass_str,
	       case
	           when indexprs is null then null
	           when ind_head.indkey[k-1] = 0 then chr(27) || pg_catalog.pg_get_indexdef(ind_head.indexrelid, k::int, true)
	           else pg_catalog.pg_get_indexdef(ind_head.indexrelid, k::int, true)
	       end as expression,
	       amcanorder can_order
	from pg_catalog.pg_index /* (select *, pg_catalog.generate_subscripts(indkey::int[], 1) + 1 k from pg_catalog.pg_index) */ ind_head
	         join pg_catalog.pg_class ind_stor
	              on ind_stor.oid = ind_head.indexrelid
	cross join unnest(ind_head.indkey) with ordinality u(u, k)
	left join pg_catalog.pg_collation
	on pg_collation.oid = ind_head.indcollation[k-1]
	left join pg_catalog.pg_namespace colln on collnamespace = colln.oid
	cross join pg_catalog.pg_indexam_has_property(ind_stor.relam, 'can_order') amcanorder /* left join pg_catalog.pg_am am on ind_stor.relam = am.oid*/
	         left join pg_catalog.pg_opclass
	                   on pg_opclass.oid = ind_head.indclass[k-1]
	         left join pg_catalog.pg_namespace opcn on opcnamespace = opcn.oid
	where ind_stor.relnamespace = $1::oid
	  and ind_stor.relkind in ('i', 'I')
	--  and pg_catalog.age(ind_stor.xmin) <= #TXAGE
	order by index_id, k
2022-11-28 14:57:58.960 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:58.960 UTC [38835] LOG:  duration: 0.459 ms
2022-11-28 14:57:58.979 UTC [38835] LOG:  duration: 0.246 ms
2022-11-28 14:57:58.980 UTC [38835] LOG:  duration: 0.697 ms
2022-11-28 14:57:58.980 UTC [38835] LOG:  execute <unnamed>: select T.oid table_id,
	       relkind table_kind,
	       C.oid::bigint con_id,
	       C.xmin::varchar::bigint con_state_id,
	       conname con_name,
	       contype con_kind,
	       conkey con_columns,
	       conindid index_id,
	       confrelid ref_table_id,
	       condeferrable is_deferrable,
	       condeferred is_init_deferred,
	       confupdtype on_update,
	       confdeltype on_delete,
	      connoinherit no_inherit,
	      pg_catalog.pg_get_expr(conbin, T.oid) /* consrc */ con_expression,
	       confkey ref_columns,
	       conexclop::int[] excl_operators,
	       array(select unnest::regoper::varchar from unnest(conexclop)) excl_operators_str
	from pg_catalog.pg_constraint C
	         join pg_catalog.pg_class T
	              on C.conrelid = T.oid
	   where relkind in ('r', 'v', 'f', 'p')
	     and relnamespace = $1::oid
	     and contype in ('p', 'u', 'f', 'c', 'x')
	     and connamespace = $2::oid
	--  and pg_catalog.age(T.xmin) <= #TXAGE or pg_catalog.age(c.xmin) <= #TXAGE
2022-11-28 14:57:58.980 UTC [38835] DETAIL:  parameters: $1 = '2200', $2 = '2200'
2022-11-28 14:57:58.980 UTC [38835] LOG:  duration: 0.133 ms
2022-11-28 14:57:59.004 UTC [38835] LOG:  duration: 0.240 ms
2022-11-28 14:57:59.005 UTC [38835] LOG:  duration: 0.479 ms
2022-11-28 14:57:59.005 UTC [38835] LOG:  execute <unnamed>: select R.ev_class as table_id,
	       R.oid as rule_id,
	       R.xmin as rule_state_number,
	       R.rulename as rule_name,
	       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
	       R.ev_enabled as rule_fire_mode,
	       R.is_instead as rule_is_instead
	from pg_catalog.pg_rewrite R
	where R.ev_class in (select oid
	                     from pg_catalog.pg_class
	                     where relnamespace = $1::oid)
	  --  and pg_catalog.age(R.xmin) <= #TXAGE
	  and R.rulename != '_RETURN'::name
	order by R.ev_class::bigint, ev_type
2022-11-28 14:57:59.005 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.005 UTC [38835] LOG:  duration: 0.107 ms
2022-11-28 14:57:59.020 UTC [38835] LOG:  duration: 0.255 ms
2022-11-28 14:57:59.021 UTC [38835] LOG:  duration: 0.609 ms
2022-11-28 14:57:59.021 UTC [38835] LOG:  execute <unnamed>: select
	       P.oid id,
	       P.xmin as state_number,
	       polname policyname,
	       polrelid table_id,
	       polpermissive /* true */ as permissive,
	       polroles roles,
	       polcmd cmd,
	       pg_get_expr(polqual, polrelid) qual,
	       pg_get_expr(polwithcheck, polrelid) with_check
	from pg_catalog.pg_policy P
	       join pg_catalog.pg_class C on polrelid = C.oid
	where relnamespace = $1::oid
	  --  and pg_catalog.age(P.xmin) <= #TXAGE
	order by polrelid
2022-11-28 14:57:59.021 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.021 UTC [38835] LOG:  duration: 0.032 ms
2022-11-28 14:57:59.035 UTC [38835] LOG:  duration: 0.319 ms
2022-11-28 14:57:59.036 UTC [38835] LOG:  duration: 0.653 ms
2022-11-28 14:57:59.036 UTC [38835] LOG:  execute <unnamed>: select T.tgrelid as table_id,
	       T.oid as trigger_id,
	       T.xmin as trigger_state_number,
	       T.tgname as trigger_name,
	       T.tgfoid as function_id,
	       pg_catalog.encode(T.tgargs, 'escape') as function_args,
	       T.tgtype as bits,
	       T.tgdeferrable as is_deferrable,
	       T.tginitdeferred as is_init_deferred,
	       T.tgenabled as trigger_fire_mode,
	       T.tgattr as columns,
	       T.tgconstraint != 0 as is_constraint,
	       pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
	from pg_catalog.pg_trigger T
	where T.tgrelid in (select oid
	                    from pg_catalog.pg_class
	                    where relnamespace = $1::oid)
	  --  and pg_catalog.age(T.xmin) <= #TXAGE
	  and not T.tgisinternal
2022-11-28 14:57:59.036 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.036 UTC [38835] LOG:  duration: 0.132 ms
2022-11-28 14:57:59.043 UTC [38835] LOG:  duration: 0.345 ms
2022-11-28 14:57:59.043 UTC [38835] LOG:  duration: 0.590 ms
2022-11-28 14:57:59.043 UTC [38835] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:59.043 UTC [38835] DETAIL:  parameters: $1 = '22'
2022-11-28 14:57:59.043 UTC [38835] LOG:  duration: 0.141 ms
2022-11-28 14:57:59.068 UTC [38835] LOG:  duration: 0.499 ms
2022-11-28 14:57:59.071 UTC [38835] LOG:  duration: 2.518 ms
2022-11-28 14:57:59.071 UTC [38835] LOG:  execute <unnamed>: select D.objoid id, C.relkind::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c'
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select T.oid id, 'T'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz')::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, 't'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, 'R'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, 'F'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, 'O'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, 'f'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opfamily O on O.oid = D.objoid
	where O.opfnamespace = $8::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, 'c'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opclass O on O.oid = D.objoid
	where O.opcnamespace = $9::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	union all
	select D.objoid id, 'C'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $10::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	
	union all
	select D.objoid id, 'P'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	       join pg_catalog.pg_policy P on P.oid = D.objoid
	       join pg_catalog.pg_class C on P.polrelid = C.oid
	where C.relnamespace = $11::oid
	--  and pg_catalog.age(D.xmin) <= #TXAGE
	
2022-11-28 14:57:59.071 UTC [38835] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200'
2022-11-28 14:57:59.072 UTC [38835] LOG:  duration: 1.088 ms
2022-11-28 14:57:59.081 UTC [38835] LOG:  duration: 0.144 ms
2022-11-28 14:57:59.082 UTC [38835] LOG:  duration: 0.330 ms
2022-11-28 14:57:59.082 UTC [38835] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.relacl as acl
	          from pg_catalog.pg_class T
	          where relnamespace = $1::oid 
	          union all
	          select T.oid as object_id,
	                 T.proacl as acl
	          from pg_catalog.pg_proc T
	          where pronamespace = $2::oid 
	          union all
	          select T.oid as object_id,
	                 T.typacl as acl
	          from pg_catalog.pg_type T
	          where typnamespace = $3::oid 
	          order by object_id
2022-11-28 14:57:59.082 UTC [38835] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200'
2022-11-28 14:57:59.082 UTC [38835] LOG:  duration: 0.560 ms
2022-11-28 14:57:59.087 UTC [38835] LOG:  duration: 0.203 ms
2022-11-28 14:57:59.087 UTC [38835] LOG:  duration: 0.281 ms
2022-11-28 14:57:59.087 UTC [38835] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:57:59.087 UTC [38835] DETAIL:  parameters: $1 = '1034'
2022-11-28 14:57:59.087 UTC [38835] LOG:  duration: 0.052 ms
2022-11-28 14:57:59.095 UTC [38835] LOG:  duration: 0.133 ms
2022-11-28 14:57:59.096 UTC [38835] LOG:  duration: 0.367 ms
2022-11-28 14:57:59.096 UTC [38835] LOG:  execute <unnamed>: select T.oid as object_id,
	               A.attnum as attr_position,
	               A.attacl as acl
	        from pg_catalog.pg_attribute A join pg_catalog.pg_class T on T.oid = A.attrelid
	        where relnamespace = $1::oid
	          and attnum > 0 
	        order by object_id, attr_position
2022-11-28 14:57:59.096 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.096 UTC [38835] LOG:  duration: 0.219 ms
2022-11-28 14:57:59.112 UTC [38835] LOG:  duration: 0.176 ms
2022-11-28 14:57:59.112 UTC [38835] LOG:  duration: 0.154 ms
2022-11-28 14:57:59.112 UTC [38835] LOG:  execute <unnamed>: select
	       T.relkind as view_kind,
	       T.oid as view_id,
	       pg_catalog.pg_get_viewdef(T.oid, true) as source_text
	from pg_catalog.pg_class T
	  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
	where N.oid = $1::oid
	  and T.relkind in ('m','v')
	  --  and (pg_catalog.age(T.xmin) <= #SRCTXAGE or exists(
	  --  select A.attrelid from pg_catalog.pg_attribute A where A.attrelid = T.oid and pg_catalog.age(A.xmin) <= #SRCTXAGE))
2022-11-28 14:57:59.112 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.112 UTC [38835] LOG:  duration: 0.114 ms
2022-11-28 14:57:59.125 UTC [38835] LOG:  duration: 0.278 ms
2022-11-28 14:57:59.126 UTC [38835] LOG:  duration: 0.325 ms
2022-11-28 14:57:59.126 UTC [38835] LOG:  execute <unnamed>: with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
	            from pg_catalog.pg_class
	            where relnamespace = $1::oid
	              and relkind in ('r', 'm', 'v', 'f', 'p') )
	select table_kind,
	       table_id,
	       R.oid as rule_id,
	       pg_catalog.pg_get_ruledef(R.oid, true) as source_text
	from A join pg_catalog.pg_rewrite R
	        on A.table_id = R.ev_class
	where R.rulename != '_RETURN'::name
	  --  and pg_catalog.age(R.xmin) <= #SRCTXAGE
2022-11-28 14:57:59.126 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.126 UTC [38835] LOG:  duration: 0.112 ms
2022-11-28 14:57:59.138 UTC [38835] LOG:  duration: 0.207 ms
2022-11-28 14:57:59.138 UTC [38835] LOG:  duration: 0.250 ms
2022-11-28 14:57:59.138 UTC [38835] LOG:  execute <unnamed>: with system_languages as ( select oid as lang
	                           from pg_catalog.pg_language
	                           where lanname in ('c','internal') )
	select oid as id,
	       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
	       pg_catalog.pg_get_function_result(oid) as result_def,
	       pg_catalog.pg_get_function_sqlbody(oid) /* null */ as sqlbody_def,
	       prosrc as source_text
	from pg_catalog.pg_proc
	where pronamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= #SRCTXAGE
	  and not (prokind = 'a') /* proisagg */
	  and prolang not in (select lang from system_languages)
	  and prosrc is not null
2022-11-28 14:57:59.138 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.139 UTC [38835] LOG:  duration: 1.314 ms
2022-11-28 14:57:59.275 UTC [38835] LOG:  duration: 0.140 ms
2022-11-28 14:57:59.275 UTC [38835] LOG:  duration: 0.245 ms
2022-11-28 14:57:59.275 UTC [38835] LOG:  execute <unnamed>: select distinct connamespace as schema_id
	from pg_catalog.pg_constraint F,
	     pg_catalog.pg_class O
	where F.contype = 'f'
	  and F.confrelid = O.oid
	  and O.relnamespace in ($1)
2022-11-28 14:57:59.275 UTC [38835] DETAIL:  parameters: $1 = '2200'
2022-11-28 14:57:59.275 UTC [38835] LOG:  duration: 0.069 ms
2022-11-28 14:57:59.297 UTC [38835] LOG:  duration: 0.025 ms
2022-11-28 14:57:59.297 UTC [38835] LOG:  duration: 0.007 ms
2022-11-28 14:57:59.299 UTC [38835] LOG:  duration: 0.047 ms
2022-11-28 14:57:59.299 UTC [38835] LOG:  duration: 0.010 ms
2022-11-28 14:57:59.299 UTC [38835] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 14:57:59.300 UTC [38835] LOG:  duration: 0.041 ms
2022-11-28 14:57:59.307 UTC [38835] LOG:  disconnection: session time: 0:00:01.715 user=postgres database=tp3 host=127.0.0.1 port=59470
2022-11-28 14:58:03.924 UTC [38851] LOG:  connection received: host=127.0.0.1 port=59472
2022-11-28 14:58:03.925 UTC [38851] LOG:  connection authorized: user=postgres database=tp3
2022-11-28 14:58:03.927 UTC [38851] LOG:  duration: 0.262 ms
2022-11-28 14:58:03.927 UTC [38851] LOG:  duration: 0.009 ms
2022-11-28 14:58:03.927 UTC [38851] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 14:58:03.927 UTC [38851] LOG:  duration: 0.024 ms
2022-11-28 14:58:03.928 UTC [38851] LOG:  duration: 0.058 ms
2022-11-28 14:58:03.928 UTC [38851] LOG:  duration: 0.009 ms
2022-11-28 14:58:03.928 UTC [38851] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 14:58:03.928 UTC [38851] LOG:  duration: 0.022 ms
2022-11-28 14:58:03.930 UTC [38851] LOG:  duration: 0.264 ms
2022-11-28 14:58:03.930 UTC [38851] LOG:  duration: 0.101 ms
2022-11-28 14:58:03.930 UTC [38851] LOG:  execute <unnamed>: select version()
2022-11-28 14:58:03.930 UTC [38851] LOG:  duration: 0.026 ms
2022-11-28 14:58:03.935 UTC [38851] LOG:  duration: 0.058 ms
2022-11-28 14:58:03.935 UTC [38851] LOG:  duration: 0.014 ms
2022-11-28 14:58:03.935 UTC [38851] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 14:58:03.935 UTC [38851] LOG:  duration: 0.029 ms
2022-11-28 14:58:03.953 UTC [38851] LOG:  duration: 0.045 ms
2022-11-28 14:58:03.953 UTC [38851] LOG:  duration: 0.010 ms
2022-11-28 14:58:04.143 UTC [38851] LOG:  duration: 0.263 ms
2022-11-28 14:58:04.143 UTC [38851] LOG:  duration: 0.050 ms
2022-11-28 14:58:04.143 UTC [38851] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 14:58:04.143 UTC [38851] LOG:  duration: 0.055 ms
2022-11-28 14:58:04.167 UTC [38851] LOG:  duration: 0.292 ms
2022-11-28 14:58:04.167 UTC [38851] LOG:  duration: 0.300 ms
2022-11-28 14:58:04.167 UTC [38851] LOG:  execute <unnamed>: SELECT t.*
	FROM public.countries t
	LIMIT 501
2022-11-28 14:58:04.167 UTC [38851] LOG:  duration: 0.040 ms
2022-11-28 14:58:04.179 UTC [38851] LOG:  duration: 1.209 ms
2022-11-28 14:58:04.182 UTC [38851] LOG:  duration: 3.452 ms
2022-11-28 14:58:04.182 UTC [38851] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16926 AS oid , 1 AS attnum UNION ALL SELECT 16926, 2 UNION ALL SELECT 16926, 3) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2022-11-28 14:58:04.183 UTC [38851] LOG:  duration: 0.177 ms
2022-11-28 14:58:04.304 UTC [38851] LOG:  duration: 0.049 ms
2022-11-28 14:58:04.304 UTC [38851] LOG:  duration: 0.007 ms
2022-11-28 14:58:04.307 UTC [38851] LOG:  duration: 0.031 ms
2022-11-28 14:58:04.307 UTC [38851] LOG:  duration: 0.008 ms
2022-11-28 14:58:04.307 UTC [38851] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 14:58:04.307 UTC [38851] LOG:  duration: 0.023 ms
2022-11-28 14:58:28.493 UTC [38914] LOG:  connection received: host=127.0.0.1 port=50158
2022-11-28 14:58:28.494 UTC [38914] LOG:  connection authorized: user=postgres database=tp3
2022-11-28 14:58:28.496 UTC [38914] LOG:  duration: 0.125 ms
2022-11-28 14:58:28.496 UTC [38914] LOG:  duration: 0.009 ms
2022-11-28 14:58:28.496 UTC [38914] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 14:58:28.496 UTC [38914] LOG:  duration: 0.021 ms
2022-11-28 14:58:28.496 UTC [38914] LOG:  duration: 0.034 ms
2022-11-28 14:58:28.496 UTC [38914] LOG:  duration: 0.009 ms
2022-11-28 14:58:28.496 UTC [38914] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 14:58:28.497 UTC [38914] LOG:  duration: 0.035 ms
2022-11-28 14:58:28.498 UTC [38914] LOG:  duration: 0.259 ms
2022-11-28 14:58:28.499 UTC [38914] LOG:  duration: 0.292 ms
2022-11-28 14:58:28.499 UTC [38914] LOG:  execute <unnamed>: select version()
2022-11-28 14:58:28.499 UTC [38914] LOG:  duration: 0.028 ms
2022-11-28 14:58:28.501 UTC [38914] LOG:  duration: 0.070 ms
2022-11-28 14:58:28.501 UTC [38914] LOG:  duration: 0.021 ms
2022-11-28 14:58:28.501 UTC [38914] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 14:58:28.501 UTC [38914] LOG:  duration: 0.032 ms
2022-11-28 14:58:28.510 UTC [38914] LOG:  duration: 0.058 ms
2022-11-28 14:58:28.510 UTC [38914] LOG:  duration: 0.023 ms
2022-11-28 14:58:28.521 UTC [38914] LOG:  duration: 0.305 ms
2022-11-28 14:58:28.521 UTC [38914] LOG:  duration: 0.079 ms
2022-11-28 14:58:28.521 UTC [38914] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2022-11-28 14:58:28.521 UTC [38914] LOG:  duration: 0.087 ms
2022-11-28 14:58:28.527 UTC [38914] LOG:  duration: 0.103 ms
2022-11-28 14:58:28.527 UTC [38914] LOG:  duration: 0.061 ms
2022-11-28 14:58:28.527 UTC [38914] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2022-11-28 14:58:28.527 UTC [38914] LOG:  duration: 0.025 ms
2022-11-28 14:58:28.539 UTC [38914] LOG:  duration: 0.670 ms
2022-11-28 14:58:28.539 UTC [38914] LOG:  duration: 0.276 ms
2022-11-28 14:58:28.539 UTC [38914] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2022-11-28 14:58:28.540 UTC [38914] LOG:  duration: 0.239 ms
2022-11-28 14:58:28.553 UTC [38914] LOG:  duration: 0.229 ms
2022-11-28 14:58:28.553 UTC [38914] LOG:  duration: 0.072 ms
2022-11-28 14:58:28.553 UTC [38914] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then null
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2022-11-28 14:58:28.553 UTC [38914] LOG:  duration: 0.037 ms
2022-11-28 14:58:28.584 UTC [38914] LOG:  duration: 1.385 ms
2022-11-28 14:58:28.586 UTC [38914] LOG:  duration: 2.903 ms
2022-11-28 14:58:28.587 UTC [38914] LOG:  execute <unnamed>: select distinct oid, xmin
	from pg_catalog.pg_namespace
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_type
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_class
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_proc
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_operator
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_constraint
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_event_trigger
	where oid in (2200)
	union
	
	select distinct oid, xmin
	from pg_catalog.pg_collation
	where oid in (2200)
	union
	
	select distinct oid, xmin
	from pg_catalog.pg_rewrite
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_trigger
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_am
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_cast
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_foreign_data_wrapper
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_language
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_foreign_server
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_opfamily
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_opclass
	where oid in (2200)
	union
	select distinct oid, xmin
	from pg_catalog.pg_extension
	where oid in (2200)
	
	union
	select distinct oid, xmin
	from pg_catalog.pg_policy
	where oid in (2200)
	
	/* union
	select distinct oid, xmin
	from pg_catalog.pg_user_mapping
	where oid in (2200)
	*/
2022-11-28 14:58:28.587 UTC [38914] LOG:  duration: 0.362 ms
2022-11-28 14:58:28.596 UTC [38914] LOG:  duration: 0.650 ms
2022-11-28 14:58:28.596 UTC [38914] LOG:  duration: 0.695 ms
2022-11-28 14:58:28.596 UTC [38914] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2022-11-28 14:58:28.596 UTC [38914] DETAIL:  parameters: $1 = '28'
2022-11-28 14:58:28.596 UTC [38914] LOG:  duration: 0.067 ms
2022-11-28 14:58:28.605 UTC [38914] LOG:  duration: 0.039 ms
2022-11-28 14:58:28.605 UTC [38914] LOG:  duration: 0.010 ms
2022-11-28 14:58:28.609 UTC [38914] LOG:  duration: 0.062 ms
2022-11-28 14:58:28.609 UTC [38914] LOG:  duration: 0.015 ms
2022-11-28 14:58:28.609 UTC [38914] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 14:58:28.609 UTC [38914] LOG:  duration: 0.034 ms
2022-11-28 14:58:28.614 UTC [38914] LOG:  disconnection: session time: 0:00:00.120 user=postgres database=tp3 host=127.0.0.1 port=50158
2022-11-28 14:59:18.569 UTC [39094] LOG:  connection received: host=127.0.0.1 port=41594
2022-11-28 14:59:18.571 UTC [39094] LOG:  connection authorized: user=postgres database=tp3
2022-11-28 14:59:18.572 UTC [39094] LOG:  duration: 0.133 ms
2022-11-28 14:59:18.572 UTC [39094] LOG:  duration: 0.009 ms
2022-11-28 14:59:18.572 UTC [39094] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 14:59:18.572 UTC [39094] LOG:  duration: 0.022 ms
2022-11-28 14:59:18.572 UTC [39094] LOG:  duration: 0.022 ms
2022-11-28 14:59:18.573 UTC [39094] LOG:  duration: 0.007 ms
2022-11-28 14:59:18.573 UTC [39094] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 14:59:18.573 UTC [39094] LOG:  duration: 0.217 ms
2022-11-28 14:59:18.575 UTC [39094] LOG:  duration: 0.228 ms
2022-11-28 14:59:18.575 UTC [39094] LOG:  duration: 0.097 ms
2022-11-28 14:59:18.575 UTC [39094] LOG:  execute <unnamed>: select version()
2022-11-28 14:59:18.575 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 14:59:18.579 UTC [39094] LOG:  duration: 0.072 ms
2022-11-28 14:59:18.579 UTC [39094] LOG:  duration: 0.009 ms
2022-11-28 14:59:18.579 UTC [39094] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 14:59:18.579 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 14:59:18.586 UTC [39094] LOG:  duration: 0.034 ms
2022-11-28 14:59:18.586 UTC [39094] LOG:  duration: 0.009 ms
2022-11-28 14:59:18.650 UTC [39094] LOG:  duration: 0.275 ms
2022-11-28 14:59:18.650 UTC [39094] LOG:  duration: 0.047 ms
2022-11-28 14:59:18.650 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 14:59:18.650 UTC [39094] LOG:  duration: 0.051 ms
2022-11-28 14:59:18.674 UTC [39094] LOG:  duration: 0.412 ms
2022-11-28 14:59:18.674 UTC [39094] LOG:  duration: 0.316 ms
2022-11-28 14:59:18.674 UTC [39094] LOG:  execute <unnamed>: select *
	from countries
2022-11-28 14:59:18.674 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 14:59:18.682 UTC [39094] LOG:  duration: 1.334 ms
2022-11-28 14:59:18.687 UTC [39094] LOG:  duration: 4.362 ms
2022-11-28 14:59:18.687 UTC [39094] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16926 AS oid , 1 AS attnum UNION ALL SELECT 16926, 2 UNION ALL SELECT 16926, 3) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2022-11-28 14:59:18.687 UTC [39094] LOG:  duration: 0.250 ms
2022-11-28 14:59:18.838 UTC [39094] LOG:  duration: 0.131 ms
2022-11-28 14:59:18.838 UTC [39094] LOG:  duration: 0.009 ms
2022-11-28 14:59:18.842 UTC [39094] LOG:  duration: 0.050 ms
2022-11-28 14:59:18.843 UTC [39094] LOG:  duration: 0.010 ms
2022-11-28 14:59:18.843 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 14:59:18.843 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:00:56.369 UTC [39094] LOG:  duration: 0.059 ms
2022-11-28 15:00:56.369 UTC [39094] LOG:  duration: 0.008 ms
2022-11-28 15:00:56.372 UTC [39094] LOG:  duration: 0.061 ms
2022-11-28 15:00:56.372 UTC [39094] LOG:  duration: 0.008 ms
2022-11-28 15:00:56.374 UTC [39094] LOG:  duration: 0.086 ms
2022-11-28 15:00:56.374 UTC [39094] LOG:  duration: 0.013 ms
2022-11-28 15:00:56.383 UTC [39094] LOG:  duration: 0.106 ms
2022-11-28 15:00:56.383 UTC [39094] LOG:  duration: 0.014 ms
2022-11-28 15:00:56.383 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:00:56.383 UTC [39094] LOG:  duration: 0.033 ms
2022-11-28 15:00:56.394 UTC [39094] LOG:  duration: 0.124 ms
2022-11-28 15:00:56.394 UTC [39094] LOG:  duration: 0.066 ms
2022-11-28 15:00:56.394 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:00:56.394 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:00:56.416 UTC [39094] LOG:  duration: 0.330 ms
2022-11-28 15:00:56.417 UTC [39094] LOG:  duration: 0.281 ms
2022-11-28 15:00:56.417 UTC [39094] LOG:  execute <unnamed>: select employee_id,
	                           null as manager_id
	                    from employees
	                    where manager_id is null
2022-11-28 15:00:56.417 UTC [39094] LOG:  duration: 0.047 ms
2022-11-28 15:00:56.427 UTC [39094] LOG:  duration: 0.521 ms
2022-11-28 15:00:56.428 UTC [39094] LOG:  duration: 0.886 ms
2022-11-28 15:00:56.428 UTC [39094] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16968 AS oid , 1 AS attnum) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2022-11-28 15:00:56.428 UTC [39094] LOG:  duration: 0.202 ms
2022-11-28 15:00:56.483 UTC [39094] LOG:  duration: 0.060 ms
2022-11-28 15:00:56.487 UTC [39094] LOG:  duration: 0.090 ms
2022-11-28 15:00:56.487 UTC [39094] LOG:  duration: 0.013 ms
2022-11-28 15:00:56.487 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:00:56.487 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:00:59.733 UTC [39094] LOG:  duration: 0.045 ms
2022-11-28 15:00:59.736 UTC [39094] LOG:  duration: 0.049 ms
2022-11-28 15:00:59.737 UTC [39094] LOG:  duration: 0.044 ms
2022-11-28 15:00:59.746 UTC [39094] LOG:  duration: 0.085 ms
2022-11-28 15:00:59.746 UTC [39094] LOG:  duration: 0.011 ms
2022-11-28 15:00:59.746 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:00:59.746 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:00:59.756 UTC [39094] LOG:  duration: 0.108 ms
2022-11-28 15:00:59.757 UTC [39094] LOG:  duration: 0.055 ms
2022-11-28 15:00:59.757 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:00:59.757 UTC [39094] LOG:  duration: 0.032 ms
2022-11-28 15:00:59.779 UTC [39094] LOG:  duration: 0.112 ms
2022-11-28 15:00:59.779 UTC [39094] LOG:  duration: 0.104 ms
2022-11-28 15:00:59.779 UTC [39094] LOG:  execute <unnamed>: select employee_id,
	                           null as manager_id
	                    from employees
	                    where manager_id is null
2022-11-28 15:00:59.779 UTC [39094] LOG:  duration: 0.038 ms
2022-11-28 15:00:59.829 UTC [39094] LOG:  duration: 0.042 ms
2022-11-28 15:00:59.833 UTC [39094] LOG:  duration: 0.113 ms
2022-11-28 15:00:59.834 UTC [39094] LOG:  duration: 0.016 ms
2022-11-28 15:00:59.834 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:00:59.834 UTC [39094] LOG:  duration: 0.041 ms
2022-11-28 15:01:05.185 UTC [39094] LOG:  duration: 0.040 ms
2022-11-28 15:01:05.187 UTC [39094] LOG:  duration: 0.044 ms
2022-11-28 15:01:05.189 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:01:05.196 UTC [39094] LOG:  duration: 0.161 ms
2022-11-28 15:01:05.196 UTC [39094] LOG:  duration: 0.012 ms
2022-11-28 15:01:05.196 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:01:05.196 UTC [39094] LOG:  duration: 0.024 ms
2022-11-28 15:01:05.214 UTC [39094] LOG:  duration: 0.098 ms
2022-11-28 15:01:05.214 UTC [39094] LOG:  duration: 0.049 ms
2022-11-28 15:01:05.214 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:01:05.214 UTC [39094] LOG:  duration: 0.024 ms
2022-11-28 15:01:05.235 UTC [39094] ERROR:  column m.employee_id does not exist at character 445
2022-11-28 15:01:05.235 UTC [39094] HINT:  Perhaps you meant to reference the column "e.employee_id".
2022-11-28 15:01:05.235 UTC [39094] STATEMENT:  with recursive managers(employee,
	                        manager) as
	                   (select employee_id,
	                           null as manager_id
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
2022-11-28 15:01:05.277 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:01:05.281 UTC [39094] LOG:  duration: 0.070 ms
2022-11-28 15:01:05.281 UTC [39094] LOG:  duration: 0.010 ms
2022-11-28 15:01:05.281 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:01:05.281 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:01:08.620 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:01:08.622 UTC [39094] LOG:  duration: 0.037 ms
2022-11-28 15:01:08.623 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:01:08.627 UTC [39094] LOG:  duration: 0.053 ms
2022-11-28 15:01:08.627 UTC [39094] LOG:  duration: 0.010 ms
2022-11-28 15:01:08.627 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:01:08.627 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 15:01:08.644 UTC [39094] LOG:  duration: 0.126 ms
2022-11-28 15:01:08.645 UTC [39094] LOG:  duration: 0.065 ms
2022-11-28 15:01:08.645 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:01:08.645 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:01:08.660 UTC [39094] LOG:  duration: 0.206 ms
2022-11-28 15:01:08.660 UTC [39094] LOG:  duration: 0.114 ms
2022-11-28 15:01:08.660 UTC [39094] LOG:  execute <unnamed>: select employee_id,
	                           null as manager_id
	                    from employees
	                    where manager_id is null
2022-11-28 15:01:08.660 UTC [39094] LOG:  duration: 0.054 ms
2022-11-28 15:01:08.718 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:01:08.721 UTC [39094] LOG:  duration: 0.061 ms
2022-11-28 15:01:08.721 UTC [39094] LOG:  duration: 0.013 ms
2022-11-28 15:01:08.721 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:01:08.721 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:01:10.863 UTC [39094] LOG:  duration: 0.034 ms
2022-11-28 15:01:10.865 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:01:10.867 UTC [39094] LOG:  duration: 0.044 ms
2022-11-28 15:01:10.872 UTC [39094] LOG:  duration: 0.056 ms
2022-11-28 15:01:10.872 UTC [39094] LOG:  duration: 0.010 ms
2022-11-28 15:01:10.872 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:01:10.872 UTC [39094] LOG:  duration: 0.023 ms
2022-11-28 15:01:10.893 UTC [39094] LOG:  duration: 0.212 ms
2022-11-28 15:01:10.893 UTC [39094] LOG:  duration: 0.058 ms
2022-11-28 15:01:10.893 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:01:10.893 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:01:10.907 UTC [39094] ERROR:  relation "managers" does not exist at character 326
2022-11-28 15:01:10.907 UTC [39094] STATEMENT:  select employee_id,
	                           null as manager_id
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id
2022-11-28 15:01:10.915 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:01:10.919 UTC [39094] LOG:  duration: 0.051 ms
2022-11-28 15:01:10.919 UTC [39094] LOG:  duration: 0.011 ms
2022-11-28 15:01:10.919 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:01:10.919 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:02:11.537 UTC [39094] LOG:  duration: 0.126 ms
2022-11-28 15:02:11.539 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 15:02:11.541 UTC [39094] LOG:  duration: 0.168 ms
2022-11-28 15:02:11.547 UTC [39094] LOG:  duration: 0.062 ms
2022-11-28 15:02:11.548 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:02:11.548 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:02:11.548 UTC [39094] LOG:  duration: 0.036 ms
2022-11-28 15:02:11.567 UTC [39094] LOG:  duration: 0.108 ms
2022-11-28 15:02:11.567 UTC [39094] LOG:  duration: 0.050 ms
2022-11-28 15:02:11.567 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:02:11.567 UTC [39094] LOG:  duration: 0.024 ms
2022-11-28 15:02:11.582 UTC [39094] ERROR:  column m.employee does not exist at character 413
2022-11-28 15:02:11.582 UTC [39094] HINT:  Perhaps you meant to reference the column "m.employee_id".
2022-11-28 15:02:11.582 UTC [39094] STATEMENT:  with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           null
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee)
	select *
	from managers
2022-11-28 15:02:11.588 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 15:02:11.592 UTC [39094] LOG:  duration: 0.058 ms
2022-11-28 15:02:11.592 UTC [39094] LOG:  duration: 0.013 ms
2022-11-28 15:02:11.592 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:02:11.592 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 15:02:17.669 UTC [39094] LOG:  duration: 0.044 ms
2022-11-28 15:02:17.672 UTC [39094] LOG:  duration: 0.047 ms
2022-11-28 15:02:17.673 UTC [39094] LOG:  duration: 0.049 ms
2022-11-28 15:02:17.681 UTC [39094] LOG:  duration: 0.068 ms
2022-11-28 15:02:17.681 UTC [39094] LOG:  duration: 0.014 ms
2022-11-28 15:02:17.681 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:02:17.681 UTC [39094] LOG:  duration: 0.050 ms
2022-11-28 15:02:17.698 UTC [39094] LOG:  duration: 0.127 ms
2022-11-28 15:02:17.699 UTC [39094] LOG:  duration: 0.087 ms
2022-11-28 15:02:17.699 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:02:17.699 UTC [39094] LOG:  duration: 0.054 ms
2022-11-28 15:02:17.710 UTC [39094] ERROR:  recursive query "managers" column 2 has type text in non-recursive term but type integer overall at character 120
2022-11-28 15:02:17.710 UTC [39094] HINT:  Cast the output of the non-recursive term to the correct type.
2022-11-28 15:02:17.710 UTC [39094] STATEMENT:  with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           null
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
2022-11-28 15:02:17.718 UTC [39094] LOG:  duration: 0.053 ms
2022-11-28 15:02:17.721 UTC [39094] LOG:  duration: 0.059 ms
2022-11-28 15:02:17.721 UTC [39094] LOG:  duration: 0.012 ms
2022-11-28 15:02:17.721 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:02:17.721 UTC [39094] LOG:  duration: 0.038 ms
2022-11-28 15:02:39.177 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:02:39.179 UTC [39094] LOG:  duration: 0.035 ms
2022-11-28 15:02:39.181 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 15:02:39.188 UTC [39094] LOG:  duration: 0.095 ms
2022-11-28 15:02:39.188 UTC [39094] LOG:  duration: 0.014 ms
2022-11-28 15:02:39.188 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:02:39.188 UTC [39094] LOG:  duration: 0.034 ms
2022-11-28 15:02:39.202 UTC [39094] LOG:  duration: 0.111 ms
2022-11-28 15:02:39.202 UTC [39094] LOG:  duration: 0.057 ms
2022-11-28 15:02:39.202 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:02:39.202 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:02:39.227 UTC [39094] LOG:  duration: 0.337 ms
2022-11-28 15:02:39.227 UTC [39094] LOG:  duration: 0.490 ms
2022-11-28 15:02:39.227 UTC [39094] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           0
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
2022-11-28 15:02:39.227 UTC [39094] LOG:  duration: 0.128 ms
2022-11-28 15:02:39.285 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:02:39.288 UTC [39094] LOG:  duration: 0.061 ms
2022-11-28 15:02:39.288 UTC [39094] LOG:  duration: 0.014 ms
2022-11-28 15:02:39.288 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:02:39.288 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:03:41.374 UTC [39094] LOG:  duration: 0.082 ms
2022-11-28 15:03:41.376 UTC [39094] LOG:  duration: 0.040 ms
2022-11-28 15:03:41.379 UTC [39094] LOG:  duration: 0.037 ms
2022-11-28 15:03:41.387 UTC [39094] LOG:  duration: 0.058 ms
2022-11-28 15:03:41.387 UTC [39094] LOG:  duration: 0.010 ms
2022-11-28 15:03:41.387 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:03:41.387 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 15:03:41.403 UTC [39094] LOG:  duration: 0.165 ms
2022-11-28 15:03:41.403 UTC [39094] LOG:  duration: 0.070 ms
2022-11-28 15:03:41.403 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:03:41.403 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:03:41.418 UTC [39094] LOG:  duration: 0.181 ms
2022-11-28 15:03:41.419 UTC [39094] LOG:  duration: 0.317 ms
2022-11-28 15:03:41.419 UTC [39094] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           0
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
2022-11-28 15:03:41.419 UTC [39094] LOG:  duration: 0.162 ms
2022-11-28 15:03:41.480 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:03:41.482 UTC [39094] LOG:  duration: 0.060 ms
2022-11-28 15:03:41.482 UTC [39094] LOG:  duration: 0.012 ms
2022-11-28 15:03:41.482 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:03:41.482 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 15:03:43.922 UTC [39094] LOG:  duration: 0.034 ms
2022-11-28 15:03:43.924 UTC [39094] LOG:  duration: 0.049 ms
2022-11-28 15:03:43.926 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:03:43.934 UTC [39094] LOG:  duration: 0.053 ms
2022-11-28 15:03:43.934 UTC [39094] LOG:  duration: 0.009 ms
2022-11-28 15:03:43.934 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:03:43.934 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 15:03:43.941 UTC [39094] LOG:  duration: 0.109 ms
2022-11-28 15:03:43.941 UTC [39094] LOG:  duration: 0.054 ms
2022-11-28 15:03:43.941 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:03:43.941 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 15:03:43.963 UTC [39094] ERROR:  relation "managers" does not exist at character 15
2022-11-28 15:03:43.963 UTC [39094] STATEMENT:  select *
	from managers
2022-11-28 15:03:43.970 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:03:43.972 UTC [39094] LOG:  duration: 0.056 ms
2022-11-28 15:03:43.972 UTC [39094] LOG:  duration: 0.014 ms
2022-11-28 15:03:43.972 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:03:43.972 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:03:47.277 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:03:47.279 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:03:47.281 UTC [39094] LOG:  duration: 0.039 ms
2022-11-28 15:03:47.289 UTC [39094] LOG:  duration: 0.137 ms
2022-11-28 15:03:47.289 UTC [39094] LOG:  duration: 0.019 ms
2022-11-28 15:03:47.289 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:03:47.289 UTC [39094] LOG:  duration: 0.046 ms
2022-11-28 15:03:47.299 UTC [39094] LOG:  duration: 0.129 ms
2022-11-28 15:03:47.299 UTC [39094] LOG:  duration: 0.064 ms
2022-11-28 15:03:47.299 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:03:47.299 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:03:47.314 UTC [39094] LOG:  duration: 0.214 ms
2022-11-28 15:03:47.314 UTC [39094] LOG:  duration: 0.345 ms
2022-11-28 15:03:47.314 UTC [39094] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           0
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
2022-11-28 15:03:47.315 UTC [39094] LOG:  duration: 0.253 ms
2022-11-28 15:03:47.373 UTC [39094] LOG:  duration: 0.029 ms
2022-11-28 15:03:47.377 UTC [39094] LOG:  duration: 0.113 ms
2022-11-28 15:03:47.377 UTC [39094] LOG:  duration: 0.015 ms
2022-11-28 15:03:47.377 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:03:47.377 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 15:04:05.497 UTC [39094] LOG:  duration: 0.054 ms
2022-11-28 15:04:05.498 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:04:05.499 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:04:05.505 UTC [39094] LOG:  duration: 0.064 ms
2022-11-28 15:04:05.505 UTC [39094] LOG:  duration: 0.016 ms
2022-11-28 15:04:05.505 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:04:05.505 UTC [39094] LOG:  duration: 0.047 ms
2022-11-28 15:04:05.516 UTC [39094] LOG:  duration: 0.111 ms
2022-11-28 15:04:05.516 UTC [39094] LOG:  duration: 0.057 ms
2022-11-28 15:04:05.516 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:04:05.516 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:04:05.533 UTC [39094] LOG:  duration: 0.213 ms
2022-11-28 15:04:05.533 UTC [39094] LOG:  duration: 0.258 ms
2022-11-28 15:04:05.533 UTC [39094] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
2022-11-28 15:04:05.533 UTC [39094] LOG:  duration: 0.201 ms
2022-11-28 15:04:05.594 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 15:04:05.597 UTC [39094] LOG:  duration: 0.085 ms
2022-11-28 15:04:05.597 UTC [39094] LOG:  duration: 0.023 ms
2022-11-28 15:04:05.597 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:04:05.597 UTC [39094] LOG:  duration: 0.050 ms
2022-11-28 15:04:25.797 UTC [39094] LOG:  duration: 0.055 ms
2022-11-28 15:04:25.799 UTC [39094] LOG:  duration: 0.037 ms
2022-11-28 15:04:25.800 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:04:25.807 UTC [39094] LOG:  duration: 0.078 ms
2022-11-28 15:04:25.807 UTC [39094] LOG:  duration: 0.011 ms
2022-11-28 15:04:25.807 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:04:25.807 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 15:04:25.821 UTC [39094] LOG:  duration: 0.162 ms
2022-11-28 15:04:25.821 UTC [39094] LOG:  duration: 0.056 ms
2022-11-28 15:04:25.821 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:04:25.821 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:04:25.840 UTC [39094] LOG:  duration: 0.208 ms
2022-11-28 15:04:25.841 UTC [39094] LOG:  duration: 0.335 ms
2022-11-28 15:04:25.841 UTC [39094] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
	order by
	    employee_id
2022-11-28 15:04:25.841 UTC [39094] LOG:  duration: 0.169 ms
2022-11-28 15:04:25.884 UTC [39094] LOG:  duration: 0.029 ms
2022-11-28 15:04:25.888 UTC [39094] LOG:  duration: 0.060 ms
2022-11-28 15:04:25.888 UTC [39094] LOG:  duration: 0.011 ms
2022-11-28 15:04:25.888 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:04:25.889 UTC [39094] LOG:  duration: 0.277 ms
2022-11-28 15:08:20.646 UTC [39094] LOG:  duration: 0.029 ms
2022-11-28 15:08:20.648 UTC [39094] LOG:  duration: 0.029 ms
2022-11-28 15:08:20.650 UTC [39094] LOG:  duration: 0.029 ms
2022-11-28 15:08:20.661 UTC [39094] LOG:  duration: 0.060 ms
2022-11-28 15:08:20.661 UTC [39094] LOG:  duration: 0.014 ms
2022-11-28 15:08:20.661 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:08:20.661 UTC [39094] LOG:  duration: 0.032 ms
2022-11-28 15:08:20.676 UTC [39094] LOG:  duration: 0.157 ms
2022-11-28 15:08:20.676 UTC [39094] LOG:  duration: 0.065 ms
2022-11-28 15:08:20.676 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:08:20.676 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:08:20.696 UTC [39094] LOG:  duration: 0.340 ms
2022-11-28 15:08:20.697 UTC [39094] LOG:  duration: 0.633 ms
2022-11-28 15:08:20.697 UTC [39094] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select e.employee_id,
	                           e.manager_id
	                    from employees e
	                             join managers m on e.manager_id = m.employee_id)
	select *
	from managers
	order by employee_id
2022-11-28 15:08:20.697 UTC [39094] LOG:  duration: 0.142 ms
2022-11-28 15:08:20.755 UTC [39094] LOG:  duration: 0.030 ms
2022-11-28 15:08:20.758 UTC [39094] LOG:  duration: 0.056 ms
2022-11-28 15:08:20.758 UTC [39094] LOG:  duration: 0.011 ms
2022-11-28 15:08:20.758 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:08:20.758 UTC [39094] LOG:  duration: 0.028 ms
2022-11-28 15:09:12.076 UTC [39094] LOG:  duration: 0.053 ms
2022-11-28 15:09:12.078 UTC [39094] LOG:  duration: 0.038 ms
2022-11-28 15:09:12.080 UTC [39094] LOG:  duration: 0.026 ms
2022-11-28 15:09:12.088 UTC [39094] LOG:  duration: 0.060 ms
2022-11-28 15:09:12.088 UTC [39094] LOG:  duration: 0.011 ms
2022-11-28 15:09:12.088 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:09:12.088 UTC [39094] LOG:  duration: 0.025 ms
2022-11-28 15:09:12.106 UTC [39094] LOG:  duration: 0.115 ms
2022-11-28 15:09:12.107 UTC [39094] LOG:  duration: 0.108 ms
2022-11-28 15:09:12.107 UTC [39094] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:09:12.107 UTC [39094] LOG:  duration: 0.031 ms
2022-11-28 15:09:12.124 UTC [39094] LOG:  duration: 0.182 ms
2022-11-28 15:09:12.125 UTC [39094] LOG:  duration: 0.544 ms
2022-11-28 15:09:12.125 UTC [39094] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select *
	from managers
	order by employee_id
2022-11-28 15:09:12.125 UTC [39094] LOG:  duration: 0.202 ms
2022-11-28 15:09:12.194 UTC [39094] LOG:  duration: 0.027 ms
2022-11-28 15:09:12.196 UTC [39094] LOG:  duration: 0.069 ms
2022-11-28 15:09:12.196 UTC [39094] LOG:  duration: 0.012 ms
2022-11-28 15:09:12.196 UTC [39094] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:09:12.196 UTC [39094] LOG:  duration: 0.034 ms
2022-11-28 15:15:41.320 UTC [38851] LOG:  disconnection: session time: 0:17:37.396 user=postgres database=tp3 host=127.0.0.1 port=59472
2022-11-28 15:15:41.380 UTC [39094] LOG:  disconnection: session time: 0:16:22.811 user=postgres database=tp3 host=127.0.0.1 port=41594
2022-11-28 15:16:46.605 UTC [52853] LOG:  connection received: host=127.0.0.1 port=40700
2022-11-28 15:16:46.651 UTC [52853] LOG:  connection authorized: user=postgres database=tp3
2022-11-28 15:16:46.700 UTC [52853] LOG:  duration: 0.211 ms
2022-11-28 15:16:46.700 UTC [52853] LOG:  duration: 0.129 ms
2022-11-28 15:16:46.700 UTC [52853] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 15:16:46.700 UTC [52853] LOG:  duration: 0.039 ms
2022-11-28 15:16:46.701 UTC [52853] LOG:  duration: 0.174 ms
2022-11-28 15:16:46.702 UTC [52853] LOG:  duration: 0.012 ms
2022-11-28 15:16:46.702 UTC [52853] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 15:16:46.702 UTC [52853] LOG:  duration: 0.026 ms
2022-11-28 15:16:46.757 UTC [52853] LOG:  duration: 0.439 ms
2022-11-28 15:16:46.757 UTC [52853] LOG:  duration: 0.084 ms
2022-11-28 15:16:46.757 UTC [52853] LOG:  execute <unnamed>: select version()
2022-11-28 15:16:46.757 UTC [52853] LOG:  duration: 0.021 ms
2022-11-28 15:16:46.818 UTC [52853] LOG:  duration: 0.072 ms
2022-11-28 15:16:46.818 UTC [52853] LOG:  duration: 0.013 ms
2022-11-28 15:16:46.818 UTC [52853] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 15:16:46.818 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:16:46.962 UTC [52853] LOG:  duration: 0.037 ms
2022-11-28 15:16:46.962 UTC [52853] LOG:  duration: 0.012 ms
2022-11-28 15:16:47.062 UTC [52853] LOG:  duration: 0.355 ms
2022-11-28 15:16:47.062 UTC [52853] LOG:  duration: 0.096 ms
2022-11-28 15:16:47.062 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:16:47.062 UTC [52853] LOG:  duration: 0.086 ms
2022-11-28 15:16:47.215 UTC [52853] LOG:  duration: 0.896 ms
2022-11-28 15:16:47.216 UTC [52853] LOG:  duration: 1.058 ms
2022-11-28 15:16:47.216 UTC [52853] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select *
	from managers
	order by employee_id
2022-11-28 15:16:47.216 UTC [52853] LOG:  duration: 0.162 ms
2022-11-28 15:16:47.452 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:16:47.452 UTC [52853] LOG:  duration: 0.006 ms
2022-11-28 15:16:47.461 UTC [52853] LOG:  duration: 0.052 ms
2022-11-28 15:16:47.461 UTC [52853] LOG:  duration: 0.013 ms
2022-11-28 15:16:47.461 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:16:47.461 UTC [52853] LOG:  duration: 0.032 ms
2022-11-28 15:18:35.079 UTC [52853] LOG:  duration: 0.040 ms
2022-11-28 15:18:35.079 UTC [52853] LOG:  duration: 0.008 ms
2022-11-28 15:18:35.082 UTC [52853] LOG:  duration: 0.015 ms
2022-11-28 15:18:35.082 UTC [52853] LOG:  duration: 0.010 ms
2022-11-28 15:18:35.084 UTC [52853] LOG:  duration: 0.040 ms
2022-11-28 15:18:35.084 UTC [52853] LOG:  duration: 0.009 ms
2022-11-28 15:18:35.101 UTC [52853] LOG:  duration: 0.060 ms
2022-11-28 15:18:35.101 UTC [52853] LOG:  duration: 0.013 ms
2022-11-28 15:18:35.102 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:18:35.102 UTC [52853] LOG:  duration: 0.030 ms
2022-11-28 15:18:35.138 UTC [52853] ERROR:  syntax error at end of input at character 463
2022-11-28 15:18:35.138 UTC [52853] STATEMENT:  with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
2022-11-28 15:18:35.210 UTC [52853] LOG:  duration: 0.109 ms
2022-11-28 15:18:35.210 UTC [52853] LOG:  duration: 0.053 ms
2022-11-28 15:18:35.210 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:18:35.210 UTC [52853] LOG:  duration: 0.026 ms
2022-11-28 15:18:35.245 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:18:35.253 UTC [52853] LOG:  duration: 0.055 ms
2022-11-28 15:18:35.253 UTC [52853] LOG:  duration: 0.011 ms
2022-11-28 15:18:35.253 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:18:35.253 UTC [52853] LOG:  duration: 0.025 ms
2022-11-28 15:18:51.717 UTC [52853] LOG:  duration: 0.030 ms
2022-11-28 15:18:51.720 UTC [52853] LOG:  duration: 0.038 ms
2022-11-28 15:18:51.723 UTC [52853] LOG:  duration: 0.074 ms
2022-11-28 15:18:51.740 UTC [52853] LOG:  duration: 0.059 ms
2022-11-28 15:18:51.740 UTC [52853] LOG:  duration: 0.012 ms
2022-11-28 15:18:51.740 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:18:51.740 UTC [52853] LOG:  duration: 0.029 ms
2022-11-28 15:18:51.762 UTC [52853] LOG:  duration: 0.256 ms
2022-11-28 15:18:51.762 UTC [52853] LOG:  duration: 0.105 ms
2022-11-28 15:18:51.762 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:18:51.762 UTC [52853] LOG:  duration: 0.048 ms
2022-11-28 15:18:51.813 UTC [52853] LOG:  duration: 1.141 ms
2022-11-28 15:18:51.814 UTC [52853] LOG:  duration: 0.977 ms
2022-11-28 15:18:51.814 UTC [52853] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e1.first_name || ' ' || e1.last_name,
	         e2.first_name || ' ' || e2.last_name
	from managers
	            join employees e1 on managers.employee_id = e1.employee_id
	            join employees e2 on managers.manager_id = e2.employee_id
	order by e1.first_name || ' ' || e1.last_name
2022-11-28 15:18:51.815 UTC [52853] LOG:  duration: 0.365 ms
2022-11-28 15:18:51.959 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:18:51.966 UTC [52853] LOG:  duration: 0.055 ms
2022-11-28 15:18:51.966 UTC [52853] LOG:  duration: 0.010 ms
2022-11-28 15:18:51.966 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:18:51.966 UTC [52853] LOG:  duration: 0.025 ms
2022-11-28 15:20:37.039 UTC [52853] LOG:  duration: 0.026 ms
2022-11-28 15:20:37.042 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:20:37.044 UTC [52853] LOG:  duration: 0.044 ms
2022-11-28 15:20:37.053 UTC [52853] LOG:  duration: 0.083 ms
2022-11-28 15:20:37.053 UTC [52853] LOG:  duration: 0.011 ms
2022-11-28 15:20:37.053 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:20:37.053 UTC [52853] LOG:  duration: 0.026 ms
2022-11-28 15:20:37.084 UTC [52853] LOG:  duration: 0.117 ms
2022-11-28 15:20:37.084 UTC [52853] LOG:  duration: 0.053 ms
2022-11-28 15:20:37.084 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:20:37.084 UTC [52853] LOG:  duration: 0.025 ms
2022-11-28 15:20:37.122 UTC [52853] ERROR:  column reference "employee_id" is ambiguous at character 566
2022-11-28 15:20:37.122 UTC [52853] STATEMENT:  with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e.last_name as "employee", m.last_name as "manager"
	from managers
	         join employees e on employee_id = e.employee_id
	         join employees m on e.manager_id = m.employee_id
	order by employee_id
2022-11-28 15:20:37.136 UTC [52853] LOG:  duration: 0.028 ms
2022-11-28 15:20:37.144 UTC [52853] LOG:  duration: 0.052 ms
2022-11-28 15:20:37.144 UTC [52853] LOG:  duration: 0.009 ms
2022-11-28 15:20:37.144 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:20:37.144 UTC [52853] LOG:  duration: 0.025 ms
2022-11-28 15:21:03.953 UTC [52853] LOG:  duration: 0.046 ms
2022-11-28 15:21:03.957 UTC [52853] LOG:  duration: 0.039 ms
2022-11-28 15:21:03.960 UTC [52853] LOG:  duration: 0.041 ms
2022-11-28 15:21:03.972 UTC [52853] LOG:  duration: 0.072 ms
2022-11-28 15:21:03.972 UTC [52853] LOG:  duration: 0.014 ms
2022-11-28 15:21:03.972 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:03.972 UTC [52853] LOG:  duration: 0.033 ms
2022-11-28 15:21:03.995 UTC [52853] LOG:  duration: 0.350 ms
2022-11-28 15:21:03.995 UTC [52853] LOG:  duration: 0.054 ms
2022-11-28 15:21:03.995 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:21:03.995 UTC [52853] LOG:  duration: 0.024 ms
2022-11-28 15:21:04.027 UTC [52853] ERROR:  column reference "employee_id" is ambiguous at character 677
2022-11-28 15:21:04.027 UTC [52853] STATEMENT:  with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e.last_name as "employee", m.last_name as "manager"
	from managers
	         join employees e on managers.employee_id = e.employee_id
	         join employees m on managers.manager_id = m.employee_id
	order by employee_id
2022-11-28 15:21:04.039 UTC [52853] LOG:  duration: 0.056 ms
2022-11-28 15:21:04.046 UTC [52853] LOG:  duration: 0.056 ms
2022-11-28 15:21:04.046 UTC [52853] LOG:  duration: 0.011 ms
2022-11-28 15:21:04.046 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:04.046 UTC [52853] LOG:  duration: 0.026 ms
2022-11-28 15:21:17.394 UTC [52853] LOG:  duration: 0.035 ms
2022-11-28 15:21:17.396 UTC [52853] LOG:  duration: 0.036 ms
2022-11-28 15:21:17.398 UTC [52853] LOG:  duration: 0.036 ms
2022-11-28 15:21:17.411 UTC [52853] LOG:  duration: 0.115 ms
2022-11-28 15:21:17.411 UTC [52853] LOG:  duration: 0.011 ms
2022-11-28 15:21:17.411 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:17.411 UTC [52853] LOG:  duration: 0.029 ms
2022-11-28 15:21:17.434 UTC [52853] LOG:  duration: 0.121 ms
2022-11-28 15:21:17.434 UTC [52853] LOG:  duration: 0.057 ms
2022-11-28 15:21:17.434 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:21:17.434 UTC [52853] LOG:  duration: 0.025 ms
2022-11-28 15:21:17.468 UTC [52853] LOG:  duration: 0.470 ms
2022-11-28 15:21:17.469 UTC [52853] LOG:  duration: 0.475 ms
2022-11-28 15:21:17.469 UTC [52853] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e.last_name as "employee", m.last_name as "manager"
	from managers
	         join employees e on managers.employee_id = e.employee_id
	         join employees m on managers.manager_id = m.employee_id
	order by e.last_name
2022-11-28 15:21:17.469 UTC [52853] LOG:  duration: 0.285 ms
2022-11-28 15:21:17.487 UTC [52853] LOG:  duration: 1.277 ms
2022-11-28 15:21:17.491 UTC [52853] LOG:  duration: 3.681 ms
2022-11-28 15:21:17.491 UTC [52853] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16968 AS oid , 3 AS attnum UNION ALL SELECT 16968, 3) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2022-11-28 15:21:17.491 UTC [52853] LOG:  duration: 0.154 ms
2022-11-28 15:21:17.572 UTC [52853] LOG:  duration: 0.031 ms
2022-11-28 15:21:17.576 UTC [52853] LOG:  duration: 0.081 ms
2022-11-28 15:21:17.576 UTC [52853] LOG:  duration: 0.011 ms
2022-11-28 15:21:17.576 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:17.576 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:21:44.420 UTC [52853] LOG:  duration: 0.044 ms
2022-11-28 15:21:44.423 UTC [52853] LOG:  duration: 0.029 ms
2022-11-28 15:21:44.425 UTC [52853] LOG:  duration: 0.029 ms
2022-11-28 15:21:44.436 UTC [52853] LOG:  duration: 0.089 ms
2022-11-28 15:21:44.436 UTC [52853] LOG:  duration: 0.010 ms
2022-11-28 15:21:44.436 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:44.436 UTC [52853] LOG:  duration: 0.025 ms
2022-11-28 15:21:44.456 UTC [52853] LOG:  duration: 0.262 ms
2022-11-28 15:21:44.457 UTC [52853] LOG:  duration: 0.072 ms
2022-11-28 15:21:44.457 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:21:44.457 UTC [52853] LOG:  duration: 0.023 ms
2022-11-28 15:21:44.493 UTC [52853] LOG:  duration: 0.353 ms
2022-11-28 15:21:44.493 UTC [52853] LOG:  duration: 0.686 ms
2022-11-28 15:21:44.493 UTC [52853] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e.last_name as "employee", m.last_name as "manager"
	from managers
	         join employees e on managers.employee_id = e.employee_id
	         join employees m on managers.manager_id = m.employee_id
	order by m.last_name
2022-11-28 15:21:44.494 UTC [52853] LOG:  duration: 0.434 ms
2022-11-28 15:21:44.560 UTC [52853] LOG:  duration: 0.117 ms
2022-11-28 15:21:44.565 UTC [52853] LOG:  duration: 0.109 ms
2022-11-28 15:21:44.565 UTC [52853] LOG:  duration: 0.012 ms
2022-11-28 15:21:44.565 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:44.565 UTC [52853] LOG:  duration: 0.031 ms
2022-11-28 15:21:58.074 UTC [52853] LOG:  duration: 0.043 ms
2022-11-28 15:21:58.077 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:21:58.079 UTC [52853] LOG:  duration: 0.038 ms
2022-11-28 15:21:58.086 UTC [52853] LOG:  duration: 0.061 ms
2022-11-28 15:21:58.086 UTC [52853] LOG:  duration: 0.013 ms
2022-11-28 15:21:58.086 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:58.087 UTC [52853] LOG:  duration: 0.045 ms
2022-11-28 15:21:58.103 UTC [52853] LOG:  duration: 0.113 ms
2022-11-28 15:21:58.103 UTC [52853] LOG:  duration: 0.065 ms
2022-11-28 15:21:58.103 UTC [52853] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:21:58.103 UTC [52853] LOG:  duration: 0.027 ms
2022-11-28 15:21:58.128 UTC [52853] LOG:  duration: 0.267 ms
2022-11-28 15:21:58.128 UTC [52853] LOG:  duration: 0.408 ms
2022-11-28 15:21:58.128 UTC [52853] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id) as
	                   (select employee_id,
	                           manager_id
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e.last_name as "employee", m.last_name as "manager"
	from managers
	         join employees e on managers.employee_id = e.employee_id
	         join employees m on managers.manager_id = m.employee_id
2022-11-28 15:21:58.128 UTC [52853] LOG:  duration: 0.208 ms
2022-11-28 15:21:58.203 UTC [52853] LOG:  duration: 0.032 ms
2022-11-28 15:21:58.209 UTC [52853] LOG:  duration: 0.100 ms
2022-11-28 15:21:58.209 UTC [52853] LOG:  duration: 0.018 ms
2022-11-28 15:21:58.209 UTC [52853] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:21:58.209 UTC [52853] LOG:  duration: 0.033 ms
2022-11-28 15:23:01.251 UTC [52853] LOG:  disconnection: session time: 0:06:14.646 user=postgres database=tp3 host=127.0.0.1 port=40700
2022-11-28 15:40:00.948 UTC [54702] LOG:  connection received: host=127.0.0.1 port=56866
2022-11-28 15:40:00.993 UTC [54702] LOG:  connection authorized: user=postgres database=tp3
2022-11-28 15:40:01.038 UTC [54702] LOG:  duration: 0.285 ms
2022-11-28 15:40:01.038 UTC [54702] LOG:  duration: 0.012 ms
2022-11-28 15:40:01.038 UTC [54702] LOG:  execute <unnamed>: SET extra_float_digits = 3
2022-11-28 15:40:01.038 UTC [54702] LOG:  duration: 0.031 ms
2022-11-28 15:40:01.039 UTC [54702] LOG:  duration: 0.067 ms
2022-11-28 15:40:01.039 UTC [54702] LOG:  duration: 0.012 ms
2022-11-28 15:40:01.039 UTC [54702] LOG:  execute <unnamed>: SET application_name = ''
2022-11-28 15:40:01.039 UTC [54702] LOG:  duration: 0.026 ms
2022-11-28 15:40:01.095 UTC [54702] LOG:  duration: 0.284 ms
2022-11-28 15:40:01.095 UTC [54702] LOG:  duration: 0.074 ms
2022-11-28 15:40:01.095 UTC [54702] LOG:  execute <unnamed>: select version()
2022-11-28 15:40:01.095 UTC [54702] LOG:  duration: 0.023 ms
2022-11-28 15:40:01.150 UTC [54702] LOG:  duration: 0.074 ms
2022-11-28 15:40:01.150 UTC [54702] LOG:  duration: 0.012 ms
2022-11-28 15:40:01.150 UTC [54702] LOG:  execute <unnamed>: SET application_name = 'DataGrip 2022.2.5'
2022-11-28 15:40:01.150 UTC [54702] LOG:  duration: 0.030 ms
2022-11-28 15:40:01.286 UTC [54702] LOG:  duration: 0.182 ms
2022-11-28 15:40:01.286 UTC [54702] LOG:  duration: 0.009 ms
2022-11-28 15:40:01.373 UTC [54702] LOG:  duration: 0.419 ms
2022-11-28 15:40:01.373 UTC [54702] LOG:  duration: 0.064 ms
2022-11-28 15:40:01.373 UTC [54702] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:40:01.373 UTC [54702] LOG:  duration: 0.073 ms
2022-11-28 15:40:01.497 UTC [54702] LOG:  duration: 0.641 ms
2022-11-28 15:40:01.498 UTC [54702] LOG:  duration: 0.857 ms
2022-11-28 15:40:01.498 UTC [54702] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id, distance) as
	                   (select employee_id,
	                           manager_id,
	                           0
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id,
	                           managers.distance + 1
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e.last_name as "employee", m.last_name as "manager", managers.distance
	from managers
	         join employees e on managers.employee_id = e.employee_id
	         join employees m on managers.manager_id = m.employee_id
2022-11-28 15:40:01.498 UTC [54702] LOG:  duration: 0.215 ms
2022-11-28 15:40:01.516 UTC [54702] LOG:  duration: 0.970 ms
2022-11-28 15:40:01.519 UTC [54702] LOG:  duration: 2.746 ms
2022-11-28 15:40:01.519 UTC [54702] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16968 AS oid , 3 AS attnum UNION ALL SELECT 16968, 3) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2022-11-28 15:40:01.519 UTC [54702] LOG:  duration: 0.072 ms
2022-11-28 15:40:01.681 UTC [54702] LOG:  duration: 0.024 ms
2022-11-28 15:40:01.681 UTC [54702] LOG:  duration: 0.005 ms
2022-11-28 15:40:01.686 UTC [54702] LOG:  duration: 0.044 ms
2022-11-28 15:40:01.686 UTC [54702] LOG:  duration: 0.008 ms
2022-11-28 15:40:01.686 UTC [54702] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:40:01.686 UTC [54702] LOG:  duration: 0.021 ms
2022-11-28 15:40:11.995 UTC [54702] LOG:  duration: 0.056 ms
2022-11-28 15:40:11.995 UTC [54702] LOG:  duration: 0.010 ms
2022-11-28 15:40:11.998 UTC [54702] LOG:  duration: 0.057 ms
2022-11-28 15:40:11.998 UTC [54702] LOG:  duration: 0.009 ms
2022-11-28 15:40:12.002 UTC [54702] LOG:  duration: 0.099 ms
2022-11-28 15:40:12.002 UTC [54702] LOG:  duration: 0.011 ms
2022-11-28 15:40:12.019 UTC [54702] LOG:  duration: 0.087 ms
2022-11-28 15:40:12.019 UTC [54702] LOG:  duration: 0.011 ms
2022-11-28 15:40:12.019 UTC [54702] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:40:12.019 UTC [54702] LOG:  duration: 0.027 ms
2022-11-28 15:40:12.061 UTC [54702] LOG:  duration: 0.178 ms
2022-11-28 15:40:12.061 UTC [54702] LOG:  duration: 0.061 ms
2022-11-28 15:40:12.061 UTC [54702] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2022-11-28 15:40:12.061 UTC [54702] LOG:  duration: 0.031 ms
2022-11-28 15:40:12.111 UTC [54702] LOG:  duration: 0.421 ms
2022-11-28 15:40:12.112 UTC [54702] LOG:  duration: 0.818 ms
2022-11-28 15:40:12.112 UTC [54702] LOG:  execute <unnamed>: with recursive managers(employee_id, manager_id, distance) as
	                   (select employee_id,
	                           manager_id,
	                           1
	                    from employees
	                    where manager_id is not null
	                    union
	                    select employees.employee_id,
	                           managers.manager_id,
	                           managers.distance + 1
	                    from employees
	                             join managers on employees.manager_id = managers.employee_id)
	select e.last_name as "employee", m.last_name as "manager", managers.distance
	from managers
	         join employees e on managers.employee_id = e.employee_id
	         join employees m on managers.manager_id = m.employee_id
2022-11-28 15:40:12.113 UTC [54702] LOG:  duration: 0.398 ms
2022-11-28 15:40:12.229 UTC [54702] LOG:  duration: 0.034 ms
2022-11-28 15:40:12.238 UTC [54702] LOG:  duration: 0.100 ms
2022-11-28 15:40:12.238 UTC [54702] LOG:  duration: 0.008 ms
2022-11-28 15:40:12.238 UTC [54702] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2022-11-28 15:40:12.238 UTC [54702] LOG:  duration: 0.026 ms
2022-11-29 05:58:46.297 UTC [54702] LOG:  disconnection: session time: 14:18:45.349 user=postgres database=tp3 host=127.0.0.1 port=56866
